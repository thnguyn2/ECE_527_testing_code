-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adder_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    a_empty_n : IN STD_LOGIC;
    a_read : OUT STD_LOGIC;
    b_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    b_empty_n : IN STD_LOGIC;
    b_read : OUT STD_LOGIC;
    c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_full_n : IN STD_LOGIC;
    c_write : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of adder_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "adder_top,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.860000,HLS_SYN_LAT=11117,HLS_SYN_TPT=none,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=587,HLS_SYN_LUT=1583}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_pp0_stg0_fsm_6 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_pp1_stg0_fsm_7 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_st24_fsm_8 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_3E8 : STD_LOGIC_VECTOR (9 downto 0) := "1111101000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv21_667 : STD_LOGIC_VECTOR (20 downto 0) := "000000000011001100111";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_25 : BOOLEAN;
    signal indvars_iv2_reg_920 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_1_reg_931 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_2_reg_942 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_57 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it13 : STD_LOGIC := '0';
    signal tmp_7_reg_1684 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_94 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it14 : STD_LOGIC := '0';
    signal phi_mul1_reg_954 : STD_LOGIC_VECTOR (20 downto 0);
    signal exitcond2_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_125 : BOOLEAN;
    signal i_3_fu_976_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_3_reg_1424 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul_fu_987_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal next_mul_reg_1433 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_6_reg_1438 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_1009_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1443 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_148 : BOOLEAN;
    signal grp_fu_993_ap_done : STD_LOGIC;
    signal newIndex3_fu_1013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_reg_1447 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond1_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_165 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal indvars_iv_next9_fu_1032_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1480 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex5_fu_1047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex5_reg_1484 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_1_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_1_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex9_fu_1068_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex9_reg_1503 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_2_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_2_reg_1518 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex_fu_1089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex_reg_1522 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_3_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_3_reg_1537 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex4_fu_1110_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex4_reg_1541 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_4_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_4_reg_1556 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex8_fu_1131_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex8_reg_1560 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_5_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_5_reg_1575 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex1_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex1_reg_1579 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_6_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_6_reg_1594 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex6_fu_1173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex6_reg_1598 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_7_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_7_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex10_fu_1194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex10_reg_1617 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_8_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_8_reg_1632 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex11_fu_1215_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex11_reg_1636 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_9_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_9_reg_1651 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex2_fu_1236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex2_reg_1655 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_4_9_fu_1242_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_fu_1318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1675 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_1324_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_reg_1679 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_1334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1684_pp1_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul1_fu_1339_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_8_reg_1693 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it5 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it6 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it7 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it8 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it9 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it10 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_1693_pp1_it11 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_1378_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1748 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_0_ce0 : STD_LOGIC;
    signal arrayA_0_we0 : STD_LOGIC;
    signal arrayA_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_1_ce0 : STD_LOGIC;
    signal arrayA_1_we0 : STD_LOGIC;
    signal arrayA_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_2_ce0 : STD_LOGIC;
    signal arrayA_2_we0 : STD_LOGIC;
    signal arrayA_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_3_ce0 : STD_LOGIC;
    signal arrayA_3_we0 : STD_LOGIC;
    signal arrayA_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_4_ce0 : STD_LOGIC;
    signal arrayA_4_we0 : STD_LOGIC;
    signal arrayA_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_5_ce0 : STD_LOGIC;
    signal arrayA_5_we0 : STD_LOGIC;
    signal arrayA_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_6_ce0 : STD_LOGIC;
    signal arrayA_6_we0 : STD_LOGIC;
    signal arrayA_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_7_ce0 : STD_LOGIC;
    signal arrayA_7_we0 : STD_LOGIC;
    signal arrayA_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_8_ce0 : STD_LOGIC;
    signal arrayA_8_we0 : STD_LOGIC;
    signal arrayA_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayA_9_ce0 : STD_LOGIC;
    signal arrayA_9_we0 : STD_LOGIC;
    signal arrayA_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayA_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_0_ce0 : STD_LOGIC;
    signal arrayB_0_we0 : STD_LOGIC;
    signal arrayB_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_1_ce0 : STD_LOGIC;
    signal arrayB_1_we0 : STD_LOGIC;
    signal arrayB_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_2_ce0 : STD_LOGIC;
    signal arrayB_2_we0 : STD_LOGIC;
    signal arrayB_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_3_ce0 : STD_LOGIC;
    signal arrayB_3_we0 : STD_LOGIC;
    signal arrayB_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_4_ce0 : STD_LOGIC;
    signal arrayB_4_we0 : STD_LOGIC;
    signal arrayB_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_5_ce0 : STD_LOGIC;
    signal arrayB_5_we0 : STD_LOGIC;
    signal arrayB_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_6_ce0 : STD_LOGIC;
    signal arrayB_6_we0 : STD_LOGIC;
    signal arrayB_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_7_ce0 : STD_LOGIC;
    signal arrayB_7_we0 : STD_LOGIC;
    signal arrayB_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_8_ce0 : STD_LOGIC;
    signal arrayB_8_we0 : STD_LOGIC;
    signal arrayB_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayB_9_ce0 : STD_LOGIC;
    signal arrayB_9_we0 : STD_LOGIC;
    signal arrayB_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayB_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_0_ce0 : STD_LOGIC;
    signal arrayC_0_we0 : STD_LOGIC;
    signal arrayC_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_1_ce0 : STD_LOGIC;
    signal arrayC_1_we0 : STD_LOGIC;
    signal arrayC_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_2_ce0 : STD_LOGIC;
    signal arrayC_2_we0 : STD_LOGIC;
    signal arrayC_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_3_ce0 : STD_LOGIC;
    signal arrayC_3_we0 : STD_LOGIC;
    signal arrayC_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_4_ce0 : STD_LOGIC;
    signal arrayC_4_we0 : STD_LOGIC;
    signal arrayC_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_5_ce0 : STD_LOGIC;
    signal arrayC_5_we0 : STD_LOGIC;
    signal arrayC_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_6_ce0 : STD_LOGIC;
    signal arrayC_6_we0 : STD_LOGIC;
    signal arrayC_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_7_ce0 : STD_LOGIC;
    signal arrayC_7_we0 : STD_LOGIC;
    signal arrayC_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_8_ce0 : STD_LOGIC;
    signal arrayC_8_we0 : STD_LOGIC;
    signal arrayC_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayC_9_ce0 : STD_LOGIC;
    signal arrayC_9_we0 : STD_LOGIC;
    signal arrayC_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayC_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_897 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_672 : BOOLEAN;
    signal phi_mul_reg_909 : STD_LOGIC_VECTOR (20 downto 0);
    signal i_2_phi_fu_946_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_703 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_720 : BOOLEAN;
    signal newIndex7_fu_1361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_8_fu_1304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_7_fu_1297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_6_fu_1290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_5_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_4_fu_1276_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_3_fu_1269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_2_fu_1262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_1_fu_1255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1248_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_9_fu_1311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_cast3_fu_966_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_993_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_993_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_993_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_cast2_fu_1038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_s_fu_1053_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_cast_fu_1059_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_1_fu_1074_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_1_cast_fu_1080_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_2_fu_1095_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_2_cast_fu_1101_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_3_fu_1116_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_3_cast_fu_1122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_4_fu_1137_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_4_cast_fu_1143_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_5_fu_1158_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_5_cast_fu_1164_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_6_fu_1179_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_6_cast_fu_1185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_7_fu_1200_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_7_cast_fu_1206_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_8_fu_1221_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_4_8_cast_fu_1227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_cast1_fu_1330_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1345_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1345_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1345_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_1378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1378_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_993_ap_start : STD_LOGIC;
    signal grp_fu_993_ce : STD_LOGIC;
    signal grp_fu_1345_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st24_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_1214 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component adder_top_urem_10ns_5ns_10_14_seq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component adder_top_urem_10ns_5ns_10_14 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component adder_top_mux_10to1_sel32_32_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adder_top_arrayA_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    arrayA_0_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_0_address0,
        ce0 => arrayA_0_ce0,
        we0 => arrayA_0_we0,
        d0 => arrayA_0_d0,
        q0 => arrayA_0_q0);

    arrayA_1_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_1_address0,
        ce0 => arrayA_1_ce0,
        we0 => arrayA_1_we0,
        d0 => arrayA_1_d0,
        q0 => arrayA_1_q0);

    arrayA_2_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_2_address0,
        ce0 => arrayA_2_ce0,
        we0 => arrayA_2_we0,
        d0 => arrayA_2_d0,
        q0 => arrayA_2_q0);

    arrayA_3_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_3_address0,
        ce0 => arrayA_3_ce0,
        we0 => arrayA_3_we0,
        d0 => arrayA_3_d0,
        q0 => arrayA_3_q0);

    arrayA_4_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_4_address0,
        ce0 => arrayA_4_ce0,
        we0 => arrayA_4_we0,
        d0 => arrayA_4_d0,
        q0 => arrayA_4_q0);

    arrayA_5_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_5_address0,
        ce0 => arrayA_5_ce0,
        we0 => arrayA_5_we0,
        d0 => arrayA_5_d0,
        q0 => arrayA_5_q0);

    arrayA_6_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_6_address0,
        ce0 => arrayA_6_ce0,
        we0 => arrayA_6_we0,
        d0 => arrayA_6_d0,
        q0 => arrayA_6_q0);

    arrayA_7_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_7_address0,
        ce0 => arrayA_7_ce0,
        we0 => arrayA_7_we0,
        d0 => arrayA_7_d0,
        q0 => arrayA_7_q0);

    arrayA_8_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_8_address0,
        ce0 => arrayA_8_ce0,
        we0 => arrayA_8_we0,
        d0 => arrayA_8_d0,
        q0 => arrayA_8_q0);

    arrayA_9_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayA_9_address0,
        ce0 => arrayA_9_ce0,
        we0 => arrayA_9_we0,
        d0 => arrayA_9_d0,
        q0 => arrayA_9_q0);

    arrayB_0_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_0_address0,
        ce0 => arrayB_0_ce0,
        we0 => arrayB_0_we0,
        d0 => arrayB_0_d0,
        q0 => arrayB_0_q0);

    arrayB_1_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_1_address0,
        ce0 => arrayB_1_ce0,
        we0 => arrayB_1_we0,
        d0 => arrayB_1_d0,
        q0 => arrayB_1_q0);

    arrayB_2_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_2_address0,
        ce0 => arrayB_2_ce0,
        we0 => arrayB_2_we0,
        d0 => arrayB_2_d0,
        q0 => arrayB_2_q0);

    arrayB_3_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_3_address0,
        ce0 => arrayB_3_ce0,
        we0 => arrayB_3_we0,
        d0 => arrayB_3_d0,
        q0 => arrayB_3_q0);

    arrayB_4_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_4_address0,
        ce0 => arrayB_4_ce0,
        we0 => arrayB_4_we0,
        d0 => arrayB_4_d0,
        q0 => arrayB_4_q0);

    arrayB_5_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_5_address0,
        ce0 => arrayB_5_ce0,
        we0 => arrayB_5_we0,
        d0 => arrayB_5_d0,
        q0 => arrayB_5_q0);

    arrayB_6_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_6_address0,
        ce0 => arrayB_6_ce0,
        we0 => arrayB_6_we0,
        d0 => arrayB_6_d0,
        q0 => arrayB_6_q0);

    arrayB_7_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_7_address0,
        ce0 => arrayB_7_ce0,
        we0 => arrayB_7_we0,
        d0 => arrayB_7_d0,
        q0 => arrayB_7_q0);

    arrayB_8_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_8_address0,
        ce0 => arrayB_8_ce0,
        we0 => arrayB_8_we0,
        d0 => arrayB_8_d0,
        q0 => arrayB_8_q0);

    arrayB_9_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayB_9_address0,
        ce0 => arrayB_9_ce0,
        we0 => arrayB_9_we0,
        d0 => arrayB_9_d0,
        q0 => arrayB_9_q0);

    arrayC_0_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_0_address0,
        ce0 => arrayC_0_ce0,
        we0 => arrayC_0_we0,
        d0 => arrayC_0_d0,
        q0 => arrayC_0_q0);

    arrayC_1_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_1_address0,
        ce0 => arrayC_1_ce0,
        we0 => arrayC_1_we0,
        d0 => arrayC_1_d0,
        q0 => arrayC_1_q0);

    arrayC_2_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_2_address0,
        ce0 => arrayC_2_ce0,
        we0 => arrayC_2_we0,
        d0 => arrayC_2_d0,
        q0 => arrayC_2_q0);

    arrayC_3_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_3_address0,
        ce0 => arrayC_3_ce0,
        we0 => arrayC_3_we0,
        d0 => arrayC_3_d0,
        q0 => arrayC_3_q0);

    arrayC_4_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_4_address0,
        ce0 => arrayC_4_ce0,
        we0 => arrayC_4_we0,
        d0 => arrayC_4_d0,
        q0 => arrayC_4_q0);

    arrayC_5_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_5_address0,
        ce0 => arrayC_5_ce0,
        we0 => arrayC_5_we0,
        d0 => arrayC_5_d0,
        q0 => arrayC_5_q0);

    arrayC_6_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_6_address0,
        ce0 => arrayC_6_ce0,
        we0 => arrayC_6_we0,
        d0 => arrayC_6_d0,
        q0 => arrayC_6_q0);

    arrayC_7_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_7_address0,
        ce0 => arrayC_7_ce0,
        we0 => arrayC_7_we0,
        d0 => arrayC_7_d0,
        q0 => arrayC_7_q0);

    arrayC_8_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_8_address0,
        ce0 => arrayC_8_ce0,
        we0 => arrayC_8_we0,
        d0 => arrayC_8_d0,
        q0 => arrayC_8_q0);

    arrayC_9_U : component adder_top_arrayA_0
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => arrayC_9_address0,
        ce0 => arrayC_9_ce0,
        we0 => arrayC_9_we0,
        d0 => arrayC_9_d0,
        q0 => arrayC_9_q0);

    adder_top_urem_10ns_5ns_10_14_seq_U1 : component adder_top_urem_10ns_5ns_10_14_seq
    generic map (
        ID => 1,
        NUM_STAGE => 14,
        din0_WIDTH => 10,
        din1_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_993_ap_start,
        done => grp_fu_993_ap_done,
        din0 => grp_fu_993_p0,
        din1 => grp_fu_993_p1,
        ce => grp_fu_993_ce,
        dout => grp_fu_993_p2);

    adder_top_urem_10ns_5ns_10_14_U2 : component adder_top_urem_10ns_5ns_10_14
    generic map (
        ID => 1,
        NUM_STAGE => 14,
        din0_WIDTH => 10,
        din1_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1345_p0,
        din1 => grp_fu_1345_p1,
        ce => grp_fu_1345_ce,
        dout => grp_fu_1345_p2);

    adder_top_mux_10to1_sel32_32_1_U3 : component adder_top_mux_10to1_sel32_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_2_fu_1378_p1,
        din2 => tmp_2_fu_1378_p2,
        din3 => tmp_2_fu_1378_p3,
        din4 => tmp_2_fu_1378_p4,
        din5 => tmp_2_fu_1378_p5,
        din6 => tmp_2_fu_1378_p6,
        din7 => tmp_2_fu_1378_p7,
        din8 => tmp_2_fu_1378_p8,
        din9 => tmp_2_fu_1378_p9,
        din10 => tmp_2_fu_1378_p10,
        din11 => tmp_2_fu_1378_p11,
        dout => tmp_2_fu_1378_p12);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not((ap_const_lv1_0 = exitcond1_fu_1026_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_970_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_970_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not((ap_const_lv1_0 = exitcond1_fu_1026_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and not((ap_const_lv1_0 = exitcond_fu_1318_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_1026_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and (ap_const_lv1_0 = exitcond_fu_1318_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_1026_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and not((ap_const_lv1_0 = exitcond_fu_1318_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it10 assign process. --
    ap_reg_ppiten_pp1_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it10 <= ap_reg_ppiten_pp1_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it11 assign process. --
    ap_reg_ppiten_pp1_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it11 <= ap_reg_ppiten_pp1_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it12 assign process. --
    ap_reg_ppiten_pp1_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it12 <= ap_reg_ppiten_pp1_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it13 assign process. --
    ap_reg_ppiten_pp1_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it13 <= ap_reg_ppiten_pp1_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it14 assign process. --
    ap_reg_ppiten_pp1_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it14 <= ap_reg_ppiten_pp1_it13;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_1026_p2)))) then 
                    ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it3 assign process. --
    ap_reg_ppiten_pp1_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it4 assign process. --
    ap_reg_ppiten_pp1_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it5 assign process. --
    ap_reg_ppiten_pp1_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it6 assign process. --
    ap_reg_ppiten_pp1_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it7 assign process. --
    ap_reg_ppiten_pp1_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it8 assign process. --
    ap_reg_ppiten_pp1_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it8 <= ap_reg_ppiten_pp1_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it9 assign process. --
    ap_reg_ppiten_pp1_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then 
                    ap_reg_ppiten_pp1_it9 <= ap_reg_ppiten_pp1_it8;
                end if; 
            end if;
        end if;
    end process;


    -- i_1_reg_931 assign process. --
    i_1_reg_931_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_970_p2)))) then 
                i_1_reg_931 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond1_fu_1026_p2))) then 
                i_1_reg_931 <= i_4_9_fu_1242_p2;
            end if; 
        end if;
    end process;

    -- i_2_reg_942 assign process. --
    i_2_reg_942_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_1026_p2)))) then 
                i_2_reg_942 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and (ap_const_lv1_0 = exitcond_reg_1675))) then 
                i_2_reg_942 <= i_4_reg_1679;
            end if; 
        end if;
    end process;

    -- i_reg_897 assign process. --
    i_reg_897_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                i_reg_897 <= i_3_reg_1424;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_897 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- indvars_iv2_reg_920 assign process. --
    indvars_iv2_reg_920_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond2_fu_970_p2)))) then 
                indvars_iv2_reg_920 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond1_fu_1026_p2))) then 
                indvars_iv2_reg_920 <= indvars_iv_next9_fu_1032_p2;
            end if; 
        end if;
    end process;

    -- phi_mul1_reg_954 assign process. --
    phi_mul1_reg_954_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_1026_p2)))) then 
                phi_mul1_reg_954 <= ap_const_lv21_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and (ap_const_lv1_0 = exitcond_fu_1318_p2))) then 
                phi_mul1_reg_954 <= next_mul1_fu_1339_p2;
            end if; 
        end if;
    end process;

    -- phi_mul_reg_909 assign process. --
    phi_mul_reg_909_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                phi_mul_reg_909 <= next_mul_reg_1433;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                phi_mul_reg_909 <= ap_const_lv21_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))))) then
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it1 <= tmp_7_reg_1684;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it1 <= tmp_8_reg_1693;
                exitcond_reg_1675 <= exitcond_fu_1318_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))) then
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it10 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it9;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it11 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it10;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it12 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it11;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it13 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it12;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it2 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it1;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it3 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it2;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it4 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it3;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it5 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it4;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it6 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it5;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it7 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it6;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it8 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it7;
                ap_reg_ppstg_tmp_7_reg_1684_pp1_it9 <= ap_reg_ppstg_tmp_7_reg_1684_pp1_it8;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it10 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it9;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it11 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it10;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it2 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it1;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it3 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it2;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it4 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it3;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it5 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it4;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it6 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it5;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it7 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it6;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it8 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it7;
                ap_reg_ppstg_tmp_8_reg_1693_pp1_it9 <= ap_reg_ppstg_tmp_8_reg_1693_pp1_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_3_reg_1424 <= i_3_fu_976_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))))) then
                i_4_reg_1679 <= i_4_fu_1324_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_7_fu_1189_p2)))) then
                    newIndex10_reg_1617(6 downto 0) <= newIndex10_fu_1194_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_8_fu_1210_p2)))) then
                    newIndex11_reg_1636(6 downto 0) <= newIndex11_fu_1215_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_5_fu_1147_p2)))) then
                    newIndex1_reg_1579(6 downto 0) <= newIndex1_fu_1152_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_9_fu_1231_p2)))) then
                    newIndex2_reg_1655(6 downto 0) <= newIndex2_fu_1236_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))))) then
                    newIndex3_reg_1447(6 downto 0) <= newIndex3_fu_1013_p1(6 downto 0);
                tmp_1_reg_1443 <= tmp_1_fu_1009_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_3_fu_1105_p2)))) then
                    newIndex4_reg_1541(6 downto 0) <= newIndex4_fu_1110_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_s_fu_1042_p2)))) then
                    newIndex5_reg_1484(6 downto 0) <= newIndex5_fu_1047_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_6_fu_1168_p2)))) then
                    newIndex6_reg_1598(6 downto 0) <= newIndex6_fu_1173_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_4_fu_1126_p2)))) then
                    newIndex8_reg_1560(6 downto 0) <= newIndex8_fu_1131_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_1_fu_1063_p2)))) then
                    newIndex9_reg_1503(6 downto 0) <= newIndex9_fu_1068_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2) and not((ap_const_lv1_0 = tmp_3_2_fu_1084_p2)))) then
                    newIndex_reg_1522(6 downto 0) <= newIndex_fu_1089_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_970_p2))) then
                next_mul_reg_1433 <= next_mul_fu_987_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_7_reg_1684_pp1_it12)))) then
                tmp_2_reg_1748 <= tmp_2_fu_1378_p12;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_1026_p2))) then
                tmp_3_1_reg_1499 <= tmp_3_1_fu_1063_p2;
                tmp_3_2_reg_1518 <= tmp_3_2_fu_1084_p2;
                tmp_3_3_reg_1537 <= tmp_3_3_fu_1105_p2;
                tmp_3_4_reg_1556 <= tmp_3_4_fu_1126_p2;
                tmp_3_5_reg_1575 <= tmp_3_5_fu_1147_p2;
                tmp_3_6_reg_1594 <= tmp_3_6_fu_1168_p2;
                tmp_3_7_reg_1613 <= tmp_3_7_fu_1189_p2;
                tmp_3_8_reg_1632 <= tmp_3_8_fu_1210_p2;
                tmp_3_9_reg_1651 <= tmp_3_9_fu_1231_p2;
                tmp_s_reg_1480 <= tmp_s_fu_1042_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_970_p2) and not((ap_const_lv1_0 = tmp_fu_982_p2)))) then
                tmp_6_reg_1438 <= phi_mul_reg_909(20 downto 14);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and (ap_const_lv1_0 = exitcond_fu_1318_p2))) then
                tmp_7_reg_1684 <= tmp_7_fu_1334_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and (ap_const_lv1_0 = exitcond_fu_1318_p2) and not((ap_const_lv1_0 = tmp_7_fu_1334_p2)))) then
                tmp_8_reg_1693 <= phi_mul1_reg_954(20 downto 14);
            end if;
        end if;
    end process;
    newIndex3_reg_1447(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex5_reg_1484(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex9_reg_1503(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex_reg_1522(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex4_reg_1541(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex8_reg_1560(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex1_reg_1579(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex6_reg_1598(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex10_reg_1617(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex11_reg_1636(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    newIndex2_reg_1655(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, a_empty_n, b_empty_n, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it13, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, exitcond2_fu_970_p2, tmp_fu_982_p2, grp_fu_993_ap_done, exitcond1_fu_1026_p2, ap_reg_ppiten_pp0_it0, exitcond_fu_1318_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (((ap_const_lv1_0 = exitcond2_fu_970_p2) and (ap_const_lv1_0 = tmp_fu_982_p2))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                elsif (((ap_const_lv1_0 = exitcond2_fu_970_p2) and not((ap_const_lv1_0 = tmp_fu_982_p2)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_6;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((b_empty_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_pp0_stg0_fsm_6 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_1026_p2))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_7;
                end if;
            when ap_ST_pp1_stg0_fsm_7 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it14) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it13)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and not((ap_const_lv1_0 = exitcond_fu_1318_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_7;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it14) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it13))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))) and not((ap_const_lv1_0 = exitcond_fu_1318_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_st24_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_7;
                end if;
            when ap_ST_st24_fsm_8 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    -- a_read assign process. --
    a_read_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))))) then 
            a_read <= ap_const_logic_1;
        else 
            a_read <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_sig_cseq_ST_st24_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st24_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1214 assign process. --
    ap_sig_bdd_1214_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1214 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_125 assign process. --
    ap_sig_bdd_125_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_125 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_148 assign process. --
    ap_sig_bdd_148_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_148 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_165 assign process. --
    ap_sig_bdd_165_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_165 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_25 assign process. --
    ap_sig_bdd_25_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_25 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_57 assign process. --
    ap_sig_bdd_57_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_57 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_672 assign process. --
    ap_sig_bdd_672_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_672 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_703 assign process. --
    ap_sig_bdd_703_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_703 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_720 assign process. --
    ap_sig_bdd_720_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_720 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_94 assign process. --
    ap_sig_bdd_94_assign_proc : process(c_full_n, ap_reg_ppstg_tmp_7_reg_1684_pp1_it13)
    begin
                ap_sig_bdd_94 <= ((c_full_n = ap_const_logic_0) and not((ap_reg_ppstg_tmp_7_reg_1684_pp1_it13 = ap_const_lv1_0)));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_6 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_6_assign_proc : process(ap_sig_bdd_165)
    begin
        if (ap_sig_bdd_165) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_7 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_7_assign_proc : process(ap_sig_bdd_57)
    begin
        if (ap_sig_bdd_57) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_25)
    begin
        if (ap_sig_bdd_25) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st24_fsm_8 assign process. --
    ap_sig_cseq_ST_st24_fsm_8_assign_proc : process(ap_sig_bdd_1214)
    begin
        if (ap_sig_bdd_1214) then 
            ap_sig_cseq_ST_st24_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st24_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_125)
    begin
        if (ap_sig_bdd_125) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_148)
    begin
        if (ap_sig_bdd_148) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_703)
    begin
        if (ap_sig_bdd_703) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_720)
    begin
        if (ap_sig_bdd_720) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_672)
    begin
        if (ap_sig_bdd_672) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_0_address0 assign process. --
    arrayA_0_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex5_fu_1047_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_0_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_0_address0 <= newIndex5_fu_1047_p1(7 - 1 downto 0);
        else 
            arrayA_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_0_ce0 assign process. --
    arrayA_0_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_0_ce0 <= ap_const_logic_1;
        else 
            arrayA_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_0_d0 <= a_dout;

    -- arrayA_0_we0 assign process. --
    arrayA_0_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_0)))) then 
            arrayA_0_we0 <= ap_const_logic_1;
        else 
            arrayA_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_1_address0 assign process. --
    arrayA_1_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex9_fu_1068_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_1_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_1_address0 <= newIndex9_fu_1068_p1(7 - 1 downto 0);
        else 
            arrayA_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_1_ce0 assign process. --
    arrayA_1_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_1_ce0 <= ap_const_logic_1;
        else 
            arrayA_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_1_d0 <= a_dout;

    -- arrayA_1_we0 assign process. --
    arrayA_1_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_1)))) then 
            arrayA_1_we0 <= ap_const_logic_1;
        else 
            arrayA_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_2_address0 assign process. --
    arrayA_2_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex_fu_1089_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_2_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_2_address0 <= newIndex_fu_1089_p1(7 - 1 downto 0);
        else 
            arrayA_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_2_ce0 assign process. --
    arrayA_2_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_2_ce0 <= ap_const_logic_1;
        else 
            arrayA_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_2_d0 <= a_dout;

    -- arrayA_2_we0 assign process. --
    arrayA_2_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_2)))) then 
            arrayA_2_we0 <= ap_const_logic_1;
        else 
            arrayA_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_3_address0 assign process. --
    arrayA_3_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex4_fu_1110_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_3_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_3_address0 <= newIndex4_fu_1110_p1(7 - 1 downto 0);
        else 
            arrayA_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_3_ce0 assign process. --
    arrayA_3_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_3_ce0 <= ap_const_logic_1;
        else 
            arrayA_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_3_d0 <= a_dout;

    -- arrayA_3_we0 assign process. --
    arrayA_3_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_3)))) then 
            arrayA_3_we0 <= ap_const_logic_1;
        else 
            arrayA_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_4_address0 assign process. --
    arrayA_4_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex8_fu_1131_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_4_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_4_address0 <= newIndex8_fu_1131_p1(7 - 1 downto 0);
        else 
            arrayA_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_4_ce0 assign process. --
    arrayA_4_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_4_ce0 <= ap_const_logic_1;
        else 
            arrayA_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_4_d0 <= a_dout;

    -- arrayA_4_we0 assign process. --
    arrayA_4_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_4)))) then 
            arrayA_4_we0 <= ap_const_logic_1;
        else 
            arrayA_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_5_address0 assign process. --
    arrayA_5_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex1_fu_1152_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_5_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_5_address0 <= newIndex1_fu_1152_p1(7 - 1 downto 0);
        else 
            arrayA_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_5_ce0 assign process. --
    arrayA_5_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_5_ce0 <= ap_const_logic_1;
        else 
            arrayA_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_5_d0 <= a_dout;

    -- arrayA_5_we0 assign process. --
    arrayA_5_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_5)))) then 
            arrayA_5_we0 <= ap_const_logic_1;
        else 
            arrayA_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_6_address0 assign process. --
    arrayA_6_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex6_fu_1173_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_6_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_6_address0 <= newIndex6_fu_1173_p1(7 - 1 downto 0);
        else 
            arrayA_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_6_ce0 assign process. --
    arrayA_6_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_6_ce0 <= ap_const_logic_1;
        else 
            arrayA_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_6_d0 <= a_dout;

    -- arrayA_6_we0 assign process. --
    arrayA_6_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_6)))) then 
            arrayA_6_we0 <= ap_const_logic_1;
        else 
            arrayA_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_7_address0 assign process. --
    arrayA_7_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex10_fu_1194_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_7_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_7_address0 <= newIndex10_fu_1194_p1(7 - 1 downto 0);
        else 
            arrayA_7_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_7_ce0 assign process. --
    arrayA_7_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_7_ce0 <= ap_const_logic_1;
        else 
            arrayA_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_7_d0 <= a_dout;

    -- arrayA_7_we0 assign process. --
    arrayA_7_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_7)))) then 
            arrayA_7_we0 <= ap_const_logic_1;
        else 
            arrayA_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_8_address0 assign process. --
    arrayA_8_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex11_fu_1215_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_8_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_8_address0 <= newIndex11_fu_1215_p1(7 - 1 downto 0);
        else 
            arrayA_8_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_8_ce0 assign process. --
    arrayA_8_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_8_ce0 <= ap_const_logic_1;
        else 
            arrayA_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_8_d0 <= a_dout;

    -- arrayA_8_we0 assign process. --
    arrayA_8_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and (tmp_1_fu_1009_p1 = ap_const_lv5_8)))) then 
            arrayA_8_we0 <= ap_const_logic_1;
        else 
            arrayA_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayA_9_address0 assign process. --
    arrayA_9_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, newIndex3_fu_1013_p1, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex2_fu_1236_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            arrayA_9_address0 <= newIndex3_fu_1013_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayA_9_address0 <= newIndex2_fu_1236_p1(7 - 1 downto 0);
        else 
            arrayA_9_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayA_9_ce0 assign process. --
    arrayA_9_ce0_assign_proc : process(a_empty_n, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
            arrayA_9_ce0 <= ap_const_logic_1;
        else 
            arrayA_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayA_9_d0 <= a_dout;

    -- arrayA_9_we0 assign process. --
    arrayA_9_we0_assign_proc : process(a_empty_n, tmp_1_fu_1009_p1, ap_sig_cseq_ST_st3_fsm_2, grp_fu_993_ap_done)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(((a_empty_n = ap_const_logic_0) or (ap_const_logic_0 = grp_fu_993_ap_done))) and not((tmp_1_fu_1009_p1 = ap_const_lv5_8)) and not((tmp_1_fu_1009_p1 = ap_const_lv5_7)) and not((tmp_1_fu_1009_p1 = ap_const_lv5_6)) and not((tmp_1_fu_1009_p1 = ap_const_lv5_5)) and not((tmp_1_fu_1009_p1 = ap_const_lv5_4)) and not((tmp_1_fu_1009_p1 = ap_const_lv5_3)) and not((tmp_1_fu_1009_p1 = ap_const_lv5_2)) and not((tmp_1_fu_1009_p1 = ap_const_lv5_1)) and not((tmp_1_fu_1009_p1 = ap_const_lv5_0))))) then 
            arrayA_9_we0 <= ap_const_logic_1;
        else 
            arrayA_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_0_address0 assign process. --
    arrayB_0_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex5_fu_1047_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_0_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_0_address0 <= newIndex5_fu_1047_p1(7 - 1 downto 0);
        else 
            arrayB_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_0_ce0 assign process. --
    arrayB_0_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_0_ce0 <= ap_const_logic_1;
        else 
            arrayB_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_0_d0 <= b_dout;

    -- arrayB_0_we0 assign process. --
    arrayB_0_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_0)))) then 
            arrayB_0_we0 <= ap_const_logic_1;
        else 
            arrayB_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_1_address0 assign process. --
    arrayB_1_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex9_fu_1068_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_1_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_1_address0 <= newIndex9_fu_1068_p1(7 - 1 downto 0);
        else 
            arrayB_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_1_ce0 assign process. --
    arrayB_1_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_1_ce0 <= ap_const_logic_1;
        else 
            arrayB_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_1_d0 <= b_dout;

    -- arrayB_1_we0 assign process. --
    arrayB_1_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_1)))) then 
            arrayB_1_we0 <= ap_const_logic_1;
        else 
            arrayB_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_2_address0 assign process. --
    arrayB_2_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex_fu_1089_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_2_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_2_address0 <= newIndex_fu_1089_p1(7 - 1 downto 0);
        else 
            arrayB_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_2_ce0 assign process. --
    arrayB_2_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_2_ce0 <= ap_const_logic_1;
        else 
            arrayB_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_2_d0 <= b_dout;

    -- arrayB_2_we0 assign process. --
    arrayB_2_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_2)))) then 
            arrayB_2_we0 <= ap_const_logic_1;
        else 
            arrayB_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_3_address0 assign process. --
    arrayB_3_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex4_fu_1110_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_3_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_3_address0 <= newIndex4_fu_1110_p1(7 - 1 downto 0);
        else 
            arrayB_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_3_ce0 assign process. --
    arrayB_3_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_3_ce0 <= ap_const_logic_1;
        else 
            arrayB_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_3_d0 <= b_dout;

    -- arrayB_3_we0 assign process. --
    arrayB_3_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_3)))) then 
            arrayB_3_we0 <= ap_const_logic_1;
        else 
            arrayB_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_4_address0 assign process. --
    arrayB_4_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex8_fu_1131_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_4_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_4_address0 <= newIndex8_fu_1131_p1(7 - 1 downto 0);
        else 
            arrayB_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_4_ce0 assign process. --
    arrayB_4_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_4_ce0 <= ap_const_logic_1;
        else 
            arrayB_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_4_d0 <= b_dout;

    -- arrayB_4_we0 assign process. --
    arrayB_4_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_4)))) then 
            arrayB_4_we0 <= ap_const_logic_1;
        else 
            arrayB_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_5_address0 assign process. --
    arrayB_5_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex1_fu_1152_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_5_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_5_address0 <= newIndex1_fu_1152_p1(7 - 1 downto 0);
        else 
            arrayB_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_5_ce0 assign process. --
    arrayB_5_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_5_ce0 <= ap_const_logic_1;
        else 
            arrayB_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_5_d0 <= b_dout;

    -- arrayB_5_we0 assign process. --
    arrayB_5_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_5)))) then 
            arrayB_5_we0 <= ap_const_logic_1;
        else 
            arrayB_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_6_address0 assign process. --
    arrayB_6_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex6_fu_1173_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_6_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_6_address0 <= newIndex6_fu_1173_p1(7 - 1 downto 0);
        else 
            arrayB_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_6_ce0 assign process. --
    arrayB_6_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_6_ce0 <= ap_const_logic_1;
        else 
            arrayB_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_6_d0 <= b_dout;

    -- arrayB_6_we0 assign process. --
    arrayB_6_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_6)))) then 
            arrayB_6_we0 <= ap_const_logic_1;
        else 
            arrayB_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_7_address0 assign process. --
    arrayB_7_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex10_fu_1194_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_7_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_7_address0 <= newIndex10_fu_1194_p1(7 - 1 downto 0);
        else 
            arrayB_7_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_7_ce0 assign process. --
    arrayB_7_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_7_ce0 <= ap_const_logic_1;
        else 
            arrayB_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_7_d0 <= b_dout;

    -- arrayB_7_we0 assign process. --
    arrayB_7_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_7)))) then 
            arrayB_7_we0 <= ap_const_logic_1;
        else 
            arrayB_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_8_address0 assign process. --
    arrayB_8_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex11_fu_1215_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_8_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_8_address0 <= newIndex11_fu_1215_p1(7 - 1 downto 0);
        else 
            arrayB_8_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_8_ce0 assign process. --
    arrayB_8_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_8_ce0 <= ap_const_logic_1;
        else 
            arrayB_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_8_d0 <= b_dout;

    -- arrayB_8_we0 assign process. --
    arrayB_8_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and (tmp_1_reg_1443 = ap_const_lv5_8)))) then 
            arrayB_8_we0 <= ap_const_logic_1;
        else 
            arrayB_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayB_9_address0 assign process. --
    arrayB_9_address0_assign_proc : process(newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, newIndex2_fu_1236_p1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            arrayB_9_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            arrayB_9_address0 <= newIndex2_fu_1236_p1(7 - 1 downto 0);
        else 
            arrayB_9_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayB_9_ce0 assign process. --
    arrayB_9_ce0_assign_proc : process(b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0))))) then 
            arrayB_9_ce0 <= ap_const_logic_1;
        else 
            arrayB_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayB_9_d0 <= b_dout;

    -- arrayB_9_we0 assign process. --
    arrayB_9_we0_assign_proc : process(b_empty_n, tmp_1_reg_1443, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)) and not((tmp_1_reg_1443 = ap_const_lv5_8)) and not((tmp_1_reg_1443 = ap_const_lv5_7)) and not((tmp_1_reg_1443 = ap_const_lv5_6)) and not((tmp_1_reg_1443 = ap_const_lv5_5)) and not((tmp_1_reg_1443 = ap_const_lv5_4)) and not((tmp_1_reg_1443 = ap_const_lv5_3)) and not((tmp_1_reg_1443 = ap_const_lv5_2)) and not((tmp_1_reg_1443 = ap_const_lv5_1)) and not((tmp_1_reg_1443 = ap_const_lv5_0))))) then 
            arrayB_9_we0 <= ap_const_logic_1;
        else 
            arrayB_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_0_address0 assign process. --
    arrayC_0_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex5_reg_1484, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_0_address0 <= newIndex5_reg_1484(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_0_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_0_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_0_ce0 assign process. --
    arrayC_0_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_0_ce0 <= ap_const_logic_1;
        else 
            arrayC_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_0_d0 assign process. --
    arrayC_0_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_fu_1248_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_0_d0 <= tmp_5_fu_1248_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_0_d0 <= ap_const_lv32_0;
        else 
            arrayC_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_0_we0 assign process. --
    arrayC_0_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_s_reg_1480, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_s_reg_1480))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_0)))) then 
            arrayC_0_we0 <= ap_const_logic_1;
        else 
            arrayC_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_1_address0 assign process. --
    arrayC_1_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex9_reg_1503, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_1_address0 <= newIndex9_reg_1503(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_1_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_1_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_1_ce0 assign process. --
    arrayC_1_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_1_ce0 <= ap_const_logic_1;
        else 
            arrayC_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_1_d0 assign process. --
    arrayC_1_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_1_fu_1255_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_1_d0 <= tmp_5_1_fu_1255_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_1_d0 <= ap_const_lv32_0;
        else 
            arrayC_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_1_we0 assign process. --
    arrayC_1_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_1_reg_1499, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_1_reg_1499))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_1)))) then 
            arrayC_1_we0 <= ap_const_logic_1;
        else 
            arrayC_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_2_address0 assign process. --
    arrayC_2_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex_reg_1522, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_2_address0 <= newIndex_reg_1522(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_2_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_2_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_2_ce0 assign process. --
    arrayC_2_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_2_ce0 <= ap_const_logic_1;
        else 
            arrayC_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_2_d0 assign process. --
    arrayC_2_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_2_fu_1262_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_2_d0 <= tmp_5_2_fu_1262_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_2_d0 <= ap_const_lv32_0;
        else 
            arrayC_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_2_we0 assign process. --
    arrayC_2_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_2_reg_1518, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_2_reg_1518))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_2)))) then 
            arrayC_2_we0 <= ap_const_logic_1;
        else 
            arrayC_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_3_address0 assign process. --
    arrayC_3_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex4_reg_1541, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_3_address0 <= newIndex4_reg_1541(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_3_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_3_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_3_ce0 assign process. --
    arrayC_3_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_3_ce0 <= ap_const_logic_1;
        else 
            arrayC_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_3_d0 assign process. --
    arrayC_3_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_3_fu_1269_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_3_d0 <= tmp_5_3_fu_1269_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_3_d0 <= ap_const_lv32_0;
        else 
            arrayC_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_3_we0 assign process. --
    arrayC_3_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_3_reg_1537, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_3_reg_1537))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_3)))) then 
            arrayC_3_we0 <= ap_const_logic_1;
        else 
            arrayC_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_4_address0 assign process. --
    arrayC_4_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex8_reg_1560, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_4_address0 <= newIndex8_reg_1560(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_4_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_4_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_4_ce0 assign process. --
    arrayC_4_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_4_ce0 <= ap_const_logic_1;
        else 
            arrayC_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_4_d0 assign process. --
    arrayC_4_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_4_fu_1276_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_4_d0 <= tmp_5_4_fu_1276_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_4_d0 <= ap_const_lv32_0;
        else 
            arrayC_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_4_we0 assign process. --
    arrayC_4_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_4_reg_1556, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_4_reg_1556))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_4)))) then 
            arrayC_4_we0 <= ap_const_logic_1;
        else 
            arrayC_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_5_address0 assign process. --
    arrayC_5_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex1_reg_1579, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_5_address0 <= newIndex1_reg_1579(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_5_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_5_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_5_ce0 assign process. --
    arrayC_5_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_5_ce0 <= ap_const_logic_1;
        else 
            arrayC_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_5_d0 assign process. --
    arrayC_5_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_5_fu_1283_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_5_d0 <= tmp_5_5_fu_1283_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_5_d0 <= ap_const_lv32_0;
        else 
            arrayC_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_5_we0 assign process. --
    arrayC_5_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_5_reg_1575, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_5_reg_1575))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_5)))) then 
            arrayC_5_we0 <= ap_const_logic_1;
        else 
            arrayC_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_6_address0 assign process. --
    arrayC_6_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex6_reg_1598, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_6_address0 <= newIndex6_reg_1598(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_6_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_6_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_6_ce0 assign process. --
    arrayC_6_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_6_ce0 <= ap_const_logic_1;
        else 
            arrayC_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_6_d0 assign process. --
    arrayC_6_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_6_fu_1290_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_6_d0 <= tmp_5_6_fu_1290_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_6_d0 <= ap_const_lv32_0;
        else 
            arrayC_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_6_we0 assign process. --
    arrayC_6_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_6_reg_1594, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_6_reg_1594))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_6)))) then 
            arrayC_6_we0 <= ap_const_logic_1;
        else 
            arrayC_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_7_address0 assign process. --
    arrayC_7_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex10_reg_1617, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_7_address0 <= newIndex10_reg_1617(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_7_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_7_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_7_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_7_ce0 assign process. --
    arrayC_7_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_7_ce0 <= ap_const_logic_1;
        else 
            arrayC_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_7_d0 assign process. --
    arrayC_7_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_7_fu_1297_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_7_d0 <= tmp_5_7_fu_1297_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_7_d0 <= ap_const_lv32_0;
        else 
            arrayC_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_7_we0 assign process. --
    arrayC_7_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_7_reg_1613, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_7_reg_1613))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_7)))) then 
            arrayC_7_we0 <= ap_const_logic_1;
        else 
            arrayC_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_8_address0 assign process. --
    arrayC_8_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex11_reg_1636, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_8_address0 <= newIndex11_reg_1636(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_8_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_8_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_8_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_8_ce0 assign process. --
    arrayC_8_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_8_ce0 <= ap_const_logic_1;
        else 
            arrayC_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_8_d0 assign process. --
    arrayC_8_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_8_fu_1304_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_8_d0 <= tmp_5_8_fu_1304_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_8_d0 <= ap_const_lv32_0;
        else 
            arrayC_8_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_8_we0 assign process. --
    arrayC_8_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_8_reg_1632, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_8_reg_1632))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (tmp_1_reg_1443 = ap_const_lv5_8)))) then 
            arrayC_8_we0 <= ap_const_logic_1;
        else 
            arrayC_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_9_address0 assign process. --
    arrayC_9_address0_assign_proc : process(ap_reg_ppiten_pp1_it12, newIndex3_reg_1447, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, newIndex2_reg_1655, ap_sig_cseq_ST_st5_fsm_4, newIndex7_fu_1361_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_9_address0 <= newIndex2_reg_1655(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_9_address0 <= newIndex3_reg_1447(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12)) then 
            arrayC_9_address0 <= newIndex7_fu_1361_p1(7 - 1 downto 0);
        else 
            arrayC_9_address0 <= "XXXXXXX";
        end if; 
    end process;


    -- arrayC_9_ce0 assign process. --
    arrayC_9_ce0_assign_proc : process(ap_reg_ppiten_pp1_it12, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it12) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14)))))) then 
            arrayC_9_ce0 <= ap_const_logic_1;
        else 
            arrayC_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- arrayC_9_d0 assign process. --
    arrayC_9_d0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st5_fsm_4, tmp_5_9_fu_1311_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            arrayC_9_d0 <= tmp_5_9_fu_1311_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            arrayC_9_d0 <= ap_const_lv32_0;
        else 
            arrayC_9_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arrayC_9_we0 assign process. --
    arrayC_9_we0_assign_proc : process(tmp_1_reg_1443, ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, tmp_3_9_reg_1651, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_3_9_reg_1651))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((tmp_1_reg_1443 = ap_const_lv5_8)) and not((tmp_1_reg_1443 = ap_const_lv5_7)) and not((tmp_1_reg_1443 = ap_const_lv5_6)) and not((tmp_1_reg_1443 = ap_const_lv5_5)) and not((tmp_1_reg_1443 = ap_const_lv5_4)) and not((tmp_1_reg_1443 = ap_const_lv5_3)) and not((tmp_1_reg_1443 = ap_const_lv5_2)) and not((tmp_1_reg_1443 = ap_const_lv5_1)) and not((tmp_1_reg_1443 = ap_const_lv5_0))))) then 
            arrayC_9_we0 <= ap_const_logic_1;
        else 
            arrayC_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- b_read assign process. --
    b_read_assign_proc : process(b_empty_n, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((b_empty_n = ap_const_logic_0)))) then 
            b_read <= ap_const_logic_1;
        else 
            b_read <= ap_const_logic_0;
        end if; 
    end process;

    c_din <= tmp_2_reg_1748;

    -- c_write assign process. --
    c_write_assign_proc : process(ap_reg_ppstg_tmp_7_reg_1684_pp1_it13, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14)
    begin
        if ((not((ap_reg_ppstg_tmp_7_reg_1684_pp1_it13 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))))) then 
            c_write <= ap_const_logic_1;
        else 
            c_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_1026_p2 <= "1" when (i_1_reg_931 = ap_const_lv10_3E8) else "0";
    exitcond2_fu_970_p2 <= "1" when (i_reg_897 = ap_const_lv10_3E8) else "0";
    exitcond_fu_1318_p2 <= "1" when (i_2_phi_fu_946_p4 = ap_const_lv10_3E8) else "0";

    -- grp_fu_1345_ce assign process. --
    grp_fu_1345_ce_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_7, ap_sig_bdd_94, ap_reg_ppiten_pp1_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it14))))) then 
            grp_fu_1345_ce <= ap_const_logic_1;
        else 
            grp_fu_1345_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1345_p0 <= i_2_phi_fu_946_p4;
    grp_fu_1345_p1 <= ap_const_lv10_A(5 - 1 downto 0);

    -- grp_fu_993_ap_start assign process. --
    grp_fu_993_ap_start_assign_proc : process(exitcond2_fu_970_p2, ap_sig_cseq_ST_st2_fsm_1, tmp_fu_982_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond2_fu_970_p2) and not((ap_const_lv1_0 = tmp_fu_982_p2)))) then 
            grp_fu_993_ap_start <= ap_const_logic_1;
        else 
            grp_fu_993_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_993_ce assign process. --
    grp_fu_993_ce_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            grp_fu_993_ce <= ap_const_logic_1;
        else 
            grp_fu_993_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_993_p0 <= i_reg_897;
    grp_fu_993_p1 <= ap_const_lv10_A(5 - 1 downto 0);
    i_1_cast2_fu_1038_p1 <= std_logic_vector(resize(unsigned(i_1_reg_931),32));
    i_2_cast1_fu_1330_p1 <= std_logic_vector(resize(unsigned(i_2_phi_fu_946_p4),32));

    -- i_2_phi_fu_946_p4 assign process. --
    i_2_phi_fu_946_p4_assign_proc : process(i_2_reg_942, ap_sig_cseq_ST_pp1_stg0_fsm_7, ap_reg_ppiten_pp1_it1, exitcond_reg_1675, i_4_reg_1679)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_reg_1675))) then 
            i_2_phi_fu_946_p4 <= i_4_reg_1679;
        else 
            i_2_phi_fu_946_p4 <= i_2_reg_942;
        end if; 
    end process;

    i_3_fu_976_p2 <= std_logic_vector(unsigned(i_reg_897) + unsigned(ap_const_lv10_1));
    i_4_1_cast_fu_1080_p1 <= std_logic_vector(resize(unsigned(i_4_1_fu_1074_p2),32));
    i_4_1_fu_1074_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_2));
    i_4_2_cast_fu_1101_p1 <= std_logic_vector(resize(unsigned(i_4_2_fu_1095_p2),32));
    i_4_2_fu_1095_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_3));
    i_4_3_cast_fu_1122_p1 <= std_logic_vector(resize(unsigned(i_4_3_fu_1116_p2),32));
    i_4_3_fu_1116_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_4));
    i_4_4_cast_fu_1143_p1 <= std_logic_vector(resize(unsigned(i_4_4_fu_1137_p2),32));
    i_4_4_fu_1137_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_5));
    i_4_5_cast_fu_1164_p1 <= std_logic_vector(resize(unsigned(i_4_5_fu_1158_p2),32));
    i_4_5_fu_1158_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_6));
    i_4_6_cast_fu_1185_p1 <= std_logic_vector(resize(unsigned(i_4_6_fu_1179_p2),32));
    i_4_6_fu_1179_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_7));
    i_4_7_cast_fu_1206_p1 <= std_logic_vector(resize(unsigned(i_4_7_fu_1200_p2),32));
    i_4_7_fu_1200_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_8));
    i_4_8_cast_fu_1227_p1 <= std_logic_vector(resize(unsigned(i_4_8_fu_1221_p2),32));
    i_4_8_fu_1221_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_9));
    i_4_9_fu_1242_p2 <= std_logic_vector(unsigned(i_1_reg_931) + unsigned(ap_const_lv10_A));
    i_4_cast_fu_1059_p1 <= std_logic_vector(resize(unsigned(i_4_s_fu_1053_p2),32));
    i_4_fu_1324_p2 <= std_logic_vector(unsigned(i_2_phi_fu_946_p4) + unsigned(ap_const_lv10_1));
    i_4_s_fu_1053_p2 <= (i_1_reg_931 or ap_const_lv10_1);
    i_cast3_fu_966_p1 <= std_logic_vector(resize(unsigned(i_reg_897),32));
    indvars_iv_next9_fu_1032_p2 <= std_logic_vector(unsigned(indvars_iv2_reg_920) + unsigned(ap_const_lv7_1));
    newIndex10_fu_1194_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex11_fu_1215_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex1_fu_1152_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex2_fu_1236_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex3_fu_1013_p1 <= std_logic_vector(resize(unsigned(tmp_6_reg_1438),64));
    newIndex4_fu_1110_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex5_fu_1047_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex6_fu_1173_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex7_fu_1361_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_8_reg_1693_pp1_it11),64));
    newIndex8_fu_1131_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex9_fu_1068_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    newIndex_fu_1089_p1 <= std_logic_vector(resize(unsigned(indvars_iv2_reg_920),64));
    next_mul1_fu_1339_p2 <= std_logic_vector(unsigned(phi_mul1_reg_954) + unsigned(ap_const_lv21_667));
    next_mul_fu_987_p2 <= std_logic_vector(unsigned(phi_mul_reg_909) + unsigned(ap_const_lv21_667));
    tmp_1_fu_1009_p1 <= grp_fu_993_p2(5 - 1 downto 0);
    tmp_2_fu_1378_p1 <= arrayC_0_q0;
    tmp_2_fu_1378_p10 <= arrayC_9_q0;
    tmp_2_fu_1378_p11 <= std_logic_vector(resize(unsigned(grp_fu_1345_p2),32));
    tmp_2_fu_1378_p2 <= arrayC_1_q0;
    tmp_2_fu_1378_p3 <= arrayC_2_q0;
    tmp_2_fu_1378_p4 <= arrayC_3_q0;
    tmp_2_fu_1378_p5 <= arrayC_4_q0;
    tmp_2_fu_1378_p6 <= arrayC_5_q0;
    tmp_2_fu_1378_p7 <= arrayC_6_q0;
    tmp_2_fu_1378_p8 <= arrayC_7_q0;
    tmp_2_fu_1378_p9 <= arrayC_8_q0;
    tmp_3_1_fu_1063_p2 <= "1" when (signed(i_4_cast_fu_1059_p1) < signed(n)) else "0";
    tmp_3_2_fu_1084_p2 <= "1" when (signed(i_4_1_cast_fu_1080_p1) < signed(n)) else "0";
    tmp_3_3_fu_1105_p2 <= "1" when (signed(i_4_2_cast_fu_1101_p1) < signed(n)) else "0";
    tmp_3_4_fu_1126_p2 <= "1" when (signed(i_4_3_cast_fu_1122_p1) < signed(n)) else "0";
    tmp_3_5_fu_1147_p2 <= "1" when (signed(i_4_4_cast_fu_1143_p1) < signed(n)) else "0";
    tmp_3_6_fu_1168_p2 <= "1" when (signed(i_4_5_cast_fu_1164_p1) < signed(n)) else "0";
    tmp_3_7_fu_1189_p2 <= "1" when (signed(i_4_6_cast_fu_1185_p1) < signed(n)) else "0";
    tmp_3_8_fu_1210_p2 <= "1" when (signed(i_4_7_cast_fu_1206_p1) < signed(n)) else "0";
    tmp_3_9_fu_1231_p2 <= "1" when (signed(i_4_8_cast_fu_1227_p1) < signed(n)) else "0";
    tmp_5_1_fu_1255_p2 <= std_logic_vector(unsigned(arrayA_1_q0) + unsigned(arrayB_1_q0));
    tmp_5_2_fu_1262_p2 <= std_logic_vector(unsigned(arrayA_2_q0) + unsigned(arrayB_2_q0));
    tmp_5_3_fu_1269_p2 <= std_logic_vector(unsigned(arrayA_3_q0) + unsigned(arrayB_3_q0));
    tmp_5_4_fu_1276_p2 <= std_logic_vector(unsigned(arrayA_4_q0) + unsigned(arrayB_4_q0));
    tmp_5_5_fu_1283_p2 <= std_logic_vector(unsigned(arrayA_5_q0) + unsigned(arrayB_5_q0));
    tmp_5_6_fu_1290_p2 <= std_logic_vector(unsigned(arrayA_6_q0) + unsigned(arrayB_6_q0));
    tmp_5_7_fu_1297_p2 <= std_logic_vector(unsigned(arrayA_7_q0) + unsigned(arrayB_7_q0));
    tmp_5_8_fu_1304_p2 <= std_logic_vector(unsigned(arrayA_8_q0) + unsigned(arrayB_8_q0));
    tmp_5_9_fu_1311_p2 <= std_logic_vector(unsigned(arrayA_9_q0) + unsigned(arrayB_9_q0));
    tmp_5_fu_1248_p2 <= std_logic_vector(unsigned(arrayA_0_q0) + unsigned(arrayB_0_q0));
    tmp_7_fu_1334_p2 <= "1" when (signed(i_2_cast1_fu_1330_p1) < signed(n)) else "0";
    tmp_fu_982_p2 <= "1" when (signed(i_cast3_fu_966_p1) < signed(n)) else "0";
    tmp_s_fu_1042_p2 <= "1" when (signed(i_1_cast2_fu_1038_p1) < signed(n)) else "0";
end behav;
