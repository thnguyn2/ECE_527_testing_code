

================================================================
== Vivado HLS Report for 'adder_top'
================================================================
* Date:           Sun Sep 27 16:30:40 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        hls_demo
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.86|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+-------+------+-------+---------+
    |    Latency   |   Interval   | Pipeline|
    |  min |  max  |  min |  max  |   Type  |
    +------+-------+------+-------+---------+
    |  3117|  18117|  3118|  18118|   none  |
    +------+-------+------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+------+-------+----------+-----------+-----------+------+----------+
        |              |    Latency   | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |  min |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+------+-------+----------+-----------+-----------+------+----------+
        |- loop_read   |  2000|  17000|  2 ~ 17  |          -|          -|  1000|    no    |
        |- loop_add    |   100|    100|         2|          1|          1|   100|    yes   |
        |- loop_write  |  1013|   1013|        15|          1|          1|  1000|    yes   |
        +--------------+------+-------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 15


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 24
* Pipeline: 2
  Pipeline-0: II = 1, D = 2, States = { 7 8 }
  Pipeline-1: II = 1, D = 15, States = { 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	7  / (exitcond2)
	3  / (!exitcond2 & tmp)
	6  / (!exitcond2 & !tmp)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	2  / true
7 --> 
	9  / (exitcond1)
	8  / (!exitcond1)
8 --> 
	7  / true
9 --> 
	24  / (exitcond)
	10  / (!exitcond)
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	9  / true
24 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_25 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %a) nounwind, !map !0

ST_1: stg_26 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %b) nounwind, !map !6

ST_1: stg_27 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32* %c) nounwind, !map !10

ST_1: stg_28 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %n) nounwind, !map !14

ST_1: stg_29 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @str) nounwind

ST_1: n_read [1/1] 0.00ns
:5  %n_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %n) nounwind

ST_1: arrayA_0 [1/1] 0.00ns
:6  %arrayA_0 = alloca [100 x i32], align 4

ST_1: arrayA_1 [1/1] 0.00ns
:7  %arrayA_1 = alloca [100 x i32], align 4

ST_1: arrayA_2 [1/1] 0.00ns
:8  %arrayA_2 = alloca [100 x i32], align 4

ST_1: arrayA_3 [1/1] 0.00ns
:9  %arrayA_3 = alloca [100 x i32], align 4

ST_1: arrayA_4 [1/1] 0.00ns
:10  %arrayA_4 = alloca [100 x i32], align 4

ST_1: arrayA_5 [1/1] 0.00ns
:11  %arrayA_5 = alloca [100 x i32], align 4

ST_1: arrayA_6 [1/1] 0.00ns
:12  %arrayA_6 = alloca [100 x i32], align 4

ST_1: arrayA_7 [1/1] 0.00ns
:13  %arrayA_7 = alloca [100 x i32], align 4

ST_1: arrayA_8 [1/1] 0.00ns
:14  %arrayA_8 = alloca [100 x i32], align 4

ST_1: arrayA_9 [1/1] 0.00ns
:15  %arrayA_9 = alloca [100 x i32], align 4

ST_1: arrayB_0 [1/1] 0.00ns
:16  %arrayB_0 = alloca [100 x i32], align 4

ST_1: arrayB_1 [1/1] 0.00ns
:17  %arrayB_1 = alloca [100 x i32], align 4

ST_1: arrayB_2 [1/1] 0.00ns
:18  %arrayB_2 = alloca [100 x i32], align 4

ST_1: arrayB_3 [1/1] 0.00ns
:19  %arrayB_3 = alloca [100 x i32], align 4

ST_1: arrayB_4 [1/1] 0.00ns
:20  %arrayB_4 = alloca [100 x i32], align 4

ST_1: arrayB_5 [1/1] 0.00ns
:21  %arrayB_5 = alloca [100 x i32], align 4

ST_1: arrayB_6 [1/1] 0.00ns
:22  %arrayB_6 = alloca [100 x i32], align 4

ST_1: arrayB_7 [1/1] 0.00ns
:23  %arrayB_7 = alloca [100 x i32], align 4

ST_1: arrayB_8 [1/1] 0.00ns
:24  %arrayB_8 = alloca [100 x i32], align 4

ST_1: arrayB_9 [1/1] 0.00ns
:25  %arrayB_9 = alloca [100 x i32], align 4

ST_1: arrayC_0 [1/1] 0.00ns
:26  %arrayC_0 = alloca [100 x i32], align 4

ST_1: arrayC_1 [1/1] 0.00ns
:27  %arrayC_1 = alloca [100 x i32], align 4

ST_1: arrayC_2 [1/1] 0.00ns
:28  %arrayC_2 = alloca [100 x i32], align 4

ST_1: arrayC_3 [1/1] 0.00ns
:29  %arrayC_3 = alloca [100 x i32], align 4

ST_1: arrayC_4 [1/1] 0.00ns
:30  %arrayC_4 = alloca [100 x i32], align 4

ST_1: arrayC_5 [1/1] 0.00ns
:31  %arrayC_5 = alloca [100 x i32], align 4

ST_1: arrayC_6 [1/1] 0.00ns
:32  %arrayC_6 = alloca [100 x i32], align 4

ST_1: arrayC_7 [1/1] 0.00ns
:33  %arrayC_7 = alloca [100 x i32], align 4

ST_1: arrayC_8 [1/1] 0.00ns
:34  %arrayC_8 = alloca [100 x i32], align 4

ST_1: arrayC_9 [1/1] 0.00ns
:35  %arrayC_9 = alloca [100 x i32], align 4

ST_1: stg_61 [1/1] 0.00ns
:36  call void (...)* @_ssdm_op_SpecInterface(i32* %a, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_62 [1/1] 0.00ns
:37  call void (...)* @_ssdm_op_SpecInterface(i32* %a, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_63 [1/1] 0.00ns
:38  call void (...)* @_ssdm_op_SpecInterface(i32* %b, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_64 [1/1] 0.00ns
:39  call void (...)* @_ssdm_op_SpecInterface(i32* %c, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_65 [1/1] 1.57ns
:40  br label %1


 <State 2>: 5.26ns
ST_2: i [1/1] 0.00ns
:0  %i = phi i10 [ 0, %0 ], [ %i_3, %._crit_edge ]

ST_2: phi_mul [1/1] 0.00ns
:1  %phi_mul = phi i21 [ 0, %0 ], [ %next_mul, %._crit_edge ]

ST_2: i_cast3 [1/1] 0.00ns
:2  %i_cast3 = zext i10 %i to i32

ST_2: exitcond2 [1/1] 2.07ns
:3  %exitcond2 = icmp eq i10 %i, -24

ST_2: empty [1/1] 0.00ns
:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_2: i_3 [1/1] 1.84ns
:5  %i_3 = add i10 %i, 1

ST_2: stg_72 [1/1] 1.57ns
:6  br i1 %exitcond2, label %.preheader3.0, label %2

ST_2: stg_73 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str3) nounwind

ST_2: tmp [1/1] 2.52ns
:1  %tmp = icmp slt i32 %i_cast3, %n_read

ST_2: next_mul [1/1] 2.20ns
:2  %next_mul = add i21 %phi_mul, 1639

ST_2: stg_76 [1/1] 0.00ns
:3  br i1 %tmp, label %3, label %._crit_edge

ST_2: arrayNo [14/14] 4.24ns
:1  %arrayNo = urem i10 %i, 10

ST_2: tmp_6 [1/1] 0.00ns
:3  %tmp_6 = call i7 @_ssdm_op_PartSelect.i7.i21.i32.i32(i21 %phi_mul, i32 14, i32 20)


 <State 3>: 7.08ns
ST_3: a_read [1/1] 4.38ns
:0  %a_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %a) nounwind

ST_3: arrayNo [1/14] 4.24ns
:1  %arrayNo = urem i10 %i, 10

ST_3: tmp_1 [1/1] 0.00ns
:2  %tmp_1 = trunc i10 %arrayNo to i5

ST_3: newIndex3 [1/1] 0.00ns
:4  %newIndex3 = zext i7 %tmp_6 to i64

ST_3: arrayA_0_addr [1/1] 0.00ns
:5  %arrayA_0_addr = getelementptr [100 x i32]* %arrayA_0, i64 0, i64 %newIndex3

ST_3: arrayA_1_addr [1/1] 0.00ns
:6  %arrayA_1_addr = getelementptr [100 x i32]* %arrayA_1, i64 0, i64 %newIndex3

ST_3: arrayA_2_addr [1/1] 0.00ns
:7  %arrayA_2_addr = getelementptr [100 x i32]* %arrayA_2, i64 0, i64 %newIndex3

ST_3: arrayA_3_addr [1/1] 0.00ns
:8  %arrayA_3_addr = getelementptr [100 x i32]* %arrayA_3, i64 0, i64 %newIndex3

ST_3: arrayA_4_addr [1/1] 0.00ns
:9  %arrayA_4_addr = getelementptr [100 x i32]* %arrayA_4, i64 0, i64 %newIndex3

ST_3: arrayA_5_addr [1/1] 0.00ns
:10  %arrayA_5_addr = getelementptr [100 x i32]* %arrayA_5, i64 0, i64 %newIndex3

ST_3: arrayA_6_addr [1/1] 0.00ns
:11  %arrayA_6_addr = getelementptr [100 x i32]* %arrayA_6, i64 0, i64 %newIndex3

ST_3: arrayA_7_addr [1/1] 0.00ns
:12  %arrayA_7_addr = getelementptr [100 x i32]* %arrayA_7, i64 0, i64 %newIndex3

ST_3: arrayA_8_addr [1/1] 0.00ns
:13  %arrayA_8_addr = getelementptr [100 x i32]* %arrayA_8, i64 0, i64 %newIndex3

ST_3: arrayA_9_addr [1/1] 0.00ns
:14  %arrayA_9_addr = getelementptr [100 x i32]* %arrayA_9, i64 0, i64 %newIndex3

ST_3: stg_93 [1/1] 1.91ns
:15  switch i5 %tmp_1, label %branch9 [
    i5 0, label %branch0
    i5 1, label %branch1
    i5 2, label %branch2
    i5 3, label %branch3
    i5 4, label %branch4
    i5 5, label %branch5
    i5 6, label %branch6
    i5 7, label %branch7
    i5 8, label %branch8
  ]

ST_3: stg_94 [1/1] 2.71ns
branch8:0  store i32 %a_read, i32* %arrayA_8_addr, align 4

ST_3: stg_95 [1/1] 0.00ns
branch8:1  br label %4

ST_3: stg_96 [1/1] 2.71ns
branch7:0  store i32 %a_read, i32* %arrayA_7_addr, align 4

ST_3: stg_97 [1/1] 0.00ns
branch7:1  br label %4

ST_3: stg_98 [1/1] 2.71ns
branch6:0  store i32 %a_read, i32* %arrayA_6_addr, align 4

ST_3: stg_99 [1/1] 0.00ns
branch6:1  br label %4

ST_3: stg_100 [1/1] 2.71ns
branch5:0  store i32 %a_read, i32* %arrayA_5_addr, align 4

ST_3: stg_101 [1/1] 0.00ns
branch5:1  br label %4

ST_3: stg_102 [1/1] 2.71ns
branch4:0  store i32 %a_read, i32* %arrayA_4_addr, align 4

ST_3: stg_103 [1/1] 0.00ns
branch4:1  br label %4

ST_3: stg_104 [1/1] 2.71ns
branch3:0  store i32 %a_read, i32* %arrayA_3_addr, align 4

ST_3: stg_105 [1/1] 0.00ns
branch3:1  br label %4

ST_3: stg_106 [1/1] 2.71ns
branch2:0  store i32 %a_read, i32* %arrayA_2_addr, align 4

ST_3: stg_107 [1/1] 0.00ns
branch2:1  br label %4

ST_3: stg_108 [1/1] 2.71ns
branch1:0  store i32 %a_read, i32* %arrayA_1_addr, align 4

ST_3: stg_109 [1/1] 0.00ns
branch1:1  br label %4

ST_3: stg_110 [1/1] 2.71ns
branch0:0  store i32 %a_read, i32* %arrayA_0_addr, align 4

ST_3: stg_111 [1/1] 0.00ns
branch0:1  br label %4

ST_3: stg_112 [1/1] 2.71ns
branch9:0  store i32 %a_read, i32* %arrayA_9_addr, align 4

ST_3: stg_113 [1/1] 0.00ns
branch9:1  br label %4


 <State 4>: 7.08ns
ST_4: b_read [1/1] 4.38ns
:0  %b_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %b) nounwind

ST_4: arrayB_0_addr_1 [1/1] 0.00ns
:1  %arrayB_0_addr_1 = getelementptr [100 x i32]* %arrayB_0, i64 0, i64 %newIndex3

ST_4: arrayB_1_addr_1 [1/1] 0.00ns
:2  %arrayB_1_addr_1 = getelementptr [100 x i32]* %arrayB_1, i64 0, i64 %newIndex3

ST_4: arrayB_2_addr [1/1] 0.00ns
:3  %arrayB_2_addr = getelementptr [100 x i32]* %arrayB_2, i64 0, i64 %newIndex3

ST_4: arrayB_3_addr [1/1] 0.00ns
:4  %arrayB_3_addr = getelementptr [100 x i32]* %arrayB_3, i64 0, i64 %newIndex3

ST_4: arrayB_4_addr [1/1] 0.00ns
:5  %arrayB_4_addr = getelementptr [100 x i32]* %arrayB_4, i64 0, i64 %newIndex3

ST_4: arrayB_5_addr [1/1] 0.00ns
:6  %arrayB_5_addr = getelementptr [100 x i32]* %arrayB_5, i64 0, i64 %newIndex3

ST_4: arrayB_6_addr [1/1] 0.00ns
:7  %arrayB_6_addr = getelementptr [100 x i32]* %arrayB_6, i64 0, i64 %newIndex3

ST_4: arrayB_7_addr [1/1] 0.00ns
:8  %arrayB_7_addr = getelementptr [100 x i32]* %arrayB_7, i64 0, i64 %newIndex3

ST_4: arrayB_8_addr [1/1] 0.00ns
:9  %arrayB_8_addr = getelementptr [100 x i32]* %arrayB_8, i64 0, i64 %newIndex3

ST_4: arrayB_9_addr [1/1] 0.00ns
:10  %arrayB_9_addr = getelementptr [100 x i32]* %arrayB_9, i64 0, i64 %newIndex3

ST_4: stg_125 [1/1] 1.91ns
:11  switch i5 %tmp_1, label %branch19 [
    i5 0, label %branch10
    i5 1, label %branch11
    i5 2, label %branch12
    i5 3, label %branch13
    i5 4, label %branch14
    i5 5, label %branch15
    i5 6, label %branch16
    i5 7, label %branch17
    i5 8, label %branch18
  ]

ST_4: stg_126 [1/1] 2.71ns
branch18:0  store i32 %b_read, i32* %arrayB_8_addr, align 4

ST_4: stg_127 [1/1] 0.00ns
branch18:1  br label %5

ST_4: stg_128 [1/1] 2.71ns
branch17:0  store i32 %b_read, i32* %arrayB_7_addr, align 4

ST_4: stg_129 [1/1] 0.00ns
branch17:1  br label %5

ST_4: stg_130 [1/1] 2.71ns
branch16:0  store i32 %b_read, i32* %arrayB_6_addr, align 4

ST_4: stg_131 [1/1] 0.00ns
branch16:1  br label %5

ST_4: stg_132 [1/1] 2.71ns
branch15:0  store i32 %b_read, i32* %arrayB_5_addr, align 4

ST_4: stg_133 [1/1] 0.00ns
branch15:1  br label %5

ST_4: stg_134 [1/1] 2.71ns
branch14:0  store i32 %b_read, i32* %arrayB_4_addr, align 4

ST_4: stg_135 [1/1] 0.00ns
branch14:1  br label %5

ST_4: stg_136 [1/1] 2.71ns
branch13:0  store i32 %b_read, i32* %arrayB_3_addr, align 4

ST_4: stg_137 [1/1] 0.00ns
branch13:1  br label %5

ST_4: stg_138 [1/1] 2.71ns
branch12:0  store i32 %b_read, i32* %arrayB_2_addr, align 4

ST_4: stg_139 [1/1] 0.00ns
branch12:1  br label %5

ST_4: stg_140 [1/1] 2.71ns
branch11:0  store i32 %b_read, i32* %arrayB_1_addr_1, align 4

ST_4: stg_141 [1/1] 0.00ns
branch11:1  br label %5

ST_4: stg_142 [1/1] 2.71ns
branch10:0  store i32 %b_read, i32* %arrayB_0_addr_1, align 4

ST_4: stg_143 [1/1] 0.00ns
branch10:1  br label %5

ST_4: stg_144 [1/1] 2.71ns
branch19:0  store i32 %b_read, i32* %arrayB_9_addr, align 4

ST_4: stg_145 [1/1] 0.00ns
branch19:1  br label %5


 <State 5>: 2.71ns
ST_5: arrayC_0_addr_1 [1/1] 0.00ns
:0  %arrayC_0_addr_1 = getelementptr [100 x i32]* %arrayC_0, i64 0, i64 %newIndex3

ST_5: arrayC_1_addr_1 [1/1] 0.00ns
:1  %arrayC_1_addr_1 = getelementptr [100 x i32]* %arrayC_1, i64 0, i64 %newIndex3

ST_5: arrayC_2_addr_1 [1/1] 0.00ns
:2  %arrayC_2_addr_1 = getelementptr [100 x i32]* %arrayC_2, i64 0, i64 %newIndex3

ST_5: arrayC_3_addr_1 [1/1] 0.00ns
:3  %arrayC_3_addr_1 = getelementptr [100 x i32]* %arrayC_3, i64 0, i64 %newIndex3

ST_5: arrayC_4_addr [1/1] 0.00ns
:4  %arrayC_4_addr = getelementptr [100 x i32]* %arrayC_4, i64 0, i64 %newIndex3

ST_5: arrayC_5_addr [1/1] 0.00ns
:5  %arrayC_5_addr = getelementptr [100 x i32]* %arrayC_5, i64 0, i64 %newIndex3

ST_5: arrayC_6_addr [1/1] 0.00ns
:6  %arrayC_6_addr = getelementptr [100 x i32]* %arrayC_6, i64 0, i64 %newIndex3

ST_5: arrayC_7_addr [1/1] 0.00ns
:7  %arrayC_7_addr = getelementptr [100 x i32]* %arrayC_7, i64 0, i64 %newIndex3

ST_5: arrayC_8_addr [1/1] 0.00ns
:8  %arrayC_8_addr = getelementptr [100 x i32]* %arrayC_8, i64 0, i64 %newIndex3

ST_5: arrayC_9_addr [1/1] 0.00ns
:9  %arrayC_9_addr = getelementptr [100 x i32]* %arrayC_9, i64 0, i64 %newIndex3

ST_5: stg_156 [1/1] 1.91ns
:10  switch i5 %tmp_1, label %branch29 [
    i5 0, label %branch20
    i5 1, label %branch21
    i5 2, label %branch22
    i5 3, label %branch23
    i5 4, label %branch24
    i5 5, label %branch25
    i5 6, label %branch26
    i5 7, label %branch27
    i5 8, label %branch28
  ]

ST_5: stg_157 [1/1] 2.71ns
branch28:0  store i32 0, i32* %arrayC_8_addr, align 4

ST_5: stg_158 [1/1] 0.00ns
branch28:1  br label %6

ST_5: stg_159 [1/1] 2.71ns
branch27:0  store i32 0, i32* %arrayC_7_addr, align 4

ST_5: stg_160 [1/1] 0.00ns
branch27:1  br label %6

ST_5: stg_161 [1/1] 2.71ns
branch26:0  store i32 0, i32* %arrayC_6_addr, align 4

ST_5: stg_162 [1/1] 0.00ns
branch26:1  br label %6

ST_5: stg_163 [1/1] 2.71ns
branch25:0  store i32 0, i32* %arrayC_5_addr, align 4

ST_5: stg_164 [1/1] 0.00ns
branch25:1  br label %6

ST_5: stg_165 [1/1] 2.71ns
branch24:0  store i32 0, i32* %arrayC_4_addr, align 4

ST_5: stg_166 [1/1] 0.00ns
branch24:1  br label %6

ST_5: stg_167 [1/1] 2.71ns
branch23:0  store i32 0, i32* %arrayC_3_addr_1, align 4

ST_5: stg_168 [1/1] 0.00ns
branch23:1  br label %6

ST_5: stg_169 [1/1] 2.71ns
branch22:0  store i32 0, i32* %arrayC_2_addr_1, align 4

ST_5: stg_170 [1/1] 0.00ns
branch22:1  br label %6

ST_5: stg_171 [1/1] 2.71ns
branch21:0  store i32 0, i32* %arrayC_1_addr_1, align 4

ST_5: stg_172 [1/1] 0.00ns
branch21:1  br label %6

ST_5: stg_173 [1/1] 2.71ns
branch20:0  store i32 0, i32* %arrayC_0_addr_1, align 4

ST_5: stg_174 [1/1] 0.00ns
branch20:1  br label %6

ST_5: stg_175 [1/1] 2.71ns
branch29:0  store i32 0, i32* %arrayC_9_addr, align 4

ST_5: stg_176 [1/1] 0.00ns
branch29:1  br label %6


 <State 6>: 0.00ns
ST_6: stg_177 [1/1] 0.00ns
:0  br label %._crit_edge

ST_6: stg_178 [1/1] 0.00ns
._crit_edge:0  br label %1


 <State 7>: 7.10ns
ST_7: indvars_iv2 [1/1] 0.00ns
.preheader3.0:0  %indvars_iv2 = phi i7 [ %indvars_iv_next9, %._crit_edge4.9 ], [ 0, %1 ]

ST_7: i_1 [1/1] 0.00ns
.preheader3.0:1  %i_1 = phi i10 [ %i_4_9, %._crit_edge4.9 ], [ 0, %1 ]

ST_7: exitcond1 [1/1] 2.07ns
.preheader3.0:2  %exitcond1 = icmp eq i10 %i_1, -24

ST_7: indvars_iv_next9 [1/1] 1.72ns
.preheader3.0:3  %indvars_iv_next9 = add i7 %indvars_iv2, 1

ST_7: stg_183 [1/1] 1.57ns
.preheader3.0:4  br i1 %exitcond1, label %.preheader, label %7

ST_7: i_1_cast2 [1/1] 0.00ns
:0  %i_1_cast2 = zext i10 %i_1 to i32

ST_7: empty_7 [1/1] 0.00ns
:1  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_7: stg_186 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str4) nounwind

ST_7: tmp_3 [1/1] 0.00ns
:3  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str4) nounwind

ST_7: stg_188 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_7: tmp_s [1/1] 2.52ns
:5  %tmp_s = icmp slt i32 %i_1_cast2, %n_read

ST_7: stg_190 [1/1] 0.00ns
:6  br i1 %tmp_s, label %8, label %._crit_edge4.0

ST_7: newIndex5 [1/1] 0.00ns
:0  %newIndex5 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_0_addr_1 [1/1] 0.00ns
:1  %arrayA_0_addr_1 = getelementptr [100 x i32]* %arrayA_0, i64 0, i64 %newIndex5

ST_7: arrayA_0_load [2/2] 2.71ns
:2  %arrayA_0_load = load i32* %arrayA_0_addr_1, align 8

ST_7: arrayB_0_addr [1/1] 0.00ns
:3  %arrayB_0_addr = getelementptr [100 x i32]* %arrayB_0, i64 0, i64 %newIndex5

ST_7: arrayB_0_load [2/2] 2.71ns
:4  %arrayB_0_load = load i32* %arrayB_0_addr, align 8

ST_7: empty_6 [1/1] 0.00ns
._crit_edge4.0:0  %empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str4, i32 %tmp_3) nounwind

ST_7: i_4_s [1/1] 0.00ns
._crit_edge4.0:1  %i_4_s = or i10 %i_1, 1

ST_7: i_4_cast [1/1] 0.00ns
._crit_edge4.0:2  %i_4_cast = zext i10 %i_4_s to i32

ST_7: tmp_3_1 [1/1] 2.52ns
._crit_edge4.0:3  %tmp_3_1 = icmp slt i32 %i_4_cast, %n_read

ST_7: stg_200 [1/1] 0.00ns
._crit_edge4.0:4  br i1 %tmp_3_1, label %9, label %._crit_edge4.1

ST_7: newIndex9 [1/1] 0.00ns
:0  %newIndex9 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_1_addr_1 [1/1] 0.00ns
:1  %arrayA_1_addr_1 = getelementptr [100 x i32]* %arrayA_1, i64 0, i64 %newIndex9

ST_7: arrayA_1_load [2/2] 2.71ns
:2  %arrayA_1_load = load i32* %arrayA_1_addr_1, align 4

ST_7: arrayB_1_addr [1/1] 0.00ns
:3  %arrayB_1_addr = getelementptr [100 x i32]* %arrayB_1, i64 0, i64 %newIndex9

ST_7: arrayB_1_load [2/2] 2.71ns
:4  %arrayB_1_load = load i32* %arrayB_1_addr, align 4

ST_7: i_4_1 [1/1] 1.84ns
._crit_edge4.1:0  %i_4_1 = add i10 %i_1, 2

ST_7: i_4_1_cast [1/1] 0.00ns
._crit_edge4.1:1  %i_4_1_cast = zext i10 %i_4_1 to i32

ST_7: tmp_3_2 [1/1] 2.52ns
._crit_edge4.1:2  %tmp_3_2 = icmp slt i32 %i_4_1_cast, %n_read

ST_7: stg_209 [1/1] 0.00ns
._crit_edge4.1:3  br i1 %tmp_3_2, label %10, label %._crit_edge4.2

ST_7: newIndex [1/1] 0.00ns
:0  %newIndex = zext i7 %indvars_iv2 to i64

ST_7: arrayA_2_addr_1 [1/1] 0.00ns
:1  %arrayA_2_addr_1 = getelementptr [100 x i32]* %arrayA_2, i64 0, i64 %newIndex

ST_7: arrayA_2_load [2/2] 2.71ns
:2  %arrayA_2_load = load i32* %arrayA_2_addr_1, align 8

ST_7: arrayB_2_addr_1 [1/1] 0.00ns
:3  %arrayB_2_addr_1 = getelementptr [100 x i32]* %arrayB_2, i64 0, i64 %newIndex

ST_7: arrayB_2_load [2/2] 2.71ns
:4  %arrayB_2_load = load i32* %arrayB_2_addr_1, align 8

ST_7: i_4_2 [1/1] 1.84ns
._crit_edge4.2:0  %i_4_2 = add i10 %i_1, 3

ST_7: i_4_2_cast [1/1] 0.00ns
._crit_edge4.2:1  %i_4_2_cast = zext i10 %i_4_2 to i32

ST_7: tmp_3_3 [1/1] 2.52ns
._crit_edge4.2:2  %tmp_3_3 = icmp slt i32 %i_4_2_cast, %n_read

ST_7: stg_218 [1/1] 0.00ns
._crit_edge4.2:3  br i1 %tmp_3_3, label %11, label %._crit_edge4.3

ST_7: newIndex4 [1/1] 0.00ns
:0  %newIndex4 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_3_addr_1 [1/1] 0.00ns
:1  %arrayA_3_addr_1 = getelementptr [100 x i32]* %arrayA_3, i64 0, i64 %newIndex4

ST_7: arrayA_3_load [2/2] 2.71ns
:2  %arrayA_3_load = load i32* %arrayA_3_addr_1, align 4

ST_7: arrayB_3_addr_1 [1/1] 0.00ns
:3  %arrayB_3_addr_1 = getelementptr [100 x i32]* %arrayB_3, i64 0, i64 %newIndex4

ST_7: arrayB_3_load [2/2] 2.71ns
:4  %arrayB_3_load = load i32* %arrayB_3_addr_1, align 4

ST_7: i_4_3 [1/1] 1.84ns
._crit_edge4.3:0  %i_4_3 = add i10 %i_1, 4

ST_7: i_4_3_cast [1/1] 0.00ns
._crit_edge4.3:1  %i_4_3_cast = zext i10 %i_4_3 to i32

ST_7: tmp_3_4 [1/1] 2.52ns
._crit_edge4.3:2  %tmp_3_4 = icmp slt i32 %i_4_3_cast, %n_read

ST_7: stg_227 [1/1] 0.00ns
._crit_edge4.3:3  br i1 %tmp_3_4, label %12, label %._crit_edge4.4

ST_7: newIndex8 [1/1] 0.00ns
:0  %newIndex8 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_4_addr_1 [1/1] 0.00ns
:1  %arrayA_4_addr_1 = getelementptr [100 x i32]* %arrayA_4, i64 0, i64 %newIndex8

ST_7: arrayA_4_load [2/2] 2.71ns
:2  %arrayA_4_load = load i32* %arrayA_4_addr_1, align 8

ST_7: arrayB_4_addr_1 [1/1] 0.00ns
:3  %arrayB_4_addr_1 = getelementptr [100 x i32]* %arrayB_4, i64 0, i64 %newIndex8

ST_7: arrayB_4_load [2/2] 2.71ns
:4  %arrayB_4_load = load i32* %arrayB_4_addr_1, align 8

ST_7: i_4_4 [1/1] 1.84ns
._crit_edge4.4:0  %i_4_4 = add i10 %i_1, 5

ST_7: i_4_4_cast [1/1] 0.00ns
._crit_edge4.4:1  %i_4_4_cast = zext i10 %i_4_4 to i32

ST_7: tmp_3_5 [1/1] 2.52ns
._crit_edge4.4:2  %tmp_3_5 = icmp slt i32 %i_4_4_cast, %n_read

ST_7: stg_236 [1/1] 0.00ns
._crit_edge4.4:3  br i1 %tmp_3_5, label %13, label %._crit_edge4.5

ST_7: newIndex1 [1/1] 0.00ns
:0  %newIndex1 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_5_addr_1 [1/1] 0.00ns
:1  %arrayA_5_addr_1 = getelementptr [100 x i32]* %arrayA_5, i64 0, i64 %newIndex1

ST_7: arrayA_5_load [2/2] 2.71ns
:2  %arrayA_5_load = load i32* %arrayA_5_addr_1, align 4

ST_7: arrayB_5_addr_1 [1/1] 0.00ns
:3  %arrayB_5_addr_1 = getelementptr [100 x i32]* %arrayB_5, i64 0, i64 %newIndex1

ST_7: arrayB_5_load [2/2] 2.71ns
:4  %arrayB_5_load = load i32* %arrayB_5_addr_1, align 4

ST_7: i_4_5 [1/1] 1.84ns
._crit_edge4.5:0  %i_4_5 = add i10 %i_1, 6

ST_7: i_4_5_cast [1/1] 0.00ns
._crit_edge4.5:1  %i_4_5_cast = zext i10 %i_4_5 to i32

ST_7: tmp_3_6 [1/1] 2.52ns
._crit_edge4.5:2  %tmp_3_6 = icmp slt i32 %i_4_5_cast, %n_read

ST_7: stg_245 [1/1] 0.00ns
._crit_edge4.5:3  br i1 %tmp_3_6, label %14, label %._crit_edge4.6

ST_7: newIndex6 [1/1] 0.00ns
:0  %newIndex6 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_6_addr_1 [1/1] 0.00ns
:1  %arrayA_6_addr_1 = getelementptr [100 x i32]* %arrayA_6, i64 0, i64 %newIndex6

ST_7: arrayA_6_load [2/2] 2.71ns
:2  %arrayA_6_load = load i32* %arrayA_6_addr_1, align 8

ST_7: arrayB_6_addr_1 [1/1] 0.00ns
:3  %arrayB_6_addr_1 = getelementptr [100 x i32]* %arrayB_6, i64 0, i64 %newIndex6

ST_7: arrayB_6_load [2/2] 2.71ns
:4  %arrayB_6_load = load i32* %arrayB_6_addr_1, align 8

ST_7: i_4_6 [1/1] 1.84ns
._crit_edge4.6:0  %i_4_6 = add i10 %i_1, 7

ST_7: i_4_6_cast [1/1] 0.00ns
._crit_edge4.6:1  %i_4_6_cast = zext i10 %i_4_6 to i32

ST_7: tmp_3_7 [1/1] 2.52ns
._crit_edge4.6:2  %tmp_3_7 = icmp slt i32 %i_4_6_cast, %n_read

ST_7: stg_254 [1/1] 0.00ns
._crit_edge4.6:3  br i1 %tmp_3_7, label %15, label %._crit_edge4.7

ST_7: newIndex10 [1/1] 0.00ns
:0  %newIndex10 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_7_addr_1 [1/1] 0.00ns
:1  %arrayA_7_addr_1 = getelementptr [100 x i32]* %arrayA_7, i64 0, i64 %newIndex10

ST_7: arrayA_7_load [2/2] 2.71ns
:2  %arrayA_7_load = load i32* %arrayA_7_addr_1, align 4

ST_7: arrayB_7_addr_1 [1/1] 0.00ns
:3  %arrayB_7_addr_1 = getelementptr [100 x i32]* %arrayB_7, i64 0, i64 %newIndex10

ST_7: arrayB_7_load [2/2] 2.71ns
:4  %arrayB_7_load = load i32* %arrayB_7_addr_1, align 4

ST_7: i_4_7 [1/1] 1.84ns
._crit_edge4.7:0  %i_4_7 = add i10 %i_1, 8

ST_7: i_4_7_cast [1/1] 0.00ns
._crit_edge4.7:1  %i_4_7_cast = zext i10 %i_4_7 to i32

ST_7: tmp_3_8 [1/1] 2.52ns
._crit_edge4.7:2  %tmp_3_8 = icmp slt i32 %i_4_7_cast, %n_read

ST_7: stg_263 [1/1] 0.00ns
._crit_edge4.7:3  br i1 %tmp_3_8, label %16, label %._crit_edge4.8

ST_7: newIndex11 [1/1] 0.00ns
:0  %newIndex11 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_8_addr_1 [1/1] 0.00ns
:1  %arrayA_8_addr_1 = getelementptr [100 x i32]* %arrayA_8, i64 0, i64 %newIndex11

ST_7: arrayA_8_load [2/2] 2.71ns
:2  %arrayA_8_load = load i32* %arrayA_8_addr_1, align 8

ST_7: arrayB_8_addr_1 [1/1] 0.00ns
:3  %arrayB_8_addr_1 = getelementptr [100 x i32]* %arrayB_8, i64 0, i64 %newIndex11

ST_7: arrayB_8_load [2/2] 2.71ns
:4  %arrayB_8_load = load i32* %arrayB_8_addr_1, align 8

ST_7: i_4_8 [1/1] 1.84ns
._crit_edge4.8:0  %i_4_8 = add i10 %i_1, 9

ST_7: i_4_8_cast [1/1] 0.00ns
._crit_edge4.8:1  %i_4_8_cast = zext i10 %i_4_8 to i32

ST_7: tmp_3_9 [1/1] 2.52ns
._crit_edge4.8:2  %tmp_3_9 = icmp slt i32 %i_4_8_cast, %n_read

ST_7: stg_272 [1/1] 0.00ns
._crit_edge4.8:3  br i1 %tmp_3_9, label %17, label %._crit_edge4.9

ST_7: newIndex2 [1/1] 0.00ns
:0  %newIndex2 = zext i7 %indvars_iv2 to i64

ST_7: arrayA_9_addr_1 [1/1] 0.00ns
:1  %arrayA_9_addr_1 = getelementptr [100 x i32]* %arrayA_9, i64 0, i64 %newIndex2

ST_7: arrayA_9_load [2/2] 2.71ns
:2  %arrayA_9_load = load i32* %arrayA_9_addr_1, align 4

ST_7: arrayB_9_addr_1 [1/1] 0.00ns
:3  %arrayB_9_addr_1 = getelementptr [100 x i32]* %arrayB_9, i64 0, i64 %newIndex2

ST_7: arrayB_9_load [2/2] 2.71ns
:4  %arrayB_9_load = load i32* %arrayB_9_addr_1, align 4

ST_7: i_4_9 [1/1] 1.84ns
._crit_edge4.9:0  %i_4_9 = add i10 %i_1, 10

ST_7: stg_279 [1/1] 0.00ns
._crit_edge4.9:1  br label %.preheader3.0


 <State 8>: 7.86ns
ST_8: arrayA_0_load [1/2] 2.71ns
:2  %arrayA_0_load = load i32* %arrayA_0_addr_1, align 8

ST_8: arrayB_0_load [1/2] 2.71ns
:4  %arrayB_0_load = load i32* %arrayB_0_addr, align 8

ST_8: tmp_5 [1/1] 2.44ns
:5  %tmp_5 = add nsw i32 %arrayA_0_load, %arrayB_0_load

ST_8: arrayC_0_addr [1/1] 0.00ns
:6  %arrayC_0_addr = getelementptr [100 x i32]* %arrayC_0, i64 0, i64 %newIndex5

ST_8: stg_284 [1/1] 2.71ns
:7  store i32 %tmp_5, i32* %arrayC_0_addr, align 8

ST_8: stg_285 [1/1] 0.00ns
:8  br label %._crit_edge4.0

ST_8: arrayA_1_load [1/2] 2.71ns
:2  %arrayA_1_load = load i32* %arrayA_1_addr_1, align 4

ST_8: arrayB_1_load [1/2] 2.71ns
:4  %arrayB_1_load = load i32* %arrayB_1_addr, align 4

ST_8: tmp_5_1 [1/1] 2.44ns
:5  %tmp_5_1 = add nsw i32 %arrayA_1_load, %arrayB_1_load

ST_8: arrayC_1_addr [1/1] 0.00ns
:6  %arrayC_1_addr = getelementptr [100 x i32]* %arrayC_1, i64 0, i64 %newIndex9

ST_8: stg_290 [1/1] 2.71ns
:7  store i32 %tmp_5_1, i32* %arrayC_1_addr, align 4

ST_8: stg_291 [1/1] 0.00ns
:8  br label %._crit_edge4.1

ST_8: arrayA_2_load [1/2] 2.71ns
:2  %arrayA_2_load = load i32* %arrayA_2_addr_1, align 8

ST_8: arrayB_2_load [1/2] 2.71ns
:4  %arrayB_2_load = load i32* %arrayB_2_addr_1, align 8

ST_8: tmp_5_2 [1/1] 2.44ns
:5  %tmp_5_2 = add nsw i32 %arrayA_2_load, %arrayB_2_load

ST_8: arrayC_2_addr [1/1] 0.00ns
:6  %arrayC_2_addr = getelementptr [100 x i32]* %arrayC_2, i64 0, i64 %newIndex

ST_8: stg_296 [1/1] 2.71ns
:7  store i32 %tmp_5_2, i32* %arrayC_2_addr, align 8

ST_8: stg_297 [1/1] 0.00ns
:8  br label %._crit_edge4.2

ST_8: arrayA_3_load [1/2] 2.71ns
:2  %arrayA_3_load = load i32* %arrayA_3_addr_1, align 4

ST_8: arrayB_3_load [1/2] 2.71ns
:4  %arrayB_3_load = load i32* %arrayB_3_addr_1, align 4

ST_8: tmp_5_3 [1/1] 2.44ns
:5  %tmp_5_3 = add nsw i32 %arrayA_3_load, %arrayB_3_load

ST_8: arrayC_3_addr [1/1] 0.00ns
:6  %arrayC_3_addr = getelementptr [100 x i32]* %arrayC_3, i64 0, i64 %newIndex4

ST_8: stg_302 [1/1] 2.71ns
:7  store i32 %tmp_5_3, i32* %arrayC_3_addr, align 4

ST_8: stg_303 [1/1] 0.00ns
:8  br label %._crit_edge4.3

ST_8: arrayA_4_load [1/2] 2.71ns
:2  %arrayA_4_load = load i32* %arrayA_4_addr_1, align 8

ST_8: arrayB_4_load [1/2] 2.71ns
:4  %arrayB_4_load = load i32* %arrayB_4_addr_1, align 8

ST_8: tmp_5_4 [1/1] 2.44ns
:5  %tmp_5_4 = add nsw i32 %arrayA_4_load, %arrayB_4_load

ST_8: arrayC_4_addr_1 [1/1] 0.00ns
:6  %arrayC_4_addr_1 = getelementptr [100 x i32]* %arrayC_4, i64 0, i64 %newIndex8

ST_8: stg_308 [1/1] 2.71ns
:7  store i32 %tmp_5_4, i32* %arrayC_4_addr_1, align 8

ST_8: stg_309 [1/1] 0.00ns
:8  br label %._crit_edge4.4

ST_8: arrayA_5_load [1/2] 2.71ns
:2  %arrayA_5_load = load i32* %arrayA_5_addr_1, align 4

ST_8: arrayB_5_load [1/2] 2.71ns
:4  %arrayB_5_load = load i32* %arrayB_5_addr_1, align 4

ST_8: tmp_5_5 [1/1] 2.44ns
:5  %tmp_5_5 = add nsw i32 %arrayA_5_load, %arrayB_5_load

ST_8: arrayC_5_addr_1 [1/1] 0.00ns
:6  %arrayC_5_addr_1 = getelementptr [100 x i32]* %arrayC_5, i64 0, i64 %newIndex1

ST_8: stg_314 [1/1] 2.71ns
:7  store i32 %tmp_5_5, i32* %arrayC_5_addr_1, align 4

ST_8: stg_315 [1/1] 0.00ns
:8  br label %._crit_edge4.5

ST_8: arrayA_6_load [1/2] 2.71ns
:2  %arrayA_6_load = load i32* %arrayA_6_addr_1, align 8

ST_8: arrayB_6_load [1/2] 2.71ns
:4  %arrayB_6_load = load i32* %arrayB_6_addr_1, align 8

ST_8: tmp_5_6 [1/1] 2.44ns
:5  %tmp_5_6 = add nsw i32 %arrayA_6_load, %arrayB_6_load

ST_8: arrayC_6_addr_1 [1/1] 0.00ns
:6  %arrayC_6_addr_1 = getelementptr [100 x i32]* %arrayC_6, i64 0, i64 %newIndex6

ST_8: stg_320 [1/1] 2.71ns
:7  store i32 %tmp_5_6, i32* %arrayC_6_addr_1, align 8

ST_8: stg_321 [1/1] 0.00ns
:8  br label %._crit_edge4.6

ST_8: arrayA_7_load [1/2] 2.71ns
:2  %arrayA_7_load = load i32* %arrayA_7_addr_1, align 4

ST_8: arrayB_7_load [1/2] 2.71ns
:4  %arrayB_7_load = load i32* %arrayB_7_addr_1, align 4

ST_8: tmp_5_7 [1/1] 2.44ns
:5  %tmp_5_7 = add nsw i32 %arrayA_7_load, %arrayB_7_load

ST_8: arrayC_7_addr_1 [1/1] 0.00ns
:6  %arrayC_7_addr_1 = getelementptr [100 x i32]* %arrayC_7, i64 0, i64 %newIndex10

ST_8: stg_326 [1/1] 2.71ns
:7  store i32 %tmp_5_7, i32* %arrayC_7_addr_1, align 4

ST_8: stg_327 [1/1] 0.00ns
:8  br label %._crit_edge4.7

ST_8: arrayA_8_load [1/2] 2.71ns
:2  %arrayA_8_load = load i32* %arrayA_8_addr_1, align 8

ST_8: arrayB_8_load [1/2] 2.71ns
:4  %arrayB_8_load = load i32* %arrayB_8_addr_1, align 8

ST_8: tmp_5_8 [1/1] 2.44ns
:5  %tmp_5_8 = add nsw i32 %arrayA_8_load, %arrayB_8_load

ST_8: arrayC_8_addr_1 [1/1] 0.00ns
:6  %arrayC_8_addr_1 = getelementptr [100 x i32]* %arrayC_8, i64 0, i64 %newIndex11

ST_8: stg_332 [1/1] 2.71ns
:7  store i32 %tmp_5_8, i32* %arrayC_8_addr_1, align 8

ST_8: stg_333 [1/1] 0.00ns
:8  br label %._crit_edge4.8

ST_8: arrayA_9_load [1/2] 2.71ns
:2  %arrayA_9_load = load i32* %arrayA_9_addr_1, align 4

ST_8: arrayB_9_load [1/2] 2.71ns
:4  %arrayB_9_load = load i32* %arrayB_9_addr_1, align 4

ST_8: tmp_5_9 [1/1] 2.44ns
:5  %tmp_5_9 = add nsw i32 %arrayA_9_load, %arrayB_9_load

ST_8: arrayC_9_addr_1 [1/1] 0.00ns
:6  %arrayC_9_addr_1 = getelementptr [100 x i32]* %arrayC_9, i64 0, i64 %newIndex2

ST_8: stg_338 [1/1] 2.71ns
:7  store i32 %tmp_5_9, i32* %arrayC_9_addr_1, align 4

ST_8: stg_339 [1/1] 0.00ns
:8  br label %._crit_edge4.9


 <State 9>: 5.26ns
ST_9: i_2 [1/1] 0.00ns
.preheader:0  %i_2 = phi i10 [ %i_4, %._crit_edge5 ], [ 0, %.preheader3.0 ]

ST_9: phi_mul1 [1/1] 0.00ns
.preheader:1  %phi_mul1 = phi i21 [ %next_mul1, %._crit_edge5 ], [ 0, %.preheader3.0 ]

ST_9: exitcond [1/1] 2.07ns
.preheader:2  %exitcond = icmp eq i10 %i_2, -24

ST_9: i_4 [1/1] 1.84ns
.preheader:3  %i_4 = add i10 %i_2, 1

ST_9: stg_344 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %20, label %18

ST_9: i_2_cast1 [1/1] 0.00ns
:0  %i_2_cast1 = zext i10 %i_2 to i32

ST_9: empty_8 [1/1] 0.00ns
:1  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_9: stg_347 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str5) nounwind

ST_9: tmp_4 [1/1] 0.00ns
:3  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str5) nounwind

ST_9: stg_349 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_9: tmp_7 [1/1] 2.52ns
:5  %tmp_7 = icmp slt i32 %i_2_cast1, %n_read

ST_9: next_mul1 [1/1] 2.20ns
:6  %next_mul1 = add i21 %phi_mul1, 1639

ST_9: stg_352 [1/1] 0.00ns
:7  br i1 %tmp_7, label %19, label %._crit_edge5

ST_9: arrayNo1 [14/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10

ST_9: tmp_8 [1/1] 0.00ns
:2  %tmp_8 = call i7 @_ssdm_op_PartSelect.i7.i21.i32.i32(i21 %phi_mul1, i32 14, i32 20)

ST_9: empty_9 [1/1] 0.00ns
._crit_edge5:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str5, i32 %tmp_4) nounwind

ST_9: stg_356 [1/1] 0.00ns
._crit_edge5:1  br label %.preheader


 <State 10>: 3.45ns
ST_10: arrayNo1 [13/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 11>: 3.45ns
ST_11: arrayNo1 [12/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 12>: 3.45ns
ST_12: arrayNo1 [11/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 13>: 3.45ns
ST_13: arrayNo1 [10/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 14>: 3.45ns
ST_14: arrayNo1 [9/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 15>: 3.45ns
ST_15: arrayNo1 [8/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 16>: 3.45ns
ST_16: arrayNo1 [7/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 17>: 3.45ns
ST_17: arrayNo1 [6/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 18>: 3.45ns
ST_18: arrayNo1 [5/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 19>: 3.45ns
ST_19: arrayNo1 [4/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 20>: 3.45ns
ST_20: arrayNo1 [3/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10


 <State 21>: 3.45ns
ST_21: arrayNo1 [2/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10

ST_21: newIndex7 [1/1] 0.00ns
:3  %newIndex7 = zext i7 %tmp_8 to i64

ST_21: arrayC_0_addr_2 [1/1] 0.00ns
:4  %arrayC_0_addr_2 = getelementptr [100 x i32]* %arrayC_0, i64 0, i64 %newIndex7

ST_21: arrayC_0_load [2/2] 2.71ns
:5  %arrayC_0_load = load i32* %arrayC_0_addr_2, align 4

ST_21: arrayC_1_addr_2 [1/1] 0.00ns
:6  %arrayC_1_addr_2 = getelementptr [100 x i32]* %arrayC_1, i64 0, i64 %newIndex7

ST_21: arrayC_1_load [2/2] 2.71ns
:7  %arrayC_1_load = load i32* %arrayC_1_addr_2, align 4

ST_21: arrayC_2_addr_2 [1/1] 0.00ns
:8  %arrayC_2_addr_2 = getelementptr [100 x i32]* %arrayC_2, i64 0, i64 %newIndex7

ST_21: arrayC_2_load [2/2] 2.71ns
:9  %arrayC_2_load = load i32* %arrayC_2_addr_2, align 4

ST_21: arrayC_3_addr_2 [1/1] 0.00ns
:10  %arrayC_3_addr_2 = getelementptr [100 x i32]* %arrayC_3, i64 0, i64 %newIndex7

ST_21: arrayC_3_load [2/2] 2.71ns
:11  %arrayC_3_load = load i32* %arrayC_3_addr_2, align 4

ST_21: arrayC_4_addr_2 [1/1] 0.00ns
:12  %arrayC_4_addr_2 = getelementptr [100 x i32]* %arrayC_4, i64 0, i64 %newIndex7

ST_21: arrayC_4_load [2/2] 2.71ns
:13  %arrayC_4_load = load i32* %arrayC_4_addr_2, align 4

ST_21: arrayC_5_addr_2 [1/1] 0.00ns
:14  %arrayC_5_addr_2 = getelementptr [100 x i32]* %arrayC_5, i64 0, i64 %newIndex7

ST_21: arrayC_5_load [2/2] 2.71ns
:15  %arrayC_5_load = load i32* %arrayC_5_addr_2, align 4

ST_21: arrayC_6_addr_2 [1/1] 0.00ns
:16  %arrayC_6_addr_2 = getelementptr [100 x i32]* %arrayC_6, i64 0, i64 %newIndex7

ST_21: arrayC_6_load [2/2] 2.71ns
:17  %arrayC_6_load = load i32* %arrayC_6_addr_2, align 4

ST_21: arrayC_7_addr_2 [1/1] 0.00ns
:18  %arrayC_7_addr_2 = getelementptr [100 x i32]* %arrayC_7, i64 0, i64 %newIndex7

ST_21: arrayC_7_load [2/2] 2.71ns
:19  %arrayC_7_load = load i32* %arrayC_7_addr_2, align 4

ST_21: arrayC_8_addr_2 [1/1] 0.00ns
:20  %arrayC_8_addr_2 = getelementptr [100 x i32]* %arrayC_8, i64 0, i64 %newIndex7

ST_21: arrayC_8_load [2/2] 2.71ns
:21  %arrayC_8_load = load i32* %arrayC_8_addr_2, align 4

ST_21: arrayC_9_addr_2 [1/1] 0.00ns
:22  %arrayC_9_addr_2 = getelementptr [100 x i32]* %arrayC_9, i64 0, i64 %newIndex7

ST_21: arrayC_9_load [2/2] 2.71ns
:23  %arrayC_9_load = load i32* %arrayC_9_addr_2, align 4


 <State 22>: 5.69ns
ST_22: arrayNo1 [1/14] 3.45ns
:0  %arrayNo1 = urem i10 %i_2, 10

ST_22: arrayNo1_cast [1/1] 0.00ns
:1  %arrayNo1_cast = zext i10 %arrayNo1 to i32

ST_22: arrayC_0_load [1/2] 2.71ns
:5  %arrayC_0_load = load i32* %arrayC_0_addr_2, align 4

ST_22: arrayC_1_load [1/2] 2.71ns
:7  %arrayC_1_load = load i32* %arrayC_1_addr_2, align 4

ST_22: arrayC_2_load [1/2] 2.71ns
:9  %arrayC_2_load = load i32* %arrayC_2_addr_2, align 4

ST_22: arrayC_3_load [1/2] 2.71ns
:11  %arrayC_3_load = load i32* %arrayC_3_addr_2, align 4

ST_22: arrayC_4_load [1/2] 2.71ns
:13  %arrayC_4_load = load i32* %arrayC_4_addr_2, align 4

ST_22: arrayC_5_load [1/2] 2.71ns
:15  %arrayC_5_load = load i32* %arrayC_5_addr_2, align 4

ST_22: arrayC_6_load [1/2] 2.71ns
:17  %arrayC_6_load = load i32* %arrayC_6_addr_2, align 4

ST_22: arrayC_7_load [1/2] 2.71ns
:19  %arrayC_7_load = load i32* %arrayC_7_addr_2, align 4

ST_22: arrayC_8_load [1/2] 2.71ns
:21  %arrayC_8_load = load i32* %arrayC_8_addr_2, align 4

ST_22: arrayC_9_load [1/2] 2.71ns
:23  %arrayC_9_load = load i32* %arrayC_9_addr_2, align 4

ST_22: tmp_2 [1/1] 2.23ns
:24  %tmp_2 = call i32 @_ssdm_op_Mux.ap_auto.10i32.i32(i32 %arrayC_0_load, i32 %arrayC_1_load, i32 %arrayC_2_load, i32 %arrayC_3_load, i32 %arrayC_4_load, i32 %arrayC_5_load, i32 %arrayC_6_load, i32 %arrayC_7_load, i32 %arrayC_8_load, i32 %arrayC_9_load, i32 %arrayNo1_cast) nounwind


 <State 23>: 4.38ns
ST_23: stg_403 [1/1] 4.38ns
:25  call void @_ssdm_op_Write.ap_fifo.i32P(i32* %c, i32 %tmp_2) nounwind

ST_23: stg_404 [1/1] 0.00ns
:26  br label %._crit_edge5


 <State 24>: 0.00ns
ST_24: stg_405 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
