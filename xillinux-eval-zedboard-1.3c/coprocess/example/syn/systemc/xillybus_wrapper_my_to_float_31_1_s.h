// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _xillybus_wrapper_my_to_float_31_1_s_HH_
#define _xillybus_wrapper_my_to_float_31_1_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct xillybus_wrapper_my_to_float_31_1_s : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<31> > in_V;
    sc_in< sc_lv<9> > prescale;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    xillybus_wrapper_my_to_float_31_1_s(sc_module_name name);
    SC_HAS_PROCESS(xillybus_wrapper_my_to_float_31_1_s);

    ~xillybus_wrapper_my_to_float_31_1_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_22;
    sc_signal< sc_lv<32> > out_bits_0_V_fu_185_p5;
    sc_signal< sc_lv<32> > out_bits_0_V_reg_423;
    sc_signal< sc_lv<32> > p_Result_s_fu_209_p5;
    sc_signal< sc_lv<32> > p_Result_s_reg_428;
    sc_signal< sc_lv<2> > i_fu_227_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_48;
    sc_signal< sc_lv<32> > c_1_1_fu_251_p3;
    sc_signal< sc_lv<1> > exitcond_fu_221_p2;
    sc_signal< sc_lv<32> > c_1_2_fu_259_p3;
    sc_signal< sc_lv<1> > tmp_58_fu_267_p3;
    sc_signal< sc_lv<1> > tmp_58_reg_451;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_65;
    sc_signal< sc_lv<2> > i_1_fu_275_p2;
    sc_signal< sc_lv<2> > i_1_reg_455;
    sc_signal< sc_lv<32> > sh_assign_fu_285_p3;
    sc_signal< sc_lv<32> > sh_assign_reg_460;
    sc_signal< sc_lv<1> > isNeg_fu_293_p3;
    sc_signal< sc_lv<1> > isNeg_reg_466;
    sc_signal< sc_lv<31> > tmp_62_fu_331_p1;
    sc_signal< sc_lv<31> > tmp_62_reg_471;
    sc_signal< sc_lv<31> > tmp_63_fu_335_p1;
    sc_signal< sc_lv<31> > tmp_63_reg_476;
    sc_signal< sc_lv<32> > shift_2_fu_339_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_86;
    sc_signal< sc_lv<31> > in_shift_V_fu_345_p3;
    sc_signal< sc_lv<32> > c_0_s_reg_78;
    sc_signal< sc_lv<32> > c_1_s_reg_90;
    sc_signal< sc_lv<2> > i1_reg_102;
    sc_signal< sc_lv<31> > in_shift_reg_113;
    sc_signal< sc_lv<1> > tmp_8_fu_351_p2;
    sc_signal< sc_lv<32> > shift_reg_123;
    sc_signal< sc_lv<2> > i2_reg_135;
    sc_signal< sc_lv<31> > p_Val2_in_phi_fu_149_p4;
    sc_signal< sc_lv<31> > p_Val2_in_reg_146;
    sc_signal< sc_lv<32> > shift_1_phi_fu_159_p4;
    sc_signal< sc_lv<32> > shift_1_reg_156;
    sc_signal< sc_lv<16> > p_Result_1_fu_167_p4;
    sc_signal< sc_lv<17> > tmp_fu_177_p3;
    sc_signal< sc_lv<15> > tmp_57_fu_197_p1;
    sc_signal< sc_lv<16> > tmp_2_fu_201_p3;
    sc_signal< sc_lv<1> > tmp_59_fu_233_p1;
    sc_signal< sc_lv<32> > out_bits_V_load_phi_fu_237_p3;
    sc_signal< sc_lv<32> > c_0_fu_243_p3;
    sc_signal< sc_lv<1> > tmp_60_fu_281_p1;
    sc_signal< sc_lv<32> > tmp_s_fu_301_p2;
    sc_signal< sc_lv<32> > tmp_5_fu_315_p1;
    sc_signal< sc_lv<32> > sh_assign_1_fu_307_p3;
    sc_signal< sc_lv<32> > tmp_6_fu_319_p2;
    sc_signal< sc_lv<32> > tmp_7_fu_325_p2;
    sc_signal< sc_lv<8> > tmp_65_fu_371_p1;
    sc_signal< sc_lv<8> > tmp_10_fu_374_p2;
    sc_signal< sc_lv<8> > tmp_66_fu_380_p1;
    sc_signal< sc_lv<1> > tmp_9_fu_366_p2;
    sc_signal< sc_lv<8> > phitmp_fu_384_p2;
    sc_signal< sc_lv<8> > out_exp_V_fu_390_p3;
    sc_signal< sc_lv<23> > p_Val2_s_fu_356_p4;
    sc_signal< sc_lv<32> > p_Result_31_fu_398_p4;
    sc_signal< sc_lv<32> > result_write_assign_fu_408_p1;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_22();
    void thread_ap_sig_bdd_48();
    void thread_ap_sig_bdd_65();
    void thread_ap_sig_bdd_86();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_c_0_fu_243_p3();
    void thread_c_1_1_fu_251_p3();
    void thread_c_1_2_fu_259_p3();
    void thread_exitcond_fu_221_p2();
    void thread_i_1_fu_275_p2();
    void thread_i_fu_227_p2();
    void thread_in_shift_V_fu_345_p3();
    void thread_isNeg_fu_293_p3();
    void thread_out_bits_0_V_fu_185_p5();
    void thread_out_bits_V_load_phi_fu_237_p3();
    void thread_out_exp_V_fu_390_p3();
    void thread_p_Result_1_fu_167_p4();
    void thread_p_Result_31_fu_398_p4();
    void thread_p_Result_s_fu_209_p5();
    void thread_p_Val2_in_phi_fu_149_p4();
    void thread_p_Val2_s_fu_356_p4();
    void thread_phitmp_fu_384_p2();
    void thread_result_write_assign_fu_408_p1();
    void thread_sh_assign_1_fu_307_p3();
    void thread_sh_assign_fu_285_p3();
    void thread_shift_1_phi_fu_159_p4();
    void thread_shift_2_fu_339_p2();
    void thread_tmp_10_fu_374_p2();
    void thread_tmp_2_fu_201_p3();
    void thread_tmp_57_fu_197_p1();
    void thread_tmp_58_fu_267_p3();
    void thread_tmp_59_fu_233_p1();
    void thread_tmp_5_fu_315_p1();
    void thread_tmp_60_fu_281_p1();
    void thread_tmp_62_fu_331_p1();
    void thread_tmp_63_fu_335_p1();
    void thread_tmp_65_fu_371_p1();
    void thread_tmp_66_fu_380_p1();
    void thread_tmp_6_fu_319_p2();
    void thread_tmp_7_fu_325_p2();
    void thread_tmp_8_fu_351_p2();
    void thread_tmp_9_fu_366_p2();
    void thread_tmp_fu_177_p3();
    void thread_tmp_s_fu_301_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
