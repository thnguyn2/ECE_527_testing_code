-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xillybus_wrapper is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in_r_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_r_empty_n : IN STD_LOGIC;
    in_r_read : OUT STD_LOGIC;
    out_r_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_full_n : IN STD_LOGIC;
    out_r_write : OUT STD_LOGIC;
    debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
    debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    debug_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of xillybus_wrapper is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "xillybus_wrapper,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.549000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=2111,HLS_SYN_LUT=5399}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (27 downto 0) := "0000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (27 downto 0) := "0000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (27 downto 0) := "0000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (27 downto 0) := "0000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (27 downto 0) := "0001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (27 downto 0) := "0010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (27 downto 0) := "0100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (27 downto 0) := "1000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C2 : STD_LOGIC_VECTOR (7 downto 0) := "11000010";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv8_83 : STD_LOGIC_VECTOR (7 downto 0) := "10000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";

    signal p_str3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_str3_ce0 : STD_LOGIC;
    signal p_str3_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_str4_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str4_ce0 : STD_LOGIC;
    signal p_str4_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_str5_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_str5_ce0 : STD_LOGIC;
    signal p_str5_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hls_ref_4oPi_table_100_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hls_ref_4oPi_table_100_V_ce0 : STD_LOGIC;
    signal hls_ref_4oPi_table_100_V_q0 : STD_LOGIC_VECTOR (99 downto 0);
    signal hls_sin_cos_K0_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_sin_cos_K0_V_ce0 : STD_LOGIC;
    signal hls_sin_cos_K0_V_q0 : STD_LOGIC_VECTOR (29 downto 0);
    signal hls_sin_cos_K1_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_sin_cos_K1_V_ce0 : STD_LOGIC;
    signal hls_sin_cos_K1_V_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal hls_sin_cos_K2_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_sin_cos_K2_V_ce0 : STD_LOGIC;
    signal hls_sin_cos_K2_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_103 : BOOLEAN;
    signal tmp_i_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1155 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec_i_fu_380_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec_i_reg_1159 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_str3_load_cast_fu_386_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str3_load_cast_reg_1164 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_117 : BOOLEAN;
    signal ap_sig_bdd_124 : BOOLEAN;
    signal x1_reg_1169 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_136 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_147 : BOOLEAN;
    signal tmp_i3_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec_i8_fu_410_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_rec_i8_reg_1194 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str4_load_cast_fu_416_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str4_load_cast_reg_1199 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_160 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_169 : BOOLEAN;
    signal p_str5_load_cast_fu_434_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str5_load_cast_reg_1212 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_178 : BOOLEAN;
    signal p_0_rec_i9_reg_327 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_185 : BOOLEAN;
    signal p_Result_s_reg_1217 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_fu_445_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1223 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_454_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_1230 : STD_LOGIC_VECTOR (22 downto 0);
    signal closepath_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_1237 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_492_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_reg_1248 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_19_fu_511_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_19_reg_1256 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_208 : BOOLEAN;
    signal Med_V_reg_1261 : STD_LOGIC_VECTOR (70 downto 0);
    signal tmp_48_i_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_i_reg_1266 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_i_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_i_reg_1272 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_i_i_fu_554_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_i_i_reg_1277 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_223 : BOOLEAN;
    signal grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_done : STD_LOGIC;
    signal p_Val2_7_fu_598_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_7_reg_1282 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Result_i3_i_i_reg_1287 : STD_LOGIC_VECTOR (17 downto 0);
    signal cos_basis_fu_616_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_i_fu_721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_i_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1304 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_reg_1309 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_15_reg_1314 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_248 : BOOLEAN;
    signal tmp_12_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal Ex_V_fu_834_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_V_reg_1324 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_29_fu_850_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_29_reg_1336 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_263 : BOOLEAN;
    signal sh_assign_fu_864_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_reg_1343 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1349 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_274 : BOOLEAN;
    signal tmp_35_i_reg_1354 : STD_LOGIC_VECTOR (8 downto 0);
    signal Ex_V_1_fu_945_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_V_1_reg_1359 : STD_LOGIC_VECTOR (7 downto 0);
    signal Mx_V_1_fu_951_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal Mx_V_1_reg_1364 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_37_i_reg_1384 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_295 : BOOLEAN;
    signal p_Val2_18_reg_1389 : STD_LOGIC_VECTOR (29 downto 0);
    signal hls_sin_cos_K1_V_load_reg_1394 : STD_LOGIC_VECTOR (22 downto 0);
    signal hls_sin_cos_K2_V_load_reg_1399 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_5_i_reg_1404 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_307 : BOOLEAN;
    signal tmp_7_i_reg_1409 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_1050_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_reg_1414 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_318 : BOOLEAN;
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_bdd_327 : BOOLEAN;
    signal p_0_i_reg_1429 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st26_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_338 : BOOLEAN;
    signal r_V_1_fu_1082_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_reg_1434 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_17_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_17_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st27_fsm_26 : STD_LOGIC;
    signal ap_sig_bdd_349 : BOOLEAN;
    signal grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_done : STD_LOGIC;
    signal tmp_15_fu_1106_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_15_reg_1444 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start : STD_LOGIC;
    signal grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_idle : STD_LOGIC;
    signal grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_ready : STD_LOGIC;
    signal grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_a_V : STD_LOGIC_VECTOR (70 downto 0);
    signal grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_b_V : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_return : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start : STD_LOGIC;
    signal grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_idle : STD_LOGIC;
    signal grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_ready : STD_LOGIC;
    signal grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_in_V : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_prescale : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_ap_done : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_ap_idle : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_ap_ready : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_val_r : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_debug_ready : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out_ap_vld : STD_LOGIC;
    signal p_0_rec_i_reg_305 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_396 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_403 : BOOLEAN;
    signal tmp_5_fu_390_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_rec_i2_reg_316 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_417 : BOOLEAN;
    signal tmp_6_fu_420_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_429 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_439 : BOOLEAN;
    signal tmp_17_fu_502_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal p_0_rec_i_cast_fu_369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_rec_i2_cast_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_rec_i9_cast_fu_429_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i2_i_i_fu_487_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_i_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st28_fsm_27 : STD_LOGIC;
    signal ap_sig_bdd_481 : BOOLEAN;
    signal y1_fu_496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y2_fu_1145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_op_i_i_fu_463_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_V_fu_469_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_477_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_23_i_i_i_fu_519_p1 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_3_fu_522_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal p_i_i_fu_549_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_i_i_fu_571_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_28_fu_581_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_5_fu_561_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_10_fu_588_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_fu_592_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal cos_basis_fu_616_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_616_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_616_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_616_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_616_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_616_p7 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_616_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_616_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_645_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p7 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p11 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p12 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p13 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p15 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p16 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_645_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_25_fu_638_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_683_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p7 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p11 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p12 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p13 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p15 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p16 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_645_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_683_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_i_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_i_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_20_fu_766_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_21_fu_773_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_22_fu_783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_fu_791_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Mx_zeros_V_fu_799_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_i_i_fu_803_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_9_fu_807_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_6_i_i_fu_830_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_i_i_fu_847_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sh_i_i_cast_fu_855_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_i_i_fu_858_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_i_i_cast_fu_874_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_10_i_i_fu_880_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_9_i_i_fu_877_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_i_i_cast4_fu_871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_i_cast_fu_885_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_i_i_fu_889_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_0_i234_in_i_i_fu_895_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_basis_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_fu_902_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_23_fu_937_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_17_fu_967_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal OP1_V_3_fu_964_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_17_fu_967_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_17_fu_967_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_fu_989_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_1_fu_989_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_1_fu_989_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_6_fu_1011_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_6_fu_1011_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_6_fu_1011_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_19_fu_1027_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_40_i_fu_1034_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_i_fu_1038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_fu_1041_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_i_cast_fu_1047_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1062_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1062_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1062_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal rhs_V_fu_1079_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_22_fu_1089_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_24_fu_1093_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_26_fu_1110_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_27_fu_1121_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_i_i_i_fu_1127_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_i_i_i_i_fu_1117_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_i_fu_1131_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x2_fu_1138_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1062_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1062_p10 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Val2_1_fu_989_p10 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_6_fu_1011_p00 : STD_LOGIC_VECTOR (31 downto 0);

    component xillybus_wrapper_big_mult_v3small_71_24_17_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (70 downto 0);
        b_V : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (94 downto 0) );
    end component;


    component xillybus_wrapper_my_to_float_31_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V : IN STD_LOGIC_VECTOR (30 downto 0);
        prescale : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component xillybus_wrapper_xilly_decprint IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        val_r : IN STD_LOGIC_VECTOR (31 downto 0);
        debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
        debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        debug_out_ap_vld : OUT STD_LOGIC );
    end component;


    component xillybus_wrapper_mux_8to1_sel3_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (0 downto 0);
        din9 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component xillybus_wrapper_mux_16to1_sel4_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (0 downto 0);
        din9 : IN STD_LOGIC_VECTOR (0 downto 0);
        din10 : IN STD_LOGIC_VECTOR (0 downto 0);
        din11 : IN STD_LOGIC_VECTOR (0 downto 0);
        din12 : IN STD_LOGIC_VECTOR (0 downto 0);
        din13 : IN STD_LOGIC_VECTOR (0 downto 0);
        din14 : IN STD_LOGIC_VECTOR (0 downto 0);
        din15 : IN STD_LOGIC_VECTOR (0 downto 0);
        din16 : IN STD_LOGIC_VECTOR (0 downto 0);
        din17 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component xillybus_wrapper_mul_32s_31ns_62_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component xillybus_wrapper_p_str3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component xillybus_wrapper_p_str4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component xillybus_wrapper_p_str5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component xillybus_wrapper_hls_ref_4oPi_table_100_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component xillybus_wrapper_hls_sin_cos_K0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component xillybus_wrapper_hls_sin_cos_K1_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component xillybus_wrapper_hls_sin_cos_K2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    p_str3_U : component xillybus_wrapper_p_str3
    generic map (
        DataWidth => 7,
        AddressRange => 14,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str3_address0,
        ce0 => p_str3_ce0,
        q0 => p_str3_q0);

    p_str4_U : component xillybus_wrapper_p_str4
    generic map (
        DataWidth => 7,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str4_address0,
        ce0 => p_str4_ce0,
        q0 => p_str4_q0);

    p_str5_U : component xillybus_wrapper_p_str5
    generic map (
        DataWidth => 4,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str5_address0,
        ce0 => p_str5_ce0,
        q0 => p_str5_q0);

    hls_ref_4oPi_table_100_V_U : component xillybus_wrapper_hls_ref_4oPi_table_100_V
    generic map (
        DataWidth => 100,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_ref_4oPi_table_100_V_address0,
        ce0 => hls_ref_4oPi_table_100_V_ce0,
        q0 => hls_ref_4oPi_table_100_V_q0);

    hls_sin_cos_K0_V_U : component xillybus_wrapper_hls_sin_cos_K0_V
    generic map (
        DataWidth => 30,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_sin_cos_K0_V_address0,
        ce0 => hls_sin_cos_K0_V_ce0,
        q0 => hls_sin_cos_K0_V_q0);

    hls_sin_cos_K1_V_U : component xillybus_wrapper_hls_sin_cos_K1_V
    generic map (
        DataWidth => 23,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_sin_cos_K1_V_address0,
        ce0 => hls_sin_cos_K1_V_ce0,
        q0 => hls_sin_cos_K1_V_q0);

    hls_sin_cos_K2_V_U : component xillybus_wrapper_hls_sin_cos_K2_V
    generic map (
        DataWidth => 15,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_sin_cos_K2_V_address0,
        ce0 => hls_sin_cos_K2_V_ce0,
        q0 => hls_sin_cos_K2_V_q0);

    grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342 : component xillybus_wrapper_big_mult_v3small_71_24_17_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start,
        ap_done => grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_done,
        ap_idle => grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_idle,
        ap_ready => grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_ready,
        a_V => grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_a_V,
        b_V => grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_b_V,
        ap_return => grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_return);

    grp_xillybus_wrapper_my_to_float_31_1_s_fu_348 : component xillybus_wrapper_my_to_float_31_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start,
        ap_done => grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_done,
        ap_idle => grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_idle,
        ap_ready => grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_ready,
        in_V => grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_in_V,
        prescale => grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_prescale,
        ap_return => grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_return);

    grp_xillybus_wrapper_xilly_decprint_fu_354 : component xillybus_wrapper_xilly_decprint
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start,
        ap_done => grp_xillybus_wrapper_xilly_decprint_fu_354_ap_done,
        ap_idle => grp_xillybus_wrapper_xilly_decprint_fu_354_ap_idle,
        ap_ready => grp_xillybus_wrapper_xilly_decprint_fu_354_ap_ready,
        val_r => grp_xillybus_wrapper_xilly_decprint_fu_354_val_r,
        debug_ready => grp_xillybus_wrapper_xilly_decprint_fu_354_debug_ready,
        debug_out => grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out,
        debug_out_ap_vld => grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out_ap_vld);

    xillybus_wrapper_mux_8to1_sel3_1_1_U12 : component xillybus_wrapper_mux_8to1_sel3_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din1 => cos_basis_fu_616_p1,
        din2 => cos_basis_fu_616_p2,
        din3 => cos_basis_fu_616_p3,
        din4 => cos_basis_fu_616_p4,
        din5 => cos_basis_fu_616_p5,
        din6 => cos_basis_fu_616_p6,
        din7 => cos_basis_fu_616_p7,
        din8 => cos_basis_fu_616_p8,
        din9 => cos_basis_fu_616_p9,
        dout => cos_basis_fu_616_p10);

    xillybus_wrapper_mux_16to1_sel4_1_1_U13 : component xillybus_wrapper_mux_16to1_sel4_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 4,
        dout_WIDTH => 1)
    port map (
        din1 => tmp_fu_645_p1,
        din2 => tmp_fu_645_p2,
        din3 => tmp_fu_645_p3,
        din4 => tmp_fu_645_p4,
        din5 => tmp_fu_645_p5,
        din6 => tmp_fu_645_p6,
        din7 => tmp_fu_645_p7,
        din8 => tmp_fu_645_p8,
        din9 => tmp_fu_645_p9,
        din10 => tmp_fu_645_p10,
        din11 => tmp_fu_645_p11,
        din12 => tmp_fu_645_p12,
        din13 => tmp_fu_645_p13,
        din14 => tmp_fu_645_p14,
        din15 => tmp_fu_645_p15,
        din16 => tmp_fu_645_p16,
        din17 => tmp_fu_645_p17,
        dout => tmp_fu_645_p18);

    xillybus_wrapper_mux_16to1_sel4_1_1_U14 : component xillybus_wrapper_mux_16to1_sel4_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 4,
        dout_WIDTH => 1)
    port map (
        din1 => tmp_1_fu_683_p1,
        din2 => tmp_1_fu_683_p2,
        din3 => tmp_1_fu_683_p3,
        din4 => tmp_1_fu_683_p4,
        din5 => tmp_1_fu_683_p5,
        din6 => tmp_1_fu_683_p6,
        din7 => tmp_1_fu_683_p7,
        din8 => tmp_1_fu_683_p8,
        din9 => tmp_1_fu_683_p9,
        din10 => tmp_1_fu_683_p10,
        din11 => tmp_1_fu_683_p11,
        din12 => tmp_1_fu_683_p12,
        din13 => tmp_1_fu_683_p13,
        din14 => tmp_1_fu_683_p14,
        din15 => tmp_1_fu_683_p15,
        din16 => tmp_1_fu_683_p16,
        din17 => tmp_1_fu_683_p17,
        dout => tmp_1_fu_683_p18);

    xillybus_wrapper_mul_32s_31ns_62_6_U15 : component xillybus_wrapper_mul_32s_31ns_62_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1062_p0,
        din1 => grp_fu_1062_p1,
        ce => grp_fu_1062_ce,
        dout => grp_fu_1062_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start_ap_start_reg assign process. --
    grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                    grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_ready)) then 
                    grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start_ap_start_reg assign process. --
    grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
                    grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_ready)) then 
                    grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start_ap_start_reg assign process. --
    grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_i3_reg_1190)))) then 
                    grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_354_ap_ready)) then 
                    grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_0_rec_i2_reg_316 assign process. --
    p_0_rec_i2_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = tmp_6_fu_420_p1)))) then 
                p_0_rec_i2_reg_316 <= p_rec_i8_reg_1194;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((in_r_empty_n = ap_const_logic_0)))) then 
                p_0_rec_i2_reg_316 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- p_0_rec_i9_reg_327 assign process. --
    p_0_rec_i9_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_17_fu_502_p1)))) then 
                p_0_rec_i9_reg_327 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_logic_0 = grp_xillybus_wrapper_xilly_decprint_fu_354_ap_done)))) then 
                p_0_rec_i9_reg_327 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    -- p_0_rec_i_reg_305 assign process. --
    p_0_rec_i_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_5_fu_390_p1)))) then 
                p_0_rec_i_reg_305 <= p_rec_i_reg_1159;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                p_0_rec_i_reg_305 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                Ex_V_1_reg_1359 <= Ex_V_1_fu_945_p3;
                Mx_V_1_reg_1364 <= Mx_V_1_fu_951_p3;
                p_Val2_s_reg_1349 <= p_Val2_0_i234_in_i_i_fu_895_p3(23 downto 7);
                tmp_35_i_reg_1354 <= p_Val2_0_i234_in_i_i_fu_895_p3(23 downto 15);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                Ex_V_reg_1324 <= Ex_V_fu_834_p2;
                isNeg_reg_1330 <= Ex_V_fu_834_p2(7 downto 7);
                p_Val2_15_reg_1314 <= p_Val2_9_fu_807_p2(48 downto 18);
                tmp_12_reg_1319 <= p_Val2_9_fu_807_p2(17 downto 17);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                Med_V_reg_1261 <= r_V_3_fu_522_p2(99 downto 29);
                notrhs_i_reg_1272 <= notrhs_i_fu_544_p2;
                    p_Result_19_reg_1256(22 downto 0) <= p_Result_19_fu_511_p3(22 downto 0);
                tmp_48_i_reg_1266 <= tmp_48_i_fu_539_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = p_0_rec_i9_reg_327)) and not(ap_sig_bdd_185))) then
                closepath_reg_1237 <= closepath_fu_457_p2;
                loc_V_1_reg_1230 <= loc_V_1_fu_454_p1;
                loc_V_reg_1223 <= tmp_18_reg_1178(30 downto 23);
                p_Result_s_reg_1217 <= tmp_18_reg_1178(31 downto 31);
                tmp_9_reg_1248 <= tmp_9_fu_492_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_logic_0 = grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_done)))) then
                cos_basis_reg_1292 <= cos_basis_fu_616_p10;
                or_cond_i_reg_1304 <= or_cond_i_fu_734_p2;
                p_Result_i3_i_i_reg_1287 <= p_Val2_7_fu_598_p3(48 downto 31);
                p_Val2_7_reg_1282 <= p_Val2_7_fu_598_p3;
                sel_tmp4_i_reg_1309 <= sel_tmp4_i_fu_760_p2;
                storemerge_i_i_reg_1277 <= storemerge_i_i_fu_554_p3;
                tmp_46_i_reg_1299 <= tmp_46_i_fu_721_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then
                hls_sin_cos_K1_V_load_reg_1394 <= hls_sin_cos_K1_V_q0;
                hls_sin_cos_K2_V_load_reg_1399 <= hls_sin_cos_K2_V_q0;
                p_Val2_18_reg_1389 <= hls_sin_cos_K0_V_q0;
                tmp_37_i_reg_1384 <= p_Val2_17_fu_967_p2(17 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then
                p_0_i_reg_1429 <= grp_fu_1062_p2(61 downto 31);
                r_V_1_reg_1434 <= r_V_1_fu_1082_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) and not((ap_const_logic_0 = grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_done)) and not((ap_const_lv1_0 = sel_tmp4_i_reg_1309)) and (ap_const_lv1_0 = or_cond_i_reg_1304))) then
                p_Result_17_reg_1439 <= p_Result_17_fu_1101_p2;
                tmp_15_reg_1444 <= tmp_15_fu_1106_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                p_Val2_29_reg_1336 <= p_Val2_29_fu_850_p2;
                sh_assign_reg_1343 <= sh_assign_fu_864_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                p_rec_i8_reg_1194 <= p_rec_i8_fu_410_p2;
                tmp_i3_reg_1190 <= tmp_i3_fu_404_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                p_rec_i_reg_1159 <= p_rec_i_fu_380_p2;
                tmp_i_reg_1155 <= tmp_i_fu_374_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_124))) then
                    p_str3_load_cast_reg_1164(6 downto 0) <= p_str3_load_cast_fu_386_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                    p_str4_load_cast_reg_1199(6 downto 0) <= p_str4_load_cast_fu_416_p1(6 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(ap_sig_bdd_185))) then
                    p_str5_load_cast_reg_1212(3 downto 0) <= p_str5_load_cast_fu_434_p1(3 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then
                r_V_reg_1414 <= r_V_fu_1050_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((in_r_empty_n = ap_const_logic_0)))) then
                tmp_18_reg_1178 <= in_r_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then
                tmp_5_i_reg_1404 <= p_Val2_1_fu_989_p2(39 downto 16);
                tmp_7_i_reg_1409 <= p_Val2_6_fu_1011_p2(31 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((tmp_i_reg_1155 = ap_const_lv1_0)) and not(ap_sig_bdd_124))) then
                x1_reg_1169 <= in_r_dout;
            end if;
        end if;
    end process;
    p_str3_load_cast_reg_1164(7) <= '0';
    p_str4_load_cast_reg_1199(7) <= '0';
    p_str5_load_cast_reg_1212(7 downto 4) <= "0000";
    p_Result_19_reg_1256(23) <= '1';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (in_r_empty_n, out_r_full_n, ap_CS_fsm, tmp_i_reg_1155, ap_sig_bdd_124, tmp_i3_reg_1190, p_0_rec_i9_reg_327, ap_sig_bdd_185, grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_done, grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_done, grp_xillybus_wrapper_xilly_decprint_fu_354_ap_done, tmp_5_fu_390_p1, tmp_6_fu_420_p1, tmp_17_fu_502_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                if ((not((tmp_i_reg_1155 = ap_const_lv1_0)) and not(ap_sig_bdd_124))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                elsif (((tmp_i_reg_1155 = ap_const_lv1_0) and not(ap_sig_bdd_124))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = tmp_5_fu_390_p1))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not((in_r_empty_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = tmp_i3_reg_1190))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_lv1_0 = tmp_6_fu_420_p1))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                if (not((ap_const_logic_0 = grp_xillybus_wrapper_xilly_decprint_fu_354_ap_done))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if ((not((ap_const_lv1_0 = p_0_rec_i9_reg_327)) and not(ap_sig_bdd_185))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                elsif (((ap_const_lv1_0 = p_0_rec_i9_reg_327) and not(ap_sig_bdd_185))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_lv1_0 = tmp_17_fu_502_p1))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                if (not((ap_const_logic_0 = grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_done))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                if (not((ap_const_logic_0 = grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_done))) then
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                else
                    ap_NS_fsm <= ap_ST_st27_fsm_26;
                end if;
            when ap_ST_st28_fsm_27 => 
                if (not((out_r_full_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Ex_V_1_fu_945_p3 <= 
        ap_const_lv8_0 when (cos_basis_reg_1292(0) = '1') else 
        Ex_V_reg_1324;
    Ex_V_fu_834_p2 <= std_logic_vector(unsigned(storemerge_i_i_reg_1277) - unsigned(tmp_6_i_i_fu_830_p1));
    Mx_V_1_fu_951_p3 <= 
        ap_const_lv31_7FFFFFFF when (cos_basis_reg_1292(0) = '1') else 
        p_Val2_29_reg_1336;
    Mx_zeros_V_fu_799_p1 <= val_assign_fu_791_p3(5 - 1 downto 0);
    OP1_V_3_fu_964_p1 <= std_logic_vector(resize(unsigned(tmp_35_i_reg_1354),18));
    addr_V_fu_469_p3 <= 
        ap_const_lv8_3F when (closepath_fu_457_p2(0) = '1') else 
        p_op_i_i_fu_463_p2;

    -- ap_sig_bdd_103 assign process. --
    ap_sig_bdd_103_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_103 <= (ap_CS_fsm(1 downto 1) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_117 assign process. --
    ap_sig_bdd_117_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_117 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_124 assign process. --
    ap_sig_bdd_124_assign_proc : process(in_r_empty_n, tmp_i_reg_1155)
    begin
                ap_sig_bdd_124 <= ((in_r_empty_n = ap_const_logic_0) and not((tmp_i_reg_1155 = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_136 assign process. --
    ap_sig_bdd_136_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_136 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_147 assign process. --
    ap_sig_bdd_147_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_147 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_160 assign process. --
    ap_sig_bdd_160_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_160 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_169 assign process. --
    ap_sig_bdd_169_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_169 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_178 assign process. --
    ap_sig_bdd_178_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_178 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_185 assign process. --
    ap_sig_bdd_185_assign_proc : process(out_r_full_n, p_0_rec_i9_reg_327)
    begin
                ap_sig_bdd_185 <= ((out_r_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = p_0_rec_i9_reg_327)));
    end process;


    -- ap_sig_bdd_208 assign process. --
    ap_sig_bdd_208_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_208 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_223 assign process. --
    ap_sig_bdd_223_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_223 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_248 assign process. --
    ap_sig_bdd_248_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_248 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_263 assign process. --
    ap_sig_bdd_263_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_263 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_274 assign process. --
    ap_sig_bdd_274_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_274 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_295 assign process. --
    ap_sig_bdd_295_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_295 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_307 assign process. --
    ap_sig_bdd_307_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_307 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_318 assign process. --
    ap_sig_bdd_318_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_318 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_327 assign process. --
    ap_sig_bdd_327_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_327 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    -- ap_sig_bdd_338 assign process. --
    ap_sig_bdd_338_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_338 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_349 assign process. --
    ap_sig_bdd_349_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_349 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    -- ap_sig_bdd_396 assign process. --
    ap_sig_bdd_396_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_396 <= (ap_const_lv1_1 = ap_CS_fsm(0 downto 0));
    end process;


    -- ap_sig_bdd_403 assign process. --
    ap_sig_bdd_403_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_403 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_417 assign process. --
    ap_sig_bdd_417_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_417 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_429 assign process. --
    ap_sig_bdd_429_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_429 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_439 assign process. --
    ap_sig_bdd_439_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_439 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_481 assign process. --
    ap_sig_bdd_481_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_481 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_169)
    begin
        if (ap_sig_bdd_169) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_178)
    begin
        if (ap_sig_bdd_178) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_11 assign process. --
    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_bdd_439)
    begin
        if (ap_sig_bdd_439) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st13_fsm_12 assign process. --
    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_bdd_208)
    begin
        if (ap_sig_bdd_208) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_13 assign process. --
    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_bdd_223)
    begin
        if (ap_sig_bdd_223) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st15_fsm_14 assign process. --
    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_bdd_248)
    begin
        if (ap_sig_bdd_248) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st16_fsm_15 assign process. --
    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_bdd_263)
    begin
        if (ap_sig_bdd_263) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st17_fsm_16 assign process. --
    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_bdd_274)
    begin
        if (ap_sig_bdd_274) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st18_fsm_17 assign process. --
    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_bdd_295)
    begin
        if (ap_sig_bdd_295) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_18 assign process. --
    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_bdd_307)
    begin
        if (ap_sig_bdd_307) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_396)
    begin
        if (ap_sig_bdd_396) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st20_fsm_19 assign process. --
    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_bdd_318)
    begin
        if (ap_sig_bdd_318) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st21_fsm_20 assign process. --
    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_bdd_327)
    begin
        if (ap_sig_bdd_327) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st26_fsm_25 assign process. --
    ap_sig_cseq_ST_st26_fsm_25_assign_proc : process(ap_sig_bdd_338)
    begin
        if (ap_sig_bdd_338) then 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st27_fsm_26 assign process. --
    ap_sig_cseq_ST_st27_fsm_26_assign_proc : process(ap_sig_bdd_349)
    begin
        if (ap_sig_bdd_349) then 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st28_fsm_27 assign process. --
    ap_sig_cseq_ST_st28_fsm_27_assign_proc : process(ap_sig_bdd_481)
    begin
        if (ap_sig_bdd_481) then 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_103)
    begin
        if (ap_sig_bdd_103) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_117)
    begin
        if (ap_sig_bdd_117) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_403)
    begin
        if (ap_sig_bdd_403) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_136)
    begin
        if (ap_sig_bdd_136) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_147)
    begin
        if (ap_sig_bdd_147) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_160)
    begin
        if (ap_sig_bdd_160) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_417)
    begin
        if (ap_sig_bdd_417) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_429)
    begin
        if (ap_sig_bdd_429) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    closepath_fu_457_p2 <= "1" when (unsigned(loc_V_fu_445_p4) < unsigned(ap_const_lv8_7E)) else "0";
    cos_basis_fu_616_p1 <= ap_const_lv1_0;
    cos_basis_fu_616_p2 <= ap_const_lv1_1;
    cos_basis_fu_616_p3 <= ap_const_lv1_1;
    cos_basis_fu_616_p4 <= ap_const_lv1_0;
    cos_basis_fu_616_p5 <= ap_const_lv1_0;
    cos_basis_fu_616_p6 <= ap_const_lv1_1;
    cos_basis_fu_616_p7 <= ap_const_lv1_1;
    cos_basis_fu_616_p8 <= ap_const_lv1_0;
    cos_basis_fu_616_p9 <= p_Val2_28_fu_581_p3;

    -- debug_out assign process. --
    debug_out_assign_proc : process(p_str3_load_cast_reg_1164, tmp_i3_reg_1190, p_str4_load_cast_reg_1199, ap_sig_cseq_ST_st7_fsm_6, p_str5_load_cast_reg_1212, grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out, grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out_ap_vld, ap_sig_cseq_ST_st4_fsm_3, tmp_5_fu_390_p1, ap_sig_cseq_ST_st8_fsm_7, tmp_6_fu_420_p1, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st12_fsm_11, tmp_17_fu_502_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_17_fu_502_p1)))) then 
            debug_out <= p_str5_load_cast_reg_1212;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = tmp_6_fu_420_p1)))) then 
            debug_out <= p_str4_load_cast_reg_1199;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_5_fu_390_p1)))) then 
            debug_out <= p_str3_load_cast_reg_1164;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_i3_reg_1190)) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out_ap_vld)))) then 
            debug_out <= grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out;
        else 
            debug_out <= "XXXXXXXX";
        end if; 
    end process;


    -- debug_out_ap_vld assign process. --
    debug_out_ap_vld_assign_proc : process(tmp_i3_reg_1190, ap_sig_cseq_ST_st7_fsm_6, grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out_ap_vld, ap_sig_cseq_ST_st4_fsm_3, tmp_5_fu_390_p1, ap_sig_cseq_ST_st8_fsm_7, tmp_6_fu_420_p1, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st12_fsm_11, tmp_17_fu_502_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_5_fu_390_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = tmp_6_fu_420_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_17_fu_502_p1))))) then 
            debug_out_ap_vld <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_i3_reg_1190))))) then 
            debug_out_ap_vld <= grp_xillybus_wrapper_xilly_decprint_fu_354_debug_out_ap_vld;
        else 
            debug_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1062_ce <= ap_const_logic_1;
    grp_fu_1062_p0 <= r_V_reg_1414;
    grp_fu_1062_p1 <= grp_fu_1062_p10(31 - 1 downto 0);
    grp_fu_1062_p10 <= std_logic_vector(resize(unsigned(Mx_V_1_reg_1364),62));
    grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_a_V <= Med_V_reg_1261;
    grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start <= grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_start_ap_start_reg;
    grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_b_V <= p_Result_19_reg_1256;
    grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start <= grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_start_ap_start_reg;
    grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_in_V <= p_0_i_reg_1429;
    grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_prescale <= r_V_1_reg_1434;
    grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start <= grp_xillybus_wrapper_xilly_decprint_fu_354_ap_start_ap_start_reg;
    grp_xillybus_wrapper_xilly_decprint_fu_354_debug_ready <= debug_ready;
    grp_xillybus_wrapper_xilly_decprint_fu_354_val_r <= x1_reg_1169;
    hls_ref_4oPi_table_100_V_address0 <= tmp_i2_i_i_fu_487_p1(4 - 1 downto 0);

    -- hls_ref_4oPi_table_100_V_ce0 assign process. --
    hls_ref_4oPi_table_100_V_ce0_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, ap_sig_bdd_185)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(ap_sig_bdd_185))) then 
            hls_ref_4oPi_table_100_V_ce0 <= ap_const_logic_1;
        else 
            hls_ref_4oPi_table_100_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_sin_cos_K0_V_address0 <= tmp_38_i_fu_957_p1(8 - 1 downto 0);

    -- hls_sin_cos_K0_V_ce0 assign process. --
    hls_sin_cos_K0_V_ce0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            hls_sin_cos_K0_V_ce0 <= ap_const_logic_1;
        else 
            hls_sin_cos_K0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_sin_cos_K1_V_address0 <= tmp_38_i_fu_957_p1(8 - 1 downto 0);

    -- hls_sin_cos_K1_V_ce0 assign process. --
    hls_sin_cos_K1_V_ce0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            hls_sin_cos_K1_V_ce0 <= ap_const_logic_1;
        else 
            hls_sin_cos_K1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_sin_cos_K2_V_address0 <= tmp_38_i_fu_957_p1(8 - 1 downto 0);

    -- hls_sin_cos_K2_V_ce0 assign process. --
    hls_sin_cos_K2_V_ce0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            hls_sin_cos_K2_V_ce0 <= ap_const_logic_1;
        else 
            hls_sin_cos_K2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- in_r_read assign process. --
    in_r_read_assign_proc : process(in_r_empty_n, tmp_i_reg_1155, ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_124, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((tmp_i_reg_1155 = ap_const_lv1_0)) and not(ap_sig_bdd_124)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((in_r_empty_n = ap_const_logic_0))))) then 
            in_r_read <= ap_const_logic_1;
        else 
            in_r_read <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_1_fu_454_p1 <= tmp_18_reg_1178(23 - 1 downto 0);
    loc_V_fu_445_p4 <= tmp_18_reg_1178(30 downto 23);
    notlhs_i_fu_739_p2 <= "0" when (loc_V_reg_1223 = ap_const_lv8_FF) else "1";
    notrhs_i_fu_544_p2 <= "0" when (loc_V_1_reg_1230 = ap_const_lv23_0) else "1";
    or_cond_i_fu_734_p2 <= (tmp_47_i_fu_729_p2 and tmp_48_i_reg_1266);

    -- out_r_din assign process. --
    out_r_din_assign_proc : process(out_r_full_n, ap_sig_cseq_ST_st11_fsm_10, p_0_rec_i9_reg_327, ap_sig_bdd_185, ap_sig_cseq_ST_st28_fsm_27, y1_fu_496_p2, y2_fu_1145_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and not((out_r_full_n = ap_const_logic_0)))) then 
            out_r_din <= y2_fu_1145_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = p_0_rec_i9_reg_327)) and not(ap_sig_bdd_185))) then 
            out_r_din <= y1_fu_496_p2;
        else 
            out_r_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- out_r_write assign process. --
    out_r_write_assign_proc : process(out_r_full_n, ap_sig_cseq_ST_st11_fsm_10, p_0_rec_i9_reg_327, ap_sig_bdd_185, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = p_0_rec_i9_reg_327)) and not(ap_sig_bdd_185)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27) and not((out_r_full_n = ap_const_logic_0))))) then 
            out_r_write <= ap_const_logic_1;
        else 
            out_r_write <= ap_const_logic_0;
        end if; 
    end process;

    p_0_rec_i2_cast_fu_399_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i2_reg_316),64));
    p_0_rec_i9_cast_fu_429_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i9_reg_327),64));
    p_0_rec_i_cast_fu_369_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i_reg_305),64));
    p_Result_17_fu_1101_p2 <= (tmp_46_i_reg_1299 or p_Result_24_fu_1093_p3);
    p_Result_19_fu_511_p3 <= (ap_const_lv1_1 & loc_V_1_reg_1230);
    p_Result_20_fu_766_p3 <= (p_Result_i3_i_i_reg_1287 & ap_const_lv1_1);
    
    p_Result_21_fu_773_p4_proc : process(p_Result_20_fu_766_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(19+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(19+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(19 - 1 downto 0);
    variable p_Result_21_fu_773_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(19 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(19 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(19 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_12(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Result_20_fu_766_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(19-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(19-1-unsigned(ap_const_lv32_12(5-1 downto 0)));
            for p_Result_21_fu_773_p4_i in 0 to 19-1 loop
                v0_cpy(p_Result_21_fu_773_p4_i) := p_Result_20_fu_766_p3(19-1-p_Result_21_fu_773_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy),to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(19-1 downto 0)))));
        res_mask := res_mask(19-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_21_fu_773_p4 <= resvalue(19-1 downto 0);
    end process;

    p_Result_22_fu_783_p3 <= (ap_const_lv13_1FFF & p_Result_21_fu_773_p4);
    p_Result_23_fu_937_p3 <= (sin_basis_fu_932_p2 & p_Result_i_fu_902_p4);
    p_Result_24_fu_1093_p3 <= p_Val2_22_fu_1089_p1(31 downto 31);
    p_Result_25_fu_638_p3 <= (p_Result_s_reg_1217 & p_Val2_28_fu_581_p3);
    p_Result_26_fu_1110_p3 <= (p_Result_s_reg_1217 & ap_const_lv31_0);
    p_Result_27_fu_1121_p3 <= (p_Result_17_reg_1439 & tmp_15_reg_1444);
    p_Result_i_fu_902_p4 <= p_Val2_0_i234_in_i_i_fu_895_p3(30 downto 24);
    p_Val2_0_i234_in_i_i_fu_895_p3 <= 
        tmp_10_i_i_cast_fu_885_p1 when (isNeg_reg_1330(0) = '1') else 
        tmp_12_i_i_fu_889_p2;
    p_Val2_17_fu_967_p0 <= OP1_V_3_fu_964_p1(9 - 1 downto 0);
    p_Val2_17_fu_967_p1 <= OP1_V_3_fu_964_p1(9 - 1 downto 0);
    p_Val2_17_fu_967_p2 <= std_logic_vector(resize(unsigned(p_Val2_17_fu_967_p0) * unsigned(p_Val2_17_fu_967_p1), 18));
    p_Val2_19_fu_1027_p3 <= (p_Val2_18_reg_1389 & ap_const_lv1_0);
    p_Val2_1_fu_989_p0 <= hls_sin_cos_K1_V_load_reg_1394;
    p_Val2_1_fu_989_p1 <= p_Val2_1_fu_989_p10(17 - 1 downto 0);
    p_Val2_1_fu_989_p10 <= std_logic_vector(resize(unsigned(p_Val2_s_reg_1349),40));
    p_Val2_1_fu_989_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(p_Val2_1_fu_989_p0) * signed('0' &p_Val2_1_fu_989_p1))), 40));
    p_Val2_20_fu_1041_p2 <= std_logic_vector(signed(tmp_40_i_fu_1034_p1) + signed(tmp_41_i_fu_1038_p1));
    p_Val2_22_fu_1089_p1 <= grp_xillybus_wrapper_my_to_float_31_1_s_fu_348_ap_return;
    p_Val2_28_fu_581_p3 <= 
        ap_const_lv3_0 when (closepath_reg_1237(0) = '1') else 
        tmp_5_i_i_fu_571_p4;
    p_Val2_29_fu_850_p2 <= std_logic_vector(unsigned(p_Val2_15_reg_1314) + unsigned(tmp_3_i_i_fu_847_p1));
    p_Val2_5_fu_561_p4 <= grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_return(67 downto 19);
    p_Val2_6_fu_1011_p0 <= p_Val2_6_fu_1011_p00(17 - 1 downto 0);
    p_Val2_6_fu_1011_p00 <= std_logic_vector(resize(unsigned(tmp_37_i_reg_1384),32));
    p_Val2_6_fu_1011_p1 <= hls_sin_cos_K2_V_load_reg_1399;
    p_Val2_6_fu_1011_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_6_fu_1011_p0) * signed(p_Val2_6_fu_1011_p1))), 32));
    p_Val2_7_fu_598_p3 <= 
        p_Val2_i_i_fu_592_p2 when (tmp_10_fu_588_p1(0) = '1') else 
        p_Val2_5_fu_561_p4;
    p_Val2_9_fu_807_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_7_reg_1282),to_integer(unsigned('0' & tmp_1_i_i_fu_803_p1(31-1 downto 0)))));
    p_Val2_i_i_fu_592_p2 <= std_logic_vector(unsigned(ap_const_lv49_0) - unsigned(p_Val2_5_fu_561_p4));
    p_i_i_fu_549_p2 <= std_logic_vector(signed(ap_const_lv8_83) + signed(loc_V_reg_1223));
    p_op_i_i_fu_463_p2 <= std_logic_vector(signed(ap_const_lv8_C2) + signed(loc_V_fu_445_p4));
    p_rec_i8_fu_410_p2 <= std_logic_vector(unsigned(p_0_rec_i2_reg_316) + unsigned(ap_const_lv2_1));
    p_rec_i_fu_380_p2 <= std_logic_vector(unsigned(p_0_rec_i_reg_305) + unsigned(ap_const_lv4_1));
    p_str3_address0 <= p_0_rec_i_cast_fu_369_p1(4 - 1 downto 0);

    -- p_str3_ce0 assign process. --
    p_str3_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_str3_ce0 <= ap_const_logic_1;
        else 
            p_str3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str3_load_cast_fu_386_p1 <= std_logic_vector(resize(unsigned(p_str3_q0),8));
    p_str4_address0 <= p_0_rec_i2_cast_fu_399_p1(2 - 1 downto 0);

    -- p_str4_ce0 assign process. --
    p_str4_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            p_str4_ce0 <= ap_const_logic_1;
        else 
            p_str4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str4_load_cast_fu_416_p1 <= std_logic_vector(resize(unsigned(p_str4_q0),8));
    p_str5_address0 <= p_0_rec_i9_cast_fu_429_p1(1 - 1 downto 0);

    -- p_str5_ce0 assign process. --
    p_str5_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            p_str5_ce0 <= ap_const_logic_1;
        else 
            p_str5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str5_load_cast_fu_434_p1 <= std_logic_vector(resize(unsigned(p_str5_q0),8));
    r_V_1_fu_1082_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(rhs_V_fu_1079_p1));
    r_V_3_fu_522_p2 <= std_logic_vector(shift_left(unsigned(hls_ref_4oPi_table_100_V_q0),to_integer(unsigned('0' & tmp_23_i_i_i_fu_519_p1(31-1 downto 0)))));
    r_V_fu_1050_p2 <= std_logic_vector(signed(p_Val2_20_fu_1041_p2) + signed(tmp_43_i_cast_fu_1047_p1));
    ret_i_i_i_fu_1127_p1 <= p_Result_27_fu_1121_p3;
    ret_i_i_i_i_fu_1117_p1 <= p_Result_26_fu_1110_p3;
        rhs_V_fu_1079_p1 <= std_logic_vector(resize(signed(Ex_V_1_reg_1359),9));

    sel_tmp1_i_fu_744_p2 <= (notrhs_i_reg_1272 or notlhs_i_fu_739_p2);
    sel_tmp3_i_fu_749_p2 <= (tmp_48_i_reg_1266 or notlhs_i_fu_739_p2);
    sel_tmp4_i_fu_760_p2 <= (tmp3_fu_754_p2 and sel_tmp1_i_fu_744_p2);
    sel_tmp5_i_fu_1131_p3 <= 
        ret_i_i_i_fu_1127_p1 when (sel_tmp4_i_reg_1309(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
        sh_assign_1_i_i_cast4_fu_871_p1 <= std_logic_vector(resize(signed(sh_assign_reg_1343),32));

        sh_assign_1_i_i_cast_fu_874_p1 <= std_logic_vector(resize(signed(sh_assign_reg_1343),31));

    sh_assign_fu_864_p3 <= 
        tmp_8_i_i_fu_858_p2 when (isNeg_reg_1330(0) = '1') else 
        sh_i_i_cast_fu_855_p1;
        sh_i_i_cast_fu_855_p1 <= std_logic_vector(resize(signed(Ex_V_reg_1324),9));

    sin_basis_fu_932_p2 <= (cos_basis_reg_1292 xor ap_const_lv1_1);
    storemerge_i_i_fu_554_p3 <= 
        p_i_i_fu_549_p2 when (closepath_reg_1237(0) = '1') else 
        ap_const_lv8_0;
    tmp3_fu_754_p2 <= (or_cond_i_fu_734_p2 xor sel_tmp3_i_fu_749_p2);
    tmp_10_fu_588_p1 <= p_Val2_28_fu_581_p3(1 - 1 downto 0);
    tmp_10_i_i_cast_fu_885_p1 <= std_logic_vector(resize(unsigned(tmp_10_i_i_fu_880_p2),32));
    tmp_10_i_i_fu_880_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_29_reg_1336),to_integer(unsigned('0' & sh_assign_1_i_i_cast_fu_874_p1(31-1 downto 0)))));
    tmp_12_i_i_fu_889_p2 <= std_logic_vector(shift_left(unsigned(tmp_9_i_i_fu_877_p1),to_integer(unsigned('0' & sh_assign_1_i_i_cast4_fu_871_p1(31-1 downto 0)))));
    tmp_15_fu_1106_p1 <= p_Val2_22_fu_1089_p1(31 - 1 downto 0);
    tmp_17_fu_502_p1 <= debug_ready(1 - 1 downto 0);
    tmp_1_fu_683_p1 <= ap_const_lv1_0;
    tmp_1_fu_683_p10 <= ap_const_lv1_0;
    tmp_1_fu_683_p11 <= ap_const_lv1_1;
    tmp_1_fu_683_p12 <= ap_const_lv1_1;
    tmp_1_fu_683_p13 <= ap_const_lv1_0;
    tmp_1_fu_683_p14 <= ap_const_lv1_1;
    tmp_1_fu_683_p15 <= ap_const_lv1_0;
    tmp_1_fu_683_p16 <= ap_const_lv1_0;
    tmp_1_fu_683_p17 <= p_Result_25_fu_638_p3;
    tmp_1_fu_683_p2 <= ap_const_lv1_0;
    tmp_1_fu_683_p3 <= ap_const_lv1_1;
    tmp_1_fu_683_p4 <= ap_const_lv1_0;
    tmp_1_fu_683_p5 <= ap_const_lv1_1;
    tmp_1_fu_683_p6 <= ap_const_lv1_1;
    tmp_1_fu_683_p7 <= ap_const_lv1_0;
    tmp_1_fu_683_p8 <= ap_const_lv1_1;
    tmp_1_fu_683_p9 <= ap_const_lv1_1;
    tmp_1_i_i_fu_803_p1 <= std_logic_vector(resize(unsigned(Mx_zeros_V_fu_799_p1),49));
    tmp_23_i_i_i_fu_519_p1 <= std_logic_vector(resize(unsigned(tmp_9_reg_1248),100));
    tmp_38_i_fu_957_p1 <= std_logic_vector(resize(unsigned(p_Result_23_fu_937_p3),64));
    tmp_3_i_i_fu_847_p1 <= std_logic_vector(resize(unsigned(tmp_12_reg_1319),31));
        tmp_40_i_fu_1034_p1 <= std_logic_vector(resize(signed(p_Val2_19_fu_1027_p3),32));

        tmp_41_i_fu_1038_p1 <= std_logic_vector(resize(signed(tmp_5_i_reg_1404),32));

        tmp_43_i_cast_fu_1047_p1 <= std_logic_vector(resize(signed(tmp_7_i_reg_1409),32));

    tmp_46_i_fu_721_p3 <= 
        tmp_fu_645_p18 when (cos_basis_fu_616_p10(0) = '1') else 
        tmp_1_fu_683_p18;
    tmp_47_i_fu_729_p2 <= "1" when (loc_V_reg_1223 = ap_const_lv8_0) else "0";
    tmp_48_i_fu_539_p2 <= "1" when (loc_V_1_reg_1230 = ap_const_lv23_0) else "0";
    tmp_4_fu_477_p4 <= addr_V_fu_469_p3(7 downto 4);
    tmp_5_fu_390_p1 <= debug_ready(1 - 1 downto 0);
    tmp_5_i_i_fu_571_p4 <= grp_xillybus_wrapper_big_mult_v3small_71_24_17_s_fu_342_ap_return(70 downto 68);
    tmp_6_fu_420_p1 <= debug_ready(1 - 1 downto 0);
    tmp_6_i_i_fu_830_p1 <= std_logic_vector(resize(unsigned(Mx_zeros_V_fu_799_p1),8));
    tmp_8_i_i_fu_858_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sh_i_i_cast_fu_855_p1));
    tmp_9_fu_492_p1 <= addr_V_fu_469_p3(4 - 1 downto 0);
    tmp_9_i_i_fu_877_p1 <= std_logic_vector(resize(unsigned(p_Val2_29_reg_1336),32));
    tmp_fu_645_p1 <= ap_const_lv1_0;
    tmp_fu_645_p10 <= ap_const_lv1_1;
    tmp_fu_645_p11 <= ap_const_lv1_1;
    tmp_fu_645_p12 <= ap_const_lv1_1;
    tmp_fu_645_p13 <= ap_const_lv1_1;
    tmp_fu_645_p14 <= ap_const_lv1_0;
    tmp_fu_645_p15 <= ap_const_lv1_0;
    tmp_fu_645_p16 <= ap_const_lv1_0;
    tmp_fu_645_p17 <= p_Result_25_fu_638_p3;
    tmp_fu_645_p2 <= ap_const_lv1_0;
    tmp_fu_645_p3 <= ap_const_lv1_0;
    tmp_fu_645_p4 <= ap_const_lv1_1;
    tmp_fu_645_p5 <= ap_const_lv1_1;
    tmp_fu_645_p6 <= ap_const_lv1_1;
    tmp_fu_645_p7 <= ap_const_lv1_1;
    tmp_fu_645_p8 <= ap_const_lv1_0;
    tmp_fu_645_p9 <= ap_const_lv1_0;
    tmp_i2_i_i_fu_487_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_477_p4),64));
    tmp_i3_fu_404_p2 <= "1" when (p_0_rec_i2_reg_316 = ap_const_lv2_3) else "0";
    tmp_i_fu_374_p2 <= "1" when (p_0_rec_i_reg_305 = ap_const_lv4_D) else "0";
    
    val_assign_fu_791_p3_proc : process(p_Result_22_fu_783_p3)
    begin
        val_assign_fu_791_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_22_fu_783_p3(i) = '1' then
                val_assign_fu_791_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    x2_fu_1138_p3 <= 
        ret_i_i_i_i_fu_1117_p1 when (or_cond_i_reg_1304(0) = '1') else 
        sel_tmp5_i_fu_1131_p3;
    y1_fu_496_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(x1_reg_1169));
    y2_fu_1145_p1 <= x2_fu_1138_p3;
end behav;
