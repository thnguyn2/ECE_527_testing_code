

================================================================
== Vivado HLS Report for 'xillybus_wrapper'
================================================================
* Date:           Wed Oct 14 17:26:12 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        coprocess
* Solution:       example
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.55|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|    13|    no    |
        | + Loop 1.1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 2     |    ?|    ?|         ?|          -|          -|     3|    no    |
        | + Loop 2.1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 3     |    ?|    ?|         ?|          -|          -|     1|    no    |
        | + Loop 3.1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 28
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (!tmp_i)
	5  / (tmp_i)
4 --> 
	4  / (!tmp_5)
	2  / (tmp_5)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / (!tmp_i3)
	9  / (tmp_i3)
8 --> 
	8  / (!tmp_6)
	6  / (tmp_6)
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / (!p_0_rec_i9)
	13  / (p_0_rec_i9)
12 --> 
	12  / (!tmp_17)
	10  / (tmp_17)
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_29 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %in_r) nounwind, !map !19

ST_1: stg_30 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %out_r) nounwind, !map !23

ST_1: stg_31 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecTopModule([17 x i8]* @str) nounwind

ST_1: stg_32 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecInterface(i32* %in_r, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_33 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecInterface(i32* %out_r, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_34 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_35 [1/1] 1.57ns
:6  br label %1


 <State 2>: 2.39ns
ST_2: p_0_rec_i [1/1] 0.00ns
:0  %p_0_rec_i = phi i4 [ 0, %0 ], [ %p_rec_i, %2 ]

ST_2: p_0_rec_i_cast [1/1] 0.00ns
:1  %p_0_rec_i_cast = zext i4 %p_0_rec_i to i64

ST_2: p_str3_addr [1/1] 0.00ns
:2  %p_str3_addr = getelementptr [14 x i7]* @p_str3, i64 0, i64 %p_0_rec_i_cast

ST_2: p_str3_load [2/2] 2.39ns
:3  %p_str3_load = load i7* %p_str3_addr, align 1

ST_2: tmp_i [1/1] 1.88ns
:5  %tmp_i = icmp eq i4 %p_0_rec_i, -3

ST_2: p_rec_i [1/1] 0.80ns
:7  %p_rec_i = add i4 %p_0_rec_i, 1


 <State 3>: 4.38ns
ST_3: p_str3_load [1/2] 2.39ns
:3  %p_str3_load = load i7* %p_str3_addr, align 1

ST_3: p_str3_load_cast [1/1] 0.00ns
:4  %p_str3_load_cast = zext i7 %p_str3_load to i8

ST_3: empty [1/1] 0.00ns
:6  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind

ST_3: stg_45 [1/1] 0.00ns
:8  br i1 %tmp_i, label %xilly_puts.2.exit, label %.preheader.i

ST_3: x1 [1/1] 4.38ns
xilly_puts.2.exit:0  %x1 = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %in_r) nounwind


 <State 4>: 1.57ns
ST_4: debug_ready_load [1/1] 0.00ns
.preheader.i:0  %debug_ready_load = load volatile i8* @debug_ready, align 1

ST_4: tmp_5 [1/1] 0.00ns
.preheader.i:1  %tmp_5 = trunc i8 %debug_ready_load to i1

ST_4: stg_49 [1/1] 0.00ns
.preheader.i:2  br i1 %tmp_5, label %2, label %.preheader.i

ST_4: stg_50 [1/1] 1.57ns
:0  store volatile i8 %p_str3_load_cast, i8* @debug_out, align 1

ST_4: stg_51 [1/1] 0.00ns
:1  br label %1


 <State 5>: 4.38ns
ST_5: tmp_18 [1/1] 4.38ns
xilly_puts.2.exit:1  %tmp_18 = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %in_r) nounwind

ST_5: stg_53 [1/1] 1.57ns
xilly_puts.2.exit:2  br label %3


 <State 6>: 2.39ns
ST_6: p_0_rec_i2 [1/1] 0.00ns
:0  %p_0_rec_i2 = phi i2 [ 0, %xilly_puts.2.exit ], [ %p_rec_i8, %4 ]

ST_6: p_0_rec_i2_cast [1/1] 0.00ns
:1  %p_0_rec_i2_cast = zext i2 %p_0_rec_i2 to i64

ST_6: p_str4_addr [1/1] 0.00ns
:2  %p_str4_addr = getelementptr [4 x i7]* @p_str4, i64 0, i64 %p_0_rec_i2_cast

ST_6: p_str4_load [2/2] 2.39ns
:3  %p_str4_load = load i7* %p_str4_addr, align 1

ST_6: tmp_i3 [1/1] 1.36ns
:5  %tmp_i3 = icmp eq i2 %p_0_rec_i2, -1

ST_6: p_rec_i8 [1/1] 0.80ns
:7  %p_rec_i8 = add i2 %p_0_rec_i2, 1


 <State 7>: 2.39ns
ST_7: p_str4_load [1/2] 2.39ns
:3  %p_str4_load = load i7* %p_str4_addr, align 1

ST_7: p_str4_load_cast [1/1] 0.00ns
:4  %p_str4_load_cast = zext i7 %p_str4_load to i8

ST_7: empty_39 [1/1] 0.00ns
:6  %empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_7: stg_63 [1/1] 0.00ns
:8  br i1 %tmp_i3, label %xilly_puts.1.exit, label %.preheader.i7

ST_7: stg_64 [2/2] 1.57ns
xilly_puts.1.exit:0  call fastcc void @xillybus_wrapper_xilly_decprint(i32 %x1)


 <State 8>: 1.57ns
ST_8: debug_ready_load_1 [1/1] 0.00ns
.preheader.i7:0  %debug_ready_load_1 = load volatile i8* @debug_ready, align 1

ST_8: tmp_6 [1/1] 0.00ns
.preheader.i7:1  %tmp_6 = trunc i8 %debug_ready_load_1 to i1

ST_8: stg_67 [1/1] 0.00ns
.preheader.i7:2  br i1 %tmp_6, label %4, label %.preheader.i7

ST_8: stg_68 [1/1] 1.57ns
:0  store volatile i8 %p_str4_load_cast, i8* @debug_out, align 1

ST_8: stg_69 [1/1] 0.00ns
:1  br label %3


 <State 9>: 1.57ns
ST_9: stg_70 [1/2] 0.00ns
xilly_puts.1.exit:0  call fastcc void @xillybus_wrapper_xilly_decprint(i32 %x1)

ST_9: stg_71 [1/1] 1.57ns
xilly_puts.1.exit:1  br label %5


 <State 10>: 2.39ns
ST_10: p_0_rec_i9 [1/1] 0.00ns
:0  %p_0_rec_i9 = phi i1 [ false, %xilly_puts.1.exit ], [ true, %6 ]

ST_10: p_0_rec_i9_cast [1/1] 0.00ns
:1  %p_0_rec_i9_cast = zext i1 %p_0_rec_i9 to i64

ST_10: p_str5_addr [1/1] 0.00ns
:2  %p_str5_addr = getelementptr [2 x i4]* @p_str5, i64 0, i64 %p_0_rec_i9_cast

ST_10: p_str5_load [2/2] 2.39ns
:3  %p_str5_load = load i4* %p_str5_addr, align 1


 <State 11>: 6.81ns
ST_11: p_str5_load [1/2] 2.39ns
:3  %p_str5_load = load i4* %p_str5_addr, align 1

ST_11: p_str5_load_cast [1/1] 0.00ns
:4  %p_str5_load_cast = zext i4 %p_str5_load to i8

ST_11: empty_40 [1/1] 0.00ns
:5  %empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1) nounwind

ST_11: stg_79 [1/1] 0.00ns
:6  br i1 %p_0_rec_i9, label %xilly_puts.exit, label %.preheader.i14

ST_11: p_Result_s [1/1] 0.00ns
xilly_puts.exit:3  %p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %tmp_18, i32 31)

ST_11: loc_V [1/1] 0.00ns
xilly_puts.exit:4  %loc_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_18, i32 23, i32 30) nounwind

ST_11: loc_V_1 [1/1] 0.00ns
xilly_puts.exit:5  %loc_V_1 = trunc i32 %tmp_18 to i23

ST_11: closepath [1/1] 2.00ns
xilly_puts.exit:6  %closepath = icmp ult i8 %loc_V, 126

ST_11: p_op_i_i [1/1] 1.72ns
xilly_puts.exit:11  %p_op_i_i = add i8 -62, %loc_V

ST_11: addr_V [1/1] 1.37ns
xilly_puts.exit:12  %addr_V = select i1 %closepath, i8 63, i8 %p_op_i_i

ST_11: tmp_4 [1/1] 0.00ns
xilly_puts.exit:13  %tmp_4 = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %addr_V, i32 4, i32 7)

ST_11: tmp_i2_i_i [1/1] 0.00ns
xilly_puts.exit:14  %tmp_i2_i_i = zext i4 %tmp_4 to i64

ST_11: hls_ref_4oPi_table_100_V_addr [1/1] 0.00ns
xilly_puts.exit:15  %hls_ref_4oPi_table_100_V_addr = getelementptr [13 x i100]* @hls_ref_4oPi_table_100_V, i64 0, i64 %tmp_i2_i_i

ST_11: table_100_V [2/2] 2.42ns
xilly_puts.exit:16  %table_100_V = load i100* %hls_ref_4oPi_table_100_V_addr, align 16

ST_11: tmp_9 [1/1] 0.00ns
xilly_puts.exit:17  %tmp_9 = trunc i8 %addr_V to i4

ST_11: y1 [1/1] 2.44ns
xilly_puts.exit:115  %y1 = add nsw i32 1, %x1

ST_11: stg_92 [1/1] 4.38ns
xilly_puts.exit:117  call void @_ssdm_op_Write.ap_fifo.i32P(i32* %out_r, i32 %y1) nounwind


 <State 12>: 1.57ns
ST_12: debug_ready_load_2 [1/1] 0.00ns
.preheader.i14:0  %debug_ready_load_2 = load volatile i8* @debug_ready, align 1

ST_12: tmp_17 [1/1] 0.00ns
.preheader.i14:1  %tmp_17 = trunc i8 %debug_ready_load_2 to i1

ST_12: stg_95 [1/1] 0.00ns
.preheader.i14:2  br i1 %tmp_17, label %6, label %.preheader.i14

ST_12: stg_96 [1/1] 1.57ns
:0  store volatile i8 %p_str5_load_cast, i8* @debug_out, align 1

ST_12: stg_97 [1/1] 0.00ns
:1  br label %5


 <State 13>: 6.04ns
ST_13: p_Result_19 [1/1] 0.00ns
xilly_puts.exit:9  %p_Result_19 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_1) nounwind

ST_13: table_100_V [1/2] 2.42ns
xilly_puts.exit:16  %table_100_V = load i100* %hls_ref_4oPi_table_100_V_addr, align 16

ST_13: tmp_23_i_i_i [1/1] 0.00ns
xilly_puts.exit:18  %tmp_23_i_i_i = zext i4 %tmp_9 to i100

ST_13: r_V_3 [1/1] 3.62ns
xilly_puts.exit:19  %r_V_3 = shl i100 %table_100_V, %tmp_23_i_i_i

ST_13: Med_V [1/1] 0.00ns
xilly_puts.exit:20  %Med_V = call i71 @_ssdm_op_PartSelect.i71.i100.i32.i32(i100 %r_V_3, i32 29, i32 99) nounwind

ST_13: p_Val2_12 [2/2] 0.00ns
xilly_puts.exit:21  %p_Val2_12 = call fastcc i95 @"xillybus_wrapper_big_mult_v3small<71, 24, 17>"(i71 %Med_V, i24 %p_Result_19) nounwind

ST_13: tmp_48_i [1/1] 2.39ns
xilly_puts.exit:100  %tmp_48_i = icmp eq i23 %loc_V_1, 0

ST_13: notrhs_i [1/1] 2.39ns
xilly_puts.exit:108  %notrhs_i = icmp ne i23 %loc_V_1, 0


 <State 14>: 7.37ns
ST_14: p_i_i [1/1] 1.72ns
xilly_puts.exit:7  %p_i_i = add i8 -125, %loc_V

ST_14: storemerge_i_i [1/1] 1.37ns
xilly_puts.exit:8  %storemerge_i_i = select i1 %closepath, i8 %p_i_i, i8 0

ST_14: p_Val2_12 [1/2] 2.39ns
xilly_puts.exit:21  %p_Val2_12 = call fastcc i95 @"xillybus_wrapper_big_mult_v3small<71, 24, 17>"(i71 %Med_V, i24 %p_Result_19) nounwind

ST_14: p_Val2_5 [1/1] 0.00ns
xilly_puts.exit:22  %p_Val2_5 = call i49 @_ssdm_op_PartSelect.i49.i95.i32.i32(i95 %p_Val2_12, i32 19, i32 67)

ST_14: tmp_5_i_i [1/1] 0.00ns
xilly_puts.exit:23  %tmp_5_i_i = call i3 @_ssdm_op_PartSelect.i3.i95.i32.i32(i95 %p_Val2_12, i32 68, i32 70) nounwind

ST_14: p_Val2_28 [1/1] 1.37ns
xilly_puts.exit:24  %p_Val2_28 = select i1 %closepath, i3 0, i3 %tmp_5_i_i

ST_14: tmp_10 [1/1] 0.00ns
xilly_puts.exit:25  %tmp_10 = trunc i3 %p_Val2_28 to i1

ST_14: p_Val2_i_i [1/1] 3.04ns
xilly_puts.exit:26  %p_Val2_i_i = sub i49 0, %p_Val2_5

ST_14: p_Val2_7 [1/1] 1.37ns
xilly_puts.exit:27  %p_Val2_7 = select i1 %tmp_10, i49 %p_Val2_i_i, i49 %p_Val2_5

ST_14: p_Result_i3_i_i [1/1] 0.00ns
xilly_puts.exit:28  %p_Result_i3_i_i = call i18 @_ssdm_op_PartSelect.i18.i49.i32.i32(i49 %p_Val2_7, i32 31, i32 48) nounwind

ST_14: cos_basis [1/1] 1.94ns
xilly_puts.exit:59  %cos_basis = call i1 @_ssdm_op_Mux.ap_auto.8i1.i3(i1 false, i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i3 %p_Val2_28) nounwind

ST_14: p_Result_25 [1/1] 0.00ns
xilly_puts.exit:94  %p_Result_25 = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 %p_Result_s, i3 %p_Val2_28) nounwind

ST_14: tmp [1/1] 2.23ns
xilly_puts.exit:95  %tmp = call i1 @_ssdm_op_Mux.ap_auto.16i1.i4(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i4 %p_Result_25) nounwind

ST_14: tmp_1 [1/1] 2.23ns
xilly_puts.exit:96  %tmp_1 = call i1 @_ssdm_op_Mux.ap_auto.16i1.i4(i1 false, i1 false, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 false, i1 false, i4 %p_Result_25) nounwind

ST_14: tmp_46_i [1/1] 1.37ns
xilly_puts.exit:97  %tmp_46_i = select i1 %cos_basis, i1 %tmp, i1 %tmp_1

ST_14: tmp_47_i [1/1] 2.00ns
xilly_puts.exit:99  %tmp_47_i = icmp eq i8 %loc_V, 0

ST_14: or_cond_i [1/1] 1.37ns
xilly_puts.exit:101  %or_cond_i = and i1 %tmp_47_i, %tmp_48_i

ST_14: notlhs_i [1/1] 2.00ns
xilly_puts.exit:107  %notlhs_i = icmp ne i8 %loc_V, -1

ST_14: sel_tmp1_i [1/1] 1.37ns
xilly_puts.exit:109  %sel_tmp1_i = or i1 %notrhs_i, %notlhs_i

ST_14: sel_tmp3_i [1/1] 1.37ns
xilly_puts.exit:110  %sel_tmp3_i = or i1 %tmp_48_i, %notlhs_i

ST_14: tmp3 [1/1] 1.37ns
xilly_puts.exit:111  %tmp3 = xor i1 %or_cond_i, %sel_tmp3_i

ST_14: sel_tmp4_i [1/1] 1.37ns
xilly_puts.exit:112  %sel_tmp4_i = and i1 %tmp3, %sel_tmp1_i


 <State 15>: 6.77ns
ST_15: p_Result_20 [1/1] 0.00ns
xilly_puts.exit:29  %p_Result_20 = call i19 @_ssdm_op_BitConcatenate.i19.i18.i1(i18 %p_Result_i3_i_i, i1 true) nounwind

ST_15: p_Result_21 [1/1] 0.00ns
xilly_puts.exit:30  %p_Result_21 = call i19 @llvm.part.select.i19(i19 %p_Result_20, i32 18, i32 0) nounwind

ST_15: p_Result_22 [1/1] 0.00ns
xilly_puts.exit:31  %p_Result_22 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 -1, i19 %p_Result_21) nounwind

ST_15: val_assign [1/1] 3.21ns
xilly_puts.exit:32  %val_assign = call i32 @llvm.cttz.i32(i32 %p_Result_22, i1 true) nounwind

ST_15: Mx_zeros_V [1/1] 0.00ns
xilly_puts.exit:33  %Mx_zeros_V = trunc i32 %val_assign to i5

ST_15: tmp_1_i_i [1/1] 0.00ns
xilly_puts.exit:34  %tmp_1_i_i = zext i5 %Mx_zeros_V to i49

ST_15: p_Val2_9 [1/1] 3.56ns
xilly_puts.exit:35  %p_Val2_9 = shl i49 %p_Val2_7, %tmp_1_i_i

ST_15: p_Val2_15 [1/1] 0.00ns
xilly_puts.exit:36  %p_Val2_15 = call i31 @_ssdm_op_PartSelect.i31.i49.i32.i32(i49 %p_Val2_9, i32 18, i32 48)

ST_15: tmp_12 [1/1] 0.00ns
xilly_puts.exit:37  %tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i49.i32(i49 %p_Val2_9, i32 17)

ST_15: tmp_6_i_i [1/1] 0.00ns
xilly_puts.exit:40  %tmp_6_i_i = zext i5 %Mx_zeros_V to i8

ST_15: Ex_V [1/1] 1.72ns
xilly_puts.exit:41  %Ex_V = sub i8 %storemerge_i_i, %tmp_6_i_i

ST_15: isNeg [1/1] 0.00ns
xilly_puts.exit:43  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %Ex_V, i32 7)


 <State 16>: 3.09ns
ST_16: tmp_3_i_i [1/1] 0.00ns
xilly_puts.exit:38  %tmp_3_i_i = zext i1 %tmp_12 to i31

ST_16: p_Val2_29 [1/1] 2.44ns
xilly_puts.exit:39  %p_Val2_29 = add i31 %p_Val2_15, %tmp_3_i_i

ST_16: sh_i_i_cast [1/1] 0.00ns
xilly_puts.exit:42  %sh_i_i_cast = sext i8 %Ex_V to i9

ST_16: tmp_8_i_i [1/1] 1.72ns
xilly_puts.exit:44  %tmp_8_i_i = sub i9 0, %sh_i_i_cast

ST_16: sh_assign [1/1] 1.37ns
xilly_puts.exit:45  %sh_assign = select i1 %isNeg, i9 %tmp_8_i_i, i9 %sh_i_i_cast


 <State 17>: 6.63ns
ST_17: sh_assign_1_i_i_cast4 [1/1] 0.00ns
xilly_puts.exit:46  %sh_assign_1_i_i_cast4 = sext i9 %sh_assign to i32

ST_17: sh_assign_1_i_i_cast [1/1] 0.00ns
xilly_puts.exit:47  %sh_assign_1_i_i_cast = sext i9 %sh_assign to i31

ST_17: tmp_9_i_i [1/1] 0.00ns
xilly_puts.exit:48  %tmp_9_i_i = zext i31 %p_Val2_29 to i32

ST_17: tmp_10_i_i [1/1] 2.80ns
xilly_puts.exit:49  %tmp_10_i_i = lshr i31 %p_Val2_29, %sh_assign_1_i_i_cast

ST_17: tmp_10_i_i_cast [1/1] 0.00ns
xilly_puts.exit:50  %tmp_10_i_i_cast = zext i31 %tmp_10_i_i to i32

ST_17: tmp_12_i_i [1/1] 2.80ns
xilly_puts.exit:51  %tmp_12_i_i = shl i32 %tmp_9_i_i, %sh_assign_1_i_i_cast4

ST_17: p_Val2_0_i234_in_i_i [1/1] 1.37ns
xilly_puts.exit:52  %p_Val2_0_i234_in_i_i = select i1 %isNeg, i32 %tmp_10_i_i_cast, i32 %tmp_12_i_i

ST_17: p_Result_i [1/1] 0.00ns
xilly_puts.exit:53  %p_Result_i = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %p_Val2_0_i234_in_i_i, i32 24, i32 30)

ST_17: p_Val2_s [1/1] 0.00ns
xilly_puts.exit:54  %p_Val2_s = call i17 @_ssdm_op_PartSelect.i17.i32.i32.i32(i32 %p_Val2_0_i234_in_i_i, i32 7, i32 23)

ST_17: tmp_35_i [1/1] 0.00ns
xilly_puts.exit:55  %tmp_35_i = call i9 @_ssdm_op_PartSelect.i9.i32.i32.i32(i32 %p_Val2_0_i234_in_i_i, i32 15, i32 23)

ST_17: sin_basis [1/1] 1.37ns
xilly_puts.exit:60  %sin_basis = xor i1 %cos_basis, true

ST_17: p_Result_23 [1/1] 0.00ns
xilly_puts.exit:61  %p_Result_23 = call i8 @_ssdm_op_BitConcatenate.i8.i1.i7(i1 %sin_basis, i7 %p_Result_i) nounwind

ST_17: Ex_V_1 [1/1] 1.37ns
xilly_puts.exit:62  %Ex_V_1 = select i1 %cos_basis, i8 0, i8 %Ex_V

ST_17: Mx_V_1 [1/1] 1.37ns
xilly_puts.exit:63  %Mx_V_1 = select i1 %cos_basis, i31 -1, i31 %p_Val2_29

ST_17: tmp_38_i [1/1] 0.00ns
xilly_puts.exit:64  %tmp_38_i = zext i8 %p_Result_23 to i64

ST_17: hls_sin_cos_K0_V_addr [1/1] 0.00ns
xilly_puts.exit:65  %hls_sin_cos_K0_V_addr = getelementptr [256 x i30]* @hls_sin_cos_K0_V, i64 0, i64 %tmp_38_i

ST_17: p_Val2_18 [2/2] 2.45ns
xilly_puts.exit:66  %p_Val2_18 = load i30* %hls_sin_cos_K0_V_addr, align 4

ST_17: hls_sin_cos_K1_V_addr [1/1] 0.00ns
xilly_puts.exit:69  %hls_sin_cos_K1_V_addr = getelementptr [256 x i23]* @hls_sin_cos_K1_V, i64 0, i64 %tmp_38_i

ST_17: hls_sin_cos_K1_V_load [2/2] 2.45ns
xilly_puts.exit:70  %hls_sin_cos_K1_V_load = load i23* %hls_sin_cos_K1_V_addr, align 4

ST_17: hls_sin_cos_K2_V_addr [1/1] 0.00ns
xilly_puts.exit:75  %hls_sin_cos_K2_V_addr = getelementptr [256 x i15]* @hls_sin_cos_K2_V, i64 0, i64 %tmp_38_i

ST_17: hls_sin_cos_K2_V_load [2/2] 2.46ns
xilly_puts.exit:76  %hls_sin_cos_K2_V_load = load i15* %hls_sin_cos_K2_V_addr, align 2


 <State 18>: 6.38ns
ST_18: OP1_V_3 [1/1] 0.00ns
xilly_puts.exit:56  %OP1_V_3 = zext i9 %tmp_35_i to i18

ST_18: p_Val2_17 [1/1] 6.38ns
xilly_puts.exit:57  %p_Val2_17 = mul i18 %OP1_V_3, %OP1_V_3

ST_18: tmp_37_i [1/1] 0.00ns
xilly_puts.exit:58  %tmp_37_i = call i17 @_ssdm_op_PartSelect.i17.i18.i32.i32(i18 %p_Val2_17, i32 1, i32 17)

ST_18: p_Val2_18 [1/2] 2.45ns
xilly_puts.exit:66  %p_Val2_18 = load i30* %hls_sin_cos_K0_V_addr, align 4

ST_18: hls_sin_cos_K1_V_load [1/2] 2.45ns
xilly_puts.exit:70  %hls_sin_cos_K1_V_load = load i23* %hls_sin_cos_K1_V_addr, align 4

ST_18: hls_sin_cos_K2_V_load [1/2] 2.46ns
xilly_puts.exit:76  %hls_sin_cos_K2_V_load = load i15* %hls_sin_cos_K2_V_addr, align 2


 <State 19>: 6.38ns
ST_19: OP1_V [1/1] 0.00ns
xilly_puts.exit:68  %OP1_V = zext i17 %p_Val2_s to i40

ST_19: OP2_V_1 [1/1] 0.00ns
xilly_puts.exit:71  %OP2_V_1 = sext i23 %hls_sin_cos_K1_V_load to i40

ST_19: p_Val2_1 [1/1] 6.38ns
xilly_puts.exit:72  %p_Val2_1 = mul i40 %OP2_V_1, %OP1_V

ST_19: tmp_5_i [1/1] 0.00ns
xilly_puts.exit:73  %tmp_5_i = call i24 @_ssdm_op_PartSelect.i24.i40.i32.i32(i40 %p_Val2_1, i32 16, i32 39)

ST_19: OP1_V_1 [1/1] 0.00ns
xilly_puts.exit:74  %OP1_V_1 = zext i17 %tmp_37_i to i32

ST_19: OP2_V_2 [1/1] 0.00ns
xilly_puts.exit:77  %OP2_V_2 = sext i15 %hls_sin_cos_K2_V_load to i32

ST_19: p_Val2_6 [1/1] 6.38ns
xilly_puts.exit:78  %p_Val2_6 = mul i32 %OP1_V_1, %OP2_V_2

ST_19: tmp_7_i [1/1] 0.00ns
xilly_puts.exit:79  %tmp_7_i = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %p_Val2_6, i32 16, i32 31)


 <State 20>: 3.94ns
ST_20: p_Val2_19 [1/1] 0.00ns
xilly_puts.exit:67  %p_Val2_19 = call i31 @_ssdm_op_BitConcatenate.i31.i30.i1(i30 %p_Val2_18, i1 false)

ST_20: tmp_40_i [1/1] 0.00ns
xilly_puts.exit:80  %tmp_40_i = sext i31 %p_Val2_19 to i32

ST_20: tmp_41_i [1/1] 0.00ns
xilly_puts.exit:81  %tmp_41_i = sext i24 %tmp_5_i to i32

ST_20: p_Val2_20 [1/1] 1.97ns
xilly_puts.exit:82  %p_Val2_20 = add nsw i32 %tmp_40_i, %tmp_41_i

ST_20: tmp_43_i_cast [1/1] 0.00ns
xilly_puts.exit:83  %tmp_43_i_cast = sext i16 %tmp_7_i to i32

ST_20: r_V [1/1] 1.97ns
xilly_puts.exit:84  %r_V = add i32 %p_Val2_20, %tmp_43_i_cast


 <State 21>: 6.08ns
ST_21: OP1_V_2_i_cast [1/1] 0.00ns
xilly_puts.exit:85  %OP1_V_2_i_cast = sext i32 %r_V to i62

ST_21: OP2_V_3_i_cast [1/1] 0.00ns
xilly_puts.exit:86  %OP2_V_3_i_cast = zext i31 %Mx_V_1 to i62

ST_21: p_Val2_21 [6/6] 6.08ns
xilly_puts.exit:87  %p_Val2_21 = mul i62 %OP1_V_2_i_cast, %OP2_V_3_i_cast


 <State 22>: 6.08ns
ST_22: p_Val2_21 [5/6] 6.08ns
xilly_puts.exit:87  %p_Val2_21 = mul i62 %OP1_V_2_i_cast, %OP2_V_3_i_cast


 <State 23>: 6.08ns
ST_23: p_Val2_21 [4/6] 6.08ns
xilly_puts.exit:87  %p_Val2_21 = mul i62 %OP1_V_2_i_cast, %OP2_V_3_i_cast


 <State 24>: 6.08ns
ST_24: p_Val2_21 [3/6] 6.08ns
xilly_puts.exit:87  %p_Val2_21 = mul i62 %OP1_V_2_i_cast, %OP2_V_3_i_cast


 <State 25>: 6.08ns
ST_25: p_Val2_21 [2/6] 6.08ns
xilly_puts.exit:87  %p_Val2_21 = mul i62 %OP1_V_2_i_cast, %OP2_V_3_i_cast


 <State 26>: 6.08ns
ST_26: p_Val2_21 [1/6] 6.08ns
xilly_puts.exit:87  %p_Val2_21 = mul i62 %OP1_V_2_i_cast, %OP2_V_3_i_cast

ST_26: p_0_i [1/1] 0.00ns
xilly_puts.exit:88  %p_0_i = call i31 @_ssdm_op_PartSelect.i31.i62.i32.i32(i62 %p_Val2_21, i32 31, i32 61)

ST_26: rhs_V [1/1] 0.00ns
xilly_puts.exit:89  %rhs_V = sext i8 %Ex_V_1 to i9

ST_26: r_V_1 [1/1] 1.72ns
xilly_puts.exit:90  %r_V_1 = sub i9 0, %rhs_V

ST_26: resultf [2/2] 0.00ns
xilly_puts.exit:91  %resultf = call fastcc float @"xillybus_wrapper_my_to_float<31, 1>"(i31 %p_0_i, i9 %r_V_1) nounwind


 <State 27>: 8.55ns
ST_27: resultf [1/2] 7.18ns
xilly_puts.exit:91  %resultf = call fastcc float @"xillybus_wrapper_my_to_float<31, 1>"(i31 %p_0_i, i9 %r_V_1) nounwind

ST_27: p_Val2_22 [1/1] 0.00ns
xilly_puts.exit:92  %p_Val2_22 = bitcast float %resultf to i32

ST_27: p_Result_24 [1/1] 0.00ns
xilly_puts.exit:93  %p_Result_24 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_22, i32 31)

ST_27: p_Result_17 [1/1] 1.37ns
xilly_puts.exit:98  %p_Result_17 = or i1 %tmp_46_i, %p_Result_24

ST_27: tmp_15 [1/1] 0.00ns
xilly_puts.exit:104  %tmp_15 = trunc i32 %p_Val2_22 to i31


 <State 28>: 7.12ns
ST_28: stg_203 [1/1] 0.00ns
xilly_puts.exit:0  call void (...)* @_ssdm_op_SpecMemCore([256 x i30]* @hls_sin_cos_K0_V, [1 x i8]* @p_str1804, [14 x i8]* @p_str1806, [1 x i8]* @p_str1804, i32 -1, [1 x i8]* @p_str1804, [1 x i8]* @p_str1804, [1 x i8]* @p_str1804) nounwind

ST_28: stg_204 [1/1] 0.00ns
xilly_puts.exit:1  call void (...)* @_ssdm_op_SpecMemCore([256 x i23]* @hls_sin_cos_K1_V, [1 x i8]* @p_str1804, [14 x i8]* @p_str1806, [1 x i8]* @p_str1804, i32 -1, [1 x i8]* @p_str1804, [1 x i8]* @p_str1804, [1 x i8]* @p_str1804) nounwind

ST_28: stg_205 [1/1] 0.00ns
xilly_puts.exit:2  call void (...)* @_ssdm_op_SpecMemCore([256 x i15]* @hls_sin_cos_K2_V, [1 x i8]* @p_str1804, [14 x i8]* @p_str1806, [1 x i8]* @p_str1804, i32 -1, [1 x i8]* @p_str1804, [1 x i8]* @p_str1804, [1 x i8]* @p_str1804) nounwind

ST_28: stg_206 [1/1] 0.00ns
xilly_puts.exit:10  call void (...)* @_ssdm_op_SpecMemCore([13 x i100]* @hls_ref_4oPi_table_100_V, [1 x i8]* @p_str1804, [14 x i8]* @p_str1806, [1 x i8]* @p_str1804, i32 -1, [1 x i8]* @p_str1804, [1 x i8]* @p_str1804, [1 x i8]* @p_str1804) nounwind

ST_28: p_Result_26 [1/1] 0.00ns
xilly_puts.exit:102  %p_Result_26 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1 %p_Result_s, i31 0) nounwind

ST_28: ret_i_i_i_i [1/1] 0.00ns
xilly_puts.exit:103  %ret_i_i_i_i = bitcast i32 %p_Result_26 to float

ST_28: p_Result_27 [1/1] 0.00ns
xilly_puts.exit:105  %p_Result_27 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1 %p_Result_17, i31 %tmp_15) nounwind

ST_28: ret_i_i_i [1/1] 0.00ns
xilly_puts.exit:106  %ret_i_i_i = bitcast i32 %p_Result_27 to float

ST_28: sel_tmp5_i [1/1] 1.37ns
xilly_puts.exit:113  %sel_tmp5_i = select i1 %sel_tmp4_i, float %ret_i_i_i, float 0x7FFFFFFFE0000000

ST_28: x2 [1/1] 1.37ns
xilly_puts.exit:114  %x2 = select i1 %or_cond_i, float %ret_i_i_i_i, float %sel_tmp5_i

ST_28: y2 [1/1] 0.00ns
xilly_puts.exit:116  %y2 = bitcast float %x2 to i32

ST_28: stg_214 [1/1] 4.38ns
xilly_puts.exit:118  call void @_ssdm_op_Write.ap_fifo.i32P(i32* %out_r, i32 %y2) nounwind

ST_28: stg_215 [1/1] 0.00ns
xilly_puts.exit:119  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
