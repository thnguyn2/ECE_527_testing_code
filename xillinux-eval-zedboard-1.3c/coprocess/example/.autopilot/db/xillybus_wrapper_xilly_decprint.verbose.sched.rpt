

================================================================
== Vivado HLS Report for 'xillybus_wrapper_xilly_decprint'
================================================================
* Date:           Wed Oct 14 17:26:12 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        coprocess
* Solution:       example
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      5.26|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|    10|    no    |
        | + Loop 1.1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 2     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 2.1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 7
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
	5  / (exitcond)
3 --> 
	4  / true
4 --> 
	4  / (!tmp_4)
	2  / (tmp_4)
5 --> 
	6  / true
6 --> 
	7  / (!tmp1_i)
7 --> 
	7  / (!tmp_2)
	5  / (tmp_2)
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: v [1/1] 0.00ns
:0  %v = alloca i32, align 4

ST_1: val_read [1/1] 0.00ns
:1  %val_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %val_r) nounwind

ST_1: out [1/1] 0.00ns
:2  %out = alloca [11 x i8], align 1

ST_1: stg_11 [1/1] 1.57ns
:3  store i32 %val_read, i32* %v, align 4

ST_1: stg_12 [1/1] 1.57ns
:4  br label %1


 <State 2>: 2.39ns
ST_2: first [1/1] 0.00ns
:0  %first = phi i32 [ 9, %0 ], [ %first_1, %3 ]

ST_2: first_2 [1/1] 0.00ns
:1  %first_2 = phi i4 [ 0, %0 ], [ %i, %3 ]

ST_2: first_2_cast1 [1/1] 0.00ns
:2  %first_2_cast1 = zext i4 %first_2 to i32

ST_2: exitcond [1/1] 1.88ns
:3  %exitcond = icmp eq i4 %first_2, -6

ST_2: empty [1/1] 0.00ns
:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind

ST_2: i [1/1] 0.80ns
:5  %i = add i4 %first_2, 1

ST_2: stg_19 [1/1] 0.00ns
:6  br i1 %exitcond, label %4, label %.preheader.preheader

ST_2: tmp_3 [1/1] 0.00ns
.preheader.preheader:0  %tmp_3 = zext i4 %first_2 to i64

ST_2: powers10_addr [1/1] 0.00ns
.preheader.preheader:1  %powers10_addr = getelementptr [10 x i28]* @powers10, i64 0, i64 %tmp_3

ST_2: powers10_load [2/2] 2.39ns
.preheader.preheader:2  %powers10_load = load i28* %powers10_addr, align 4

ST_2: out_addr [1/1] 0.00ns
:0  %out_addr = getelementptr inbounds [11 x i8]* %out, i64 0, i64 10

ST_2: stg_24 [1/1] 2.39ns
:1  store i8 0, i8* %out_addr, align 1

ST_2: tmp [1/1] 0.00ns
:2  %tmp = trunc i32 %first to i5

ST_2: stg_26 [1/1] 1.57ns
:3  br label %5


 <State 3>: 2.39ns
ST_3: powers10_load [1/2] 2.39ns
.preheader.preheader:2  %powers10_load = load i28* %powers10_addr, align 4

ST_3: powers10_load_cast2 [1/1] 0.00ns
.preheader.preheader:3  %powers10_load_cast2 = sext i28 %powers10_load to i30

ST_3: powers10_load_cast [1/1] 0.00ns
.preheader.preheader:4  %powers10_load_cast = zext i30 %powers10_load_cast2 to i32

ST_3: stg_30 [1/1] 1.57ns
.preheader.preheader:5  br label %.preheader


 <State 4>: 5.26ns
ST_4: x [1/1] 0.00ns
.preheader:0  %x = phi i8 [ %x_1, %2 ], [ 0, %.preheader.preheader ]

ST_4: v_load [1/1] 0.00ns
.preheader:1  %v_load = load i32* %v, align 4

ST_4: tmp_4 [1/1] 2.52ns
.preheader:2  %tmp_4 = icmp ult i32 %v_load, %powers10_load_cast

ST_4: x_1 [1/1] 1.72ns
.preheader:3  %x_1 = add i8 %x, 1

ST_4: stg_35 [1/1] 0.00ns
.preheader:4  br i1 %tmp_4, label %3, label %2

ST_4: v_1 [1/1] 2.44ns
:0  %v_1 = sub i32 %v_load, %powers10_load_cast

ST_4: stg_37 [1/1] 1.57ns
:1  store i32 %v_1, i32* %v, align 4

ST_4: stg_38 [1/1] 0.00ns
:2  br label %.preheader

ST_4: tmp_5 [1/1] 0.00ns
:0  %tmp_5 = or i8 %x, 48

ST_4: out_addr_1 [1/1] 0.00ns
:1  %out_addr_1 = getelementptr inbounds [11 x i8]* %out, i64 0, i64 %tmp_3

ST_4: stg_41 [1/1] 2.39ns
:2  store i8 %tmp_5, i8* %out_addr_1, align 1

ST_4: tmp_6 [1/1] 2.00ns
:3  %tmp_6 = icmp ne i8 %x, 0

ST_4: tmp_7 [1/1] 2.52ns
:4  %tmp_7 = icmp sgt i32 %first, %first_2_cast1

ST_4: or_cond [1/1] 1.37ns
:5  %or_cond = and i1 %tmp_6, %tmp_7

ST_4: first_1 [1/1] 1.37ns
:6  %first_1 = select i1 %or_cond, i32 %first_2_cast1, i32 %first

ST_4: stg_46 [1/1] 0.00ns
:7  br label %1


 <State 5>: 4.11ns
ST_5: p_0_rec_i [1/1] 0.00ns
:0  %p_0_rec_i = phi i64 [ 0, %4 ], [ %p_rec_i, %6 ]

ST_5: tmp_1 [1/1] 0.00ns
:1  %tmp_1 = trunc i64 %p_0_rec_i to i5

ST_5: sum_i [1/1] 1.72ns
:2  %sum_i = add i5 %tmp_1, %tmp

ST_5: sum_i_cast [1/1] 0.00ns
:3  %sum_i_cast = zext i5 %sum_i to i64

ST_5: out_addr_2 [1/1] 0.00ns
:4  %out_addr_2 = getelementptr [11 x i8]* %out, i64 0, i64 %sum_i_cast

ST_5: out_load [2/2] 2.39ns
:5  %out_load = load i8* %out_addr_2, align 1

ST_5: p_rec_i [1/1] 3.40ns
:7  %p_rec_i = add i64 1, %p_0_rec_i


 <State 6>: 4.39ns
ST_6: out_load [1/2] 2.39ns
:5  %out_load = load i8* %out_addr_2, align 1

ST_6: tmp1_i [1/1] 2.00ns
:6  %tmp1_i = icmp eq i8 %out_load, 0

ST_6: stg_56 [1/1] 0.00ns
:8  br i1 %tmp1_i, label %xilly_puts.3.exit, label %.preheader.i

ST_6: stg_57 [1/1] 0.00ns
xilly_puts.3.exit:0  ret void


 <State 7>: 0.00ns
ST_7: debug_ready_load [1/1] 0.00ns
.preheader.i:0  %debug_ready_load = load volatile i8* @debug_ready, align 1

ST_7: tmp_2 [1/1] 0.00ns
.preheader.i:1  %tmp_2 = trunc i8 %debug_ready_load to i1

ST_7: stg_60 [1/1] 0.00ns
.preheader.i:2  br i1 %tmp_2, label %6, label %.preheader.i

ST_7: stg_61 [1/1] 0.00ns
:0  store volatile i8 %out_load, i8* @debug_out, align 1

ST_7: stg_62 [1/1] 0.00ns
:1  br label %5



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
