

================================================================
== Vivado HLS Report for 'xillybus_wrapper_big_mult_v3small_71_24_17_s'
================================================================
* Date:           Wed Oct 14 17:26:12 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        coprocess
* Solution:       example
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.47|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   55|   55|   55|   55|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   30|   30|         6|          -|          -|     5|    no    |
        |- Loop 2  |    8|    8|         2|          -|          -|     4|    no    |
        |- Loop 3  |   12|   12|         3|          -|          -|     4|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 14
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
	8  / (exitcond2)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	2  / true
8 --> 
	9  / true
9 --> 
	10  / (!exitcond3)
	11  / (exitcond3)
10 --> 
	9  / true
11 --> 
	12  / (!exitcond)
	14  / (exitcond)
12 --> 
	13  / true
13 --> 
	11  / true
14 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: b_V_read [1/1] 0.00ns
.preheader142.preheader:0  %b_V_read = call i24 @_ssdm_op_Read.ap_auto.i24(i24 %b_V)

ST_1: a_V_read [1/1] 0.00ns
.preheader142.preheader:1  %a_V_read = call i71 @_ssdm_op_Read.ap_auto.i71(i71 %a_V)

ST_1: pp_V [1/1] 0.00ns
.preheader142.preheader:2  %pp_V = alloca [5 x i41], align 8

ST_1: pps_V [1/1] 0.00ns
.preheader142.preheader:3  %pps_V = alloca [5 x i41], align 8

ST_1: tmp [1/1] 0.00ns
.preheader142.preheader:4  %tmp = zext i24 %b_V_read to i41

ST_1: stg_20 [1/1] 1.57ns
.preheader142.preheader:5  br label %.preheader142


 <State 2>: 3.09ns
ST_2: i [1/1] 0.00ns
.preheader142:0  %i = phi i3 [ %i_4, %_ifconv ], [ 0, %.preheader142.preheader ]

ST_2: exitcond2 [1/1] 1.62ns
.preheader142:1  %exitcond2 = icmp eq i3 %i, -3

ST_2: empty [1/1] 0.00ns
.preheader142:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_2: i_4 [1/1] 0.80ns
.preheader142:3  %i_4 = add i3 %i, 1

ST_2: stg_25 [1/1] 0.00ns
.preheader142:4  br i1 %exitcond2, label %arrayctor.loop1.preheader, label %_ifconv

ST_2: tmp_s [1/1] 1.62ns
_ifconv:0  %tmp_s = icmp eq i3 %i, -4

ST_2: Lo_assign [1/1] 0.00ns
_ifconv:1  %Lo_assign = call i7 @_ssdm_op_BitConcatenate.i7.i3.i1.i3(i3 %i, i1 false, i3 %i)

ST_2: tmp_2 [1/1] 1.72ns
_ifconv:2  %tmp_2 = add i7 16, %Lo_assign

ST_2: Ui [1/1] 1.37ns
_ifconv:3  %Ui = select i1 %tmp_s, i7 -58, i7 %tmp_2

ST_2: pp_V_addr [1/1] 0.00ns
arrayctor.loop1.preheader:0  %pp_V_addr = getelementptr [5 x i41]* %pp_V, i64 0, i64 0

ST_2: pp_V_load [2/2] 2.39ns
arrayctor.loop1.preheader:1  %pp_V_load = load i41* %pp_V_addr, align 16


 <State 3>: 8.29ns
ST_3: tmp_19 [1/1] 1.97ns
_ifconv:5  %tmp_19 = icmp ugt i7 %Lo_assign, %Ui

ST_3: tmp_20 [1/1] 0.00ns
_ifconv:6  %tmp_20 = call i71 @llvm.part.select.i71(i71 %a_V_read, i32 70, i32 0)

ST_3: tmp_21 [1/1] 1.72ns
_ifconv:7  %tmp_21 = sub i7 %Lo_assign, %Ui

ST_3: tmp_22 [1/1] 1.72ns
_ifconv:8  %tmp_22 = sub i7 -58, %Lo_assign

ST_3: tmp_23 [1/1] 1.72ns
_ifconv:9  %tmp_23 = sub i7 %Ui, %Lo_assign

ST_3: tmp_24 [1/1] 1.37ns
_ifconv:10  %tmp_24 = select i1 %tmp_19, i7 %tmp_21, i7 %tmp_23

ST_3: tmp_25 [1/1] 1.37ns
_ifconv:11  %tmp_25 = select i1 %tmp_19, i71 %tmp_20, i71 %a_V_read

ST_3: tmp_26 [1/1] 1.37ns
_ifconv:12  %tmp_26 = select i1 %tmp_19, i7 %tmp_22, i7 %Lo_assign

ST_3: tmp_27 [1/1] 1.72ns
_ifconv:13  %tmp_27 = sub i7 -58, %tmp_24

ST_3: tmp_28 [1/1] 0.00ns
_ifconv:14  %tmp_28 = zext i7 %tmp_26 to i71

ST_3: tmp_29 [1/1] 0.00ns
_ifconv:15  %tmp_29 = zext i7 %tmp_27 to i71

ST_3: tmp_30 [1/1] 3.58ns
_ifconv:16  %tmp_30 = lshr i71 %tmp_25, %tmp_28

ST_3: tmp_31 [1/1] 1.18ns
_ifconv:17  %tmp_31 = lshr i71 -1, %tmp_29

ST_3: p_Result_30 [1/1] 1.37ns
_ifconv:18  %p_Result_30 = and i71 %tmp_30, %tmp_31

ST_3: tmp_33 [1/1] 0.00ns
_ifconv:19  %tmp_33 = trunc i71 %p_Result_30 to i41


 <State 4>: 6.08ns
ST_4: tmp_5 [4/4] 6.08ns
_ifconv:20  %tmp_5 = mul i41 %tmp_33, %tmp


 <State 5>: 6.08ns
ST_5: tmp_5 [3/4] 6.08ns
_ifconv:20  %tmp_5 = mul i41 %tmp_33, %tmp


 <State 6>: 6.08ns
ST_6: tmp_5 [2/4] 6.08ns
_ifconv:20  %tmp_5 = mul i41 %tmp_33, %tmp


 <State 7>: 8.47ns
ST_7: tmp_3 [1/1] 0.00ns
_ifconv:4  %tmp_3 = zext i3 %i to i64

ST_7: tmp_5 [1/4] 6.08ns
_ifconv:20  %tmp_5 = mul i41 %tmp_33, %tmp

ST_7: pp_V_addr_2 [1/1] 0.00ns
_ifconv:21  %pp_V_addr_2 = getelementptr [5 x i41]* %pp_V, i64 0, i64 %tmp_3

ST_7: stg_53 [1/1] 2.39ns
_ifconv:22  store i41 %tmp_5, i41* %pp_V_addr_2, align 8

ST_7: stg_54 [1/1] 0.00ns
_ifconv:23  br label %.preheader142


 <State 8>: 4.78ns
ST_8: pp_V_load [1/2] 2.39ns
arrayctor.loop1.preheader:1  %pp_V_load = load i41* %pp_V_addr, align 16

ST_8: pps_V_addr [1/1] 0.00ns
arrayctor.loop1.preheader:2  %pps_V_addr = getelementptr [5 x i41]* %pps_V, i64 0, i64 0

ST_8: stg_57 [1/1] 2.39ns
arrayctor.loop1.preheader:3  store i41 %pp_V_load, i41* %pps_V_addr, align 16

ST_8: stg_58 [1/1] 1.57ns
arrayctor.loop1.preheader:4  br label %0


 <State 9>: 3.19ns
ST_9: i_1 [1/1] 0.00ns
:0  %i_1 = phi i3 [ 1, %arrayctor.loop1.preheader ], [ %i_3, %_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit ]

ST_9: exitcond3 [1/1] 1.62ns
:1  %exitcond3 = icmp eq i3 %i_1, -3

ST_9: empty_41 [1/1] 0.00ns
:2  %empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_9: stg_62 [1/1] 1.57ns
:3  br i1 %exitcond3, label %.preheader, label %_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit

ST_9: tmp_6 [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:0  %tmp_6 = zext i3 %i_1 to i64

ST_9: tmp_34 [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:1  %tmp_34 = trunc i3 %i_1 to i2

ST_9: tmp_7 [1/1] 0.80ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:2  %tmp_7 = add i2 -1, %tmp_34

ST_9: tmp_8 [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:3  %tmp_8 = zext i2 %tmp_7 to i64

ST_9: pps_V_addr_1 [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:4  %pps_V_addr_1 = getelementptr [5 x i41]* %pps_V, i64 0, i64 %tmp_8

ST_9: pps_V_load [2/2] 2.39ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:5  %pps_V_load = load i41* %pps_V_addr_1, align 8

ST_9: pp_V_addr_1 [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:9  %pp_V_addr_1 = getelementptr [5 x i41]* %pp_V, i64 0, i64 %tmp_6

ST_9: pp_V_load_1 [2/2] 2.39ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:10  %pp_V_load_1 = load i41* %pp_V_addr_1, align 8

ST_9: i_3 [1/1] 0.80ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:13  %i_3 = add i3 1, %i_1


 <State 10>: 7.58ns
ST_10: pps_V_load [1/2] 2.39ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:5  %pps_V_load = load i41* %pps_V_addr_1, align 8

ST_10: r_V [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:6  %r_V = call i24 @_ssdm_op_PartSelect.i24.i41.i32.i32(i41 %pps_V_load, i32 17, i32 40)

ST_10: r_V_4 [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:7  %r_V_4 = zext i24 %r_V to i41

ST_10: pps_V_addr_2 [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:8  %pps_V_addr_2 = getelementptr [5 x i41]* %pps_V, i64 0, i64 %tmp_6

ST_10: pp_V_load_1 [1/2] 2.39ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:10  %pp_V_load_1 = load i41* %pp_V_addr_1, align 8

ST_10: tmp_9 [1/1] 2.80ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:11  %tmp_9 = add i41 %r_V_4, %pp_V_load_1

ST_10: stg_78 [1/1] 2.39ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:12  store i41 %tmp_9, i41* %pps_V_addr_2, align 8

ST_10: stg_79 [1/1] 0.00ns
_ZrsILi41ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:14  br label %0


 <State 11>: 2.39ns
ST_11: p_Val2_s [1/1] 0.00ns
.preheader:0  %p_Val2_s = phi i95 [ %p_Result_29, %._crit_edge143 ], [ undef, %0 ]

ST_11: i_2 [1/1] 0.00ns
.preheader:1  %i_2 = phi i3 [ %tmp_1, %._crit_edge143 ], [ 0, %0 ]

ST_11: exitcond [1/1] 1.62ns
.preheader:2  %exitcond = icmp eq i3 %i_2, -4

ST_11: empty_42 [1/1] 0.00ns
.preheader:3  %empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_11: tmp_1 [1/1] 0.80ns
.preheader:4  %tmp_1 = add i3 %i_2, 1

ST_11: stg_85 [1/1] 0.00ns
.preheader:5  br i1 %exitcond, label %1, label %._crit_edge143

ST_11: tmp_4 [1/1] 0.00ns
._crit_edge143:6  %tmp_4 = zext i3 %i_2 to i64

ST_11: pps_V_addr_4 [1/1] 0.00ns
._crit_edge143:7  %pps_V_addr_4 = getelementptr [5 x i41]* %pps_V, i64 0, i64 %tmp_4

ST_11: p_Val2_30 [2/2] 2.39ns
._crit_edge143:8  %p_Val2_30 = load i41* %pps_V_addr_4, align 8

ST_11: pps_V_addr_3 [1/1] 0.00ns
:0  %pps_V_addr_3 = getelementptr [5 x i41]* %pps_V, i64 0, i64 4

ST_11: pps_V_load_1 [2/2] 2.39ns
:1  %pps_V_load_1 = load i41* %pps_V_addr_3, align 16


 <State 12>: 5.06ns
ST_12: tmp_36 [1/1] 0.00ns
._crit_edge143:0  %tmp_36 = trunc i3 %i_2 to i2

ST_12: Li [1/1] 0.00ns
._crit_edge143:1  %Li = call i6 @_ssdm_op_BitConcatenate.i6.i2.i1.i3(i2 %tmp_36, i1 false, i3 %i_2)

ST_12: Li_cast1 [1/1] 0.00ns
._crit_edge143:2  %Li_cast1 = zext i6 %Li to i7

ST_12: Li_cast [1/1] 0.00ns
._crit_edge143:3  %Li_cast = zext i6 %Li to i32

ST_12: Ui_1 [1/1] 1.72ns
._crit_edge143:4  %Ui_1 = add i7 16, %Li_cast1

ST_12: Ui_1_cast [1/1] 0.00ns
._crit_edge143:5  %Ui_1_cast = zext i7 %Ui_1 to i32

ST_12: p_Val2_30 [1/2] 2.39ns
._crit_edge143:8  %p_Val2_30 = load i41* %pps_V_addr_4, align 8

ST_12: tmp_37 [1/1] 0.00ns
._crit_edge143:9  %tmp_37 = trunc i41 %p_Val2_30 to i17

ST_12: tmp_38 [1/1] 1.97ns
._crit_edge143:11  %tmp_38 = icmp ugt i32 %Li_cast, %Ui_1_cast

ST_12: tmp_39 [1/1] 0.00ns
._crit_edge143:12  %tmp_39 = zext i6 %Li to i7

ST_12: tmp_40 [1/1] 1.72ns
._crit_edge143:13  %tmp_40 = sub i7 -34, %tmp_39

ST_12: tmp_41 [1/1] 1.37ns
._crit_edge143:14  %tmp_41 = select i1 %tmp_38, i7 %tmp_39, i7 %Ui_1

ST_12: tmp_42 [1/1] 1.37ns
._crit_edge143:15  %tmp_42 = select i1 %tmp_38, i7 %Ui_1, i7 %tmp_39

ST_12: tmp_43 [1/1] 1.37ns
._crit_edge143:16  %tmp_43 = select i1 %tmp_38, i7 %tmp_40, i7 %tmp_39


 <State 13>: 8.38ns
ST_13: loc_V [1/1] 0.00ns
._crit_edge143:10  %loc_V = zext i17 %tmp_37 to i95

ST_13: tmp_44 [1/1] 1.72ns
._crit_edge143:17  %tmp_44 = sub i7 -34, %tmp_41

ST_13: tmp_45 [1/1] 0.00ns
._crit_edge143:18  %tmp_45 = zext i7 %tmp_43 to i95

ST_13: tmp_46 [1/1] 0.00ns
._crit_edge143:19  %tmp_46 = zext i7 %tmp_42 to i95

ST_13: tmp_47 [1/1] 0.00ns
._crit_edge143:20  %tmp_47 = zext i7 %tmp_44 to i95

ST_13: tmp_48 [1/1] 2.77ns
._crit_edge143:21  %tmp_48 = shl i95 %loc_V, %tmp_45

ST_13: tmp_49 [1/1] 0.00ns
._crit_edge143:22  %tmp_49 = call i95 @llvm.part.select.i95(i95 %tmp_48, i32 94, i32 0)

ST_13: tmp_50 [1/1] 1.37ns
._crit_edge143:23  %tmp_50 = select i1 %tmp_38, i95 %tmp_49, i95 %tmp_48

ST_13: tmp_51 [1/1] 1.18ns
._crit_edge143:24  %tmp_51 = shl i95 -1, %tmp_46

ST_13: tmp_52 [1/1] 1.18ns
._crit_edge143:25  %tmp_52 = lshr i95 -1, %tmp_47

ST_13: p_demorgan [1/1] 1.37ns
._crit_edge143:26  %p_demorgan = and i95 %tmp_51, %tmp_52

ST_13: tmp_53 [1/1] 1.37ns
._crit_edge143:27  %tmp_53 = xor i95 %p_demorgan, -1

ST_13: tmp_54 [1/1] 1.37ns
._crit_edge143:28  %tmp_54 = and i95 %p_Val2_s, %tmp_53

ST_13: tmp_55 [1/1] 1.37ns
._crit_edge143:29  %tmp_55 = and i95 %tmp_50, %p_demorgan

ST_13: p_Result_29 [1/1] 1.37ns
._crit_edge143:30  %p_Result_29 = or i95 %tmp_54, %tmp_55

ST_13: stg_120 [1/1] 0.00ns
._crit_edge143:31  br label %.preheader


 <State 14>: 2.39ns
ST_14: pps_V_load_1 [1/2] 2.39ns
:1  %pps_V_load_1 = load i41* %pps_V_addr_3, align 16

ST_14: tmp_35 [1/1] 0.00ns
:2  %tmp_35 = trunc i41 %pps_V_load_1 to i27

ST_14: p_Result_s [1/1] 0.00ns
:3  %p_Result_s = call i95 @llvm.part.set.i95.i27(i95 %p_Val2_s, i27 %tmp_35, i32 68, i32 94)

ST_14: stg_124 [1/1] 0.00ns
:4  ret i95 %p_Result_s



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
