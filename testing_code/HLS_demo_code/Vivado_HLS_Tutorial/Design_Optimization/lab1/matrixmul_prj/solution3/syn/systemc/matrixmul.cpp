// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "matrixmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> matrixmul::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> matrixmul::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<4> matrixmul::ap_ST_pp0_stg1_fsm_2 = "100";
const sc_lv<4> matrixmul::ap_ST_st5_fsm_3 = "1000";
const sc_lv<32> matrixmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matrixmul::ap_const_lv1_1 = "1";
const sc_lv<32> matrixmul::ap_const_lv32_1 = "1";
const sc_lv<1> matrixmul::ap_const_lv1_0 = "0";
const sc_lv<32> matrixmul::ap_const_lv32_2 = "10";
const sc_lv<4> matrixmul::ap_const_lv4_0 = "0000";
const sc_lv<2> matrixmul::ap_const_lv2_0 = "00";
const sc_lv<4> matrixmul::ap_const_lv4_9 = "1001";
const sc_lv<4> matrixmul::ap_const_lv4_1 = "1";
const sc_lv<2> matrixmul::ap_const_lv2_3 = "11";
const sc_lv<2> matrixmul::ap_const_lv2_1 = "1";
const sc_lv<6> matrixmul::ap_const_lv6_2 = "10";
const sc_lv<4> matrixmul::ap_const_lv4_6 = "110";
const sc_lv<6> matrixmul::ap_const_lv6_1 = "1";
const sc_lv<3> matrixmul::ap_const_lv3_3 = "11";
const sc_lv<32> matrixmul::ap_const_lv32_3 = "11";

matrixmul::matrixmul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matrixmul_mac_muladd_8s_8s_16s_16_1_U1 = new matrixmul_mac_muladd_8s_8s_16s_16_1<1,1,8,8,16,16>("matrixmul_mac_muladd_8s_8s_16s_16_1_U1");
    matrixmul_mac_muladd_8s_8s_16s_16_1_U1->din0(grp_fu_355_p0);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U1->din1(grp_fu_355_p1);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U1->din2(grp_fu_355_p2);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U1->dout(grp_fu_355_p3);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U2 = new matrixmul_mac_muladd_8s_8s_16s_16_1<1,1,8,8,16,16>("matrixmul_mac_muladd_8s_8s_16s_16_1_U2");
    matrixmul_mac_muladd_8s_8s_16s_16_1_U2->din0(grp_fu_363_p0);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U2->din1(grp_fu_363_p1);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U2->din2(grp_fu_363_p2);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U2->dout(grp_fu_363_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( tmp_2_fu_240_p1 );
    sensitive << ( tmp_8_fu_304_p1 );

    SC_METHOD(thread_a_address1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_s_fu_260_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );

    SC_METHOD(thread_a_ce1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_3 );

    SC_METHOD(thread_ap_sig_bdd_20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_278);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_65 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_2);
    sensitive << ( ap_sig_bdd_99 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_20 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_3);
    sensitive << ( ap_sig_bdd_278 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( tmp_4_fu_245_p1 );
    sensitive << ( tmp_9_fu_315_p1 );

    SC_METHOD(thread_b_address1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_10_fu_271_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );

    SC_METHOD(thread_b_ce1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_exitcond_flatten_fu_166_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( indvar_flatten_phi_fu_136_p4 );

    SC_METHOD(thread_exitcond_fu_178_p2);
    sensitive << ( exitcond_flatten_fu_166_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( j_phi_fu_158_p4 );

    SC_METHOD(thread_grp_fu_355_p0);
    sensitive << ( b_q0 );
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_grp_fu_355_p1);
    sensitive << ( a_q0 );
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_grp_fu_355_p2);
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp1_reg_433 );

    SC_METHOD(thread_grp_fu_363_p0);
    sensitive << ( b_q0 );
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );

    SC_METHOD(thread_grp_fu_363_p1);
    sensitive << ( a_q0 );
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );

    SC_METHOD(thread_grp_fu_363_p2);
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( tmp_7_2_fu_328_p0 );
    sensitive << ( tmp_7_2_fu_328_p1 );

    SC_METHOD(thread_i_mid2_fu_198_p3);
    sensitive << ( i_phi_fu_147_p4 );
    sensitive << ( exitcond_fu_178_p2 );
    sensitive << ( i_s_fu_192_p2 );

    SC_METHOD(thread_i_phi_fu_147_p4);
    sensitive << ( i_reg_143 );
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_mid2_reg_387 );

    SC_METHOD(thread_i_s_fu_192_p2);
    sensitive << ( i_phi_fu_147_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_172_p2);
    sensitive << ( indvar_flatten_phi_fu_136_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_136_p4);
    sensitive << ( indvar_flatten_reg_132 );
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( indvar_flatten_next_reg_375 );

    SC_METHOD(thread_j_1_fu_334_p2);
    sensitive << ( j_mid2_reg_380 );

    SC_METHOD(thread_j_mid2_fu_184_p3);
    sensitive << ( j_phi_fu_158_p4 );
    sensitive << ( exitcond_fu_178_p2 );

    SC_METHOD(thread_j_phi_fu_158_p4);
    sensitive << ( j_reg_154 );
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( j_1_reg_438 );

    SC_METHOD(thread_p_addr1_cast_fu_256_p1);
    sensitive << ( p_addr1_fu_250_p2 );

    SC_METHOD(thread_p_addr1_fu_250_p2);
    sensitive << ( p_addr_cast1_fu_232_p1 );

    SC_METHOD(thread_p_addr2_cast_fu_339_p1);
    sensitive << ( p_addr2_reg_418 );

    SC_METHOD(thread_p_addr2_fu_282_p2);
    sensitive << ( p_addr_cast1_reg_392 );
    sensitive << ( tmp_2_trn_cast_fu_279_p1 );

    SC_METHOD(thread_p_addr3_fu_309_p2);
    sensitive << ( tmp_2_trn_cast2_fu_276_p1 );

    SC_METHOD(thread_p_addr4_cast_fu_300_p1);
    sensitive << ( p_addr4_fu_295_p2 );

    SC_METHOD(thread_p_addr4_fu_295_p2);
    sensitive << ( p_addr_cast1_reg_392 );

    SC_METHOD(thread_p_addr9_fu_265_p2);
    sensitive << ( tmp_2_trn_cast1_fu_210_p1 );

    SC_METHOD(thread_p_addr_cast1_fu_232_p1);
    sensitive << ( p_addr_fu_226_p2 );

    SC_METHOD(thread_p_addr_cast_fu_236_p1);
    sensitive << ( p_addr_fu_226_p2 );

    SC_METHOD(thread_p_addr_fu_226_p2);
    sensitive << ( p_shl_cast_fu_222_p1 );
    sensitive << ( tmp_trn_cast_fu_206_p1 );

    SC_METHOD(thread_p_shl_cast_fu_222_p1);
    sensitive << ( tmp_fu_214_p3 );

    SC_METHOD(thread_res_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_1_fu_342_p1 );

    SC_METHOD(thread_res_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_res_d0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( grp_fu_355_p3 );

    SC_METHOD(thread_res_we0);
    sensitive << ( exitcond_flatten_reg_371 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_tmp_10_fu_271_p1);
    sensitive << ( p_addr9_fu_265_p2 );

    SC_METHOD(thread_tmp_1_fu_342_p1);
    sensitive << ( p_addr2_cast_fu_339_p1 );

    SC_METHOD(thread_tmp_2_fu_240_p1);
    sensitive << ( p_addr_cast_fu_236_p1 );

    SC_METHOD(thread_tmp_2_trn_cast1_fu_210_p1);
    sensitive << ( j_mid2_fu_184_p3 );

    SC_METHOD(thread_tmp_2_trn_cast2_fu_276_p1);
    sensitive << ( j_mid2_reg_380 );

    SC_METHOD(thread_tmp_2_trn_cast_fu_279_p1);
    sensitive << ( j_mid2_reg_380 );

    SC_METHOD(thread_tmp_4_fu_245_p1);
    sensitive << ( j_mid2_fu_184_p3 );

    SC_METHOD(thread_tmp_7_2_fu_328_p0);
    sensitive << ( b_q1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );

    SC_METHOD(thread_tmp_7_2_fu_328_p1);
    sensitive << ( a_q1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );

    SC_METHOD(thread_tmp_8_fu_304_p1);
    sensitive << ( p_addr4_cast_fu_300_p1 );

    SC_METHOD(thread_tmp_9_fu_315_p1);
    sensitive << ( p_addr3_fu_309_p2 );

    SC_METHOD(thread_tmp_fu_214_p3);
    sensitive << ( i_mid2_fu_198_p3 );

    SC_METHOD(thread_tmp_s_fu_260_p1);
    sensitive << ( p_addr1_cast_fu_256_p1 );

    SC_METHOD(thread_tmp_trn_cast_fu_206_p1);
    sensitive << ( i_mid2_fu_198_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_flatten_fu_166_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, a_address1, "(port)a_address1");
    sc_trace(mVcdFile, a_ce1, "(port)a_ce1");
    sc_trace(mVcdFile, a_q1, "(port)a_q1");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, b_address1, "(port)b_address1");
    sc_trace(mVcdFile, b_ce1, "(port)b_ce1");
    sc_trace(mVcdFile, b_q1, "(port)b_q1");
    sc_trace(mVcdFile, res_address0, "(port)res_address0");
    sc_trace(mVcdFile, res_ce0, "(port)res_ce0");
    sc_trace(mVcdFile, res_we0, "(port)res_we0");
    sc_trace(mVcdFile, res_d0, "(port)res_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_20, "ap_sig_bdd_20");
    sc_trace(mVcdFile, indvar_flatten_reg_132, "indvar_flatten_reg_132");
    sc_trace(mVcdFile, i_reg_143, "i_reg_143");
    sc_trace(mVcdFile, j_reg_154, "j_reg_154");
    sc_trace(mVcdFile, exitcond_flatten_fu_166_p2, "exitcond_flatten_fu_166_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_371, "exitcond_flatten_reg_371");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_65, "ap_sig_bdd_65");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, indvar_flatten_next_fu_172_p2, "indvar_flatten_next_fu_172_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_375, "indvar_flatten_next_reg_375");
    sc_trace(mVcdFile, j_mid2_fu_184_p3, "j_mid2_fu_184_p3");
    sc_trace(mVcdFile, j_mid2_reg_380, "j_mid2_reg_380");
    sc_trace(mVcdFile, i_mid2_fu_198_p3, "i_mid2_fu_198_p3");
    sc_trace(mVcdFile, i_mid2_reg_387, "i_mid2_reg_387");
    sc_trace(mVcdFile, p_addr_cast1_fu_232_p1, "p_addr_cast1_fu_232_p1");
    sc_trace(mVcdFile, p_addr_cast1_reg_392, "p_addr_cast1_reg_392");
    sc_trace(mVcdFile, p_addr2_fu_282_p2, "p_addr2_fu_282_p2");
    sc_trace(mVcdFile, p_addr2_reg_418, "p_addr2_reg_418");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_2, "ap_sig_cseq_ST_pp0_stg1_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_99, "ap_sig_bdd_99");
    sc_trace(mVcdFile, grp_fu_363_p3, "grp_fu_363_p3");
    sc_trace(mVcdFile, tmp1_reg_433, "tmp1_reg_433");
    sc_trace(mVcdFile, j_1_fu_334_p2, "j_1_fu_334_p2");
    sc_trace(mVcdFile, j_1_reg_438, "j_1_reg_438");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_136_p4, "indvar_flatten_phi_fu_136_p4");
    sc_trace(mVcdFile, i_phi_fu_147_p4, "i_phi_fu_147_p4");
    sc_trace(mVcdFile, j_phi_fu_158_p4, "j_phi_fu_158_p4");
    sc_trace(mVcdFile, tmp_2_fu_240_p1, "tmp_2_fu_240_p1");
    sc_trace(mVcdFile, tmp_4_fu_245_p1, "tmp_4_fu_245_p1");
    sc_trace(mVcdFile, tmp_s_fu_260_p1, "tmp_s_fu_260_p1");
    sc_trace(mVcdFile, tmp_10_fu_271_p1, "tmp_10_fu_271_p1");
    sc_trace(mVcdFile, tmp_8_fu_304_p1, "tmp_8_fu_304_p1");
    sc_trace(mVcdFile, tmp_9_fu_315_p1, "tmp_9_fu_315_p1");
    sc_trace(mVcdFile, tmp_1_fu_342_p1, "tmp_1_fu_342_p1");
    sc_trace(mVcdFile, grp_fu_355_p3, "grp_fu_355_p3");
    sc_trace(mVcdFile, exitcond_fu_178_p2, "exitcond_fu_178_p2");
    sc_trace(mVcdFile, i_s_fu_192_p2, "i_s_fu_192_p2");
    sc_trace(mVcdFile, tmp_fu_214_p3, "tmp_fu_214_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_222_p1, "p_shl_cast_fu_222_p1");
    sc_trace(mVcdFile, tmp_trn_cast_fu_206_p1, "tmp_trn_cast_fu_206_p1");
    sc_trace(mVcdFile, p_addr_fu_226_p2, "p_addr_fu_226_p2");
    sc_trace(mVcdFile, p_addr_cast_fu_236_p1, "p_addr_cast_fu_236_p1");
    sc_trace(mVcdFile, p_addr1_fu_250_p2, "p_addr1_fu_250_p2");
    sc_trace(mVcdFile, p_addr1_cast_fu_256_p1, "p_addr1_cast_fu_256_p1");
    sc_trace(mVcdFile, tmp_2_trn_cast1_fu_210_p1, "tmp_2_trn_cast1_fu_210_p1");
    sc_trace(mVcdFile, p_addr9_fu_265_p2, "p_addr9_fu_265_p2");
    sc_trace(mVcdFile, tmp_2_trn_cast_fu_279_p1, "tmp_2_trn_cast_fu_279_p1");
    sc_trace(mVcdFile, p_addr4_fu_295_p2, "p_addr4_fu_295_p2");
    sc_trace(mVcdFile, p_addr4_cast_fu_300_p1, "p_addr4_cast_fu_300_p1");
    sc_trace(mVcdFile, tmp_2_trn_cast2_fu_276_p1, "tmp_2_trn_cast2_fu_276_p1");
    sc_trace(mVcdFile, p_addr3_fu_309_p2, "p_addr3_fu_309_p2");
    sc_trace(mVcdFile, tmp_7_2_fu_328_p0, "tmp_7_2_fu_328_p0");
    sc_trace(mVcdFile, tmp_7_2_fu_328_p1, "tmp_7_2_fu_328_p1");
    sc_trace(mVcdFile, p_addr2_cast_fu_339_p1, "p_addr2_cast_fu_339_p1");
    sc_trace(mVcdFile, grp_fu_355_p0, "grp_fu_355_p0");
    sc_trace(mVcdFile, grp_fu_355_p1, "grp_fu_355_p1");
    sc_trace(mVcdFile, grp_fu_355_p2, "grp_fu_355_p2");
    sc_trace(mVcdFile, grp_fu_363_p0, "grp_fu_363_p0");
    sc_trace(mVcdFile, grp_fu_363_p1, "grp_fu_363_p1");
    sc_trace(mVcdFile, grp_fu_363_p2, "grp_fu_363_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_3, "ap_sig_cseq_ST_st5_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_278, "ap_sig_bdd_278");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matrixmul.hdltvin.dat");
    mHdltvoutHandle.open("matrixmul.hdltvout.dat");
}

matrixmul::~matrixmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matrixmul_mac_muladd_8s_8s_16s_16_1_U1;
    delete matrixmul_mac_muladd_8s_8s_16s_16_1_U2;
}

void matrixmul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
        i_reg_143 = i_mid2_reg_387.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_143 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_132 = indvar_flatten_next_reg_375.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_132 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
        j_reg_154 = j_1_reg_438.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_154 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read())) {
        exitcond_flatten_reg_371 = exitcond_flatten_fu_166_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
        i_mid2_reg_387 = i_mid2_fu_198_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        indvar_flatten_next_reg_375 = indvar_flatten_next_fu_172_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
        j_1_reg_438 = j_1_fu_334_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
        j_mid2_reg_380 = j_mid2_fu_184_p3.read();
        p_addr_cast1_reg_392 = p_addr_cast1_fu_232_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
        p_addr2_reg_418 = p_addr2_fu_282_p2.read();
        tmp1_reg_433 = grp_fu_363_p3.read();
    }
}

void matrixmul::thread_a_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) {
            a_address0 =  (sc_lv<4>) (tmp_8_fu_304_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read())) {
            a_address0 =  (sc_lv<4>) (tmp_2_fu_240_p1.read());
        } else {
            a_address0 = "XXXX";
        }
    } else {
        a_address0 = "XXXX";
    }
}

void matrixmul::thread_a_address1() {
    a_address1 =  (sc_lv<4>) (tmp_s_fu_260_p1.read());
}

void matrixmul::thread_a_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_a_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        a_ce1 = ap_const_logic_1;
    } else {
        a_ce1 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_bdd_20() {
    ap_sig_bdd_20 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void matrixmul::thread_ap_sig_bdd_278() {
    ap_sig_bdd_278 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void matrixmul::thread_ap_sig_bdd_65() {
    ap_sig_bdd_65 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void matrixmul::thread_ap_sig_bdd_99() {
    ap_sig_bdd_99 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void matrixmul::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_65.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_pp0_stg1_fsm_2() {
    if (ap_sig_bdd_99.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_20.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_st5_fsm_3() {
    if (ap_sig_bdd_278.read()) {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    }
}

void matrixmul::thread_b_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) {
            b_address0 =  (sc_lv<4>) (tmp_9_fu_315_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read())) {
            b_address0 =  (sc_lv<4>) (tmp_4_fu_245_p1.read());
        } else {
            b_address0 = "XXXX";
        }
    } else {
        b_address0 = "XXXX";
    }
}

void matrixmul::thread_b_address1() {
    b_address1 =  (sc_lv<4>) (tmp_10_fu_271_p1.read());
}

void matrixmul::thread_b_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())))) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_b_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        b_ce1 = ap_const_logic_1;
    } else {
        b_ce1 = ap_const_logic_0;
    }
}

void matrixmul::thread_exitcond_flatten_fu_166_p2() {
    exitcond_flatten_fu_166_p2 = (!indvar_flatten_phi_fu_136_p4.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_136_p4.read() == ap_const_lv4_9);
}

void matrixmul::thread_exitcond_fu_178_p2() {
    exitcond_fu_178_p2 = (!j_phi_fu_158_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_158_p4.read() == ap_const_lv2_3);
}

void matrixmul::thread_grp_fu_355_p0() {
    grp_fu_355_p0 = b_q0.read();
}

void matrixmul::thread_grp_fu_355_p1() {
    grp_fu_355_p1 = a_q0.read();
}

void matrixmul::thread_grp_fu_355_p2() {
    grp_fu_355_p2 = tmp1_reg_433.read();
}

void matrixmul::thread_grp_fu_363_p0() {
    grp_fu_363_p0 = b_q0.read();
}

void matrixmul::thread_grp_fu_363_p1() {
    grp_fu_363_p1 = a_q0.read();
}

void matrixmul::thread_grp_fu_363_p2() {
    grp_fu_363_p2 = (!tmp_7_2_fu_328_p0.read().is_01() || !tmp_7_2_fu_328_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(tmp_7_2_fu_328_p0.read()) * sc_bigint<8>(tmp_7_2_fu_328_p1.read());
}

void matrixmul::thread_i_mid2_fu_198_p3() {
    i_mid2_fu_198_p3 = (!exitcond_fu_178_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_178_p2.read()[0].to_bool())? i_s_fu_192_p2.read(): i_phi_fu_147_p4.read());
}

void matrixmul::thread_i_phi_fu_147_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
        i_phi_fu_147_p4 = i_mid2_reg_387.read();
    } else {
        i_phi_fu_147_p4 = i_reg_143.read();
    }
}

void matrixmul::thread_i_s_fu_192_p2() {
    i_s_fu_192_p2 = (!i_phi_fu_147_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_phi_fu_147_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul::thread_indvar_flatten_next_fu_172_p2() {
    indvar_flatten_next_fu_172_p2 = (!indvar_flatten_phi_fu_136_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten_phi_fu_136_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrixmul::thread_indvar_flatten_phi_fu_136_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
        indvar_flatten_phi_fu_136_p4 = indvar_flatten_next_reg_375.read();
    } else {
        indvar_flatten_phi_fu_136_p4 = indvar_flatten_reg_132.read();
    }
}

void matrixmul::thread_j_1_fu_334_p2() {
    j_1_fu_334_p2 = (!j_mid2_reg_380.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_mid2_reg_380.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul::thread_j_mid2_fu_184_p3() {
    j_mid2_fu_184_p3 = (!exitcond_fu_178_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_178_p2.read()[0].to_bool())? ap_const_lv2_0: j_phi_fu_158_p4.read());
}

void matrixmul::thread_j_phi_fu_158_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0))) {
        j_phi_fu_158_p4 = j_1_reg_438.read();
    } else {
        j_phi_fu_158_p4 = j_reg_154.read();
    }
}

void matrixmul::thread_p_addr1_cast_fu_256_p1() {
    p_addr1_cast_fu_256_p1 = esl_sext<32,6>(p_addr1_fu_250_p2.read());
}

void matrixmul::thread_p_addr1_fu_250_p2() {
    p_addr1_fu_250_p2 = (!p_addr_cast1_fu_232_p1.read().is_01() || !ap_const_lv6_2.is_01())? sc_lv<6>(): (sc_bigint<6>(p_addr_cast1_fu_232_p1.read()) + sc_biguint<6>(ap_const_lv6_2));
}

void matrixmul::thread_p_addr2_cast_fu_339_p1() {
    p_addr2_cast_fu_339_p1 = esl_sext<32,6>(p_addr2_reg_418.read());
}

void matrixmul::thread_p_addr2_fu_282_p2() {
    p_addr2_fu_282_p2 = (!p_addr_cast1_reg_392.read().is_01() || !tmp_2_trn_cast_fu_279_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(p_addr_cast1_reg_392.read()) + sc_biguint<6>(tmp_2_trn_cast_fu_279_p1.read()));
}

void matrixmul::thread_p_addr3_fu_309_p2() {
    p_addr3_fu_309_p2 = (!tmp_2_trn_cast2_fu_276_p1.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_2_trn_cast2_fu_276_p1.read()) + sc_biguint<3>(ap_const_lv3_3));
}

void matrixmul::thread_p_addr4_cast_fu_300_p1() {
    p_addr4_cast_fu_300_p1 = esl_sext<32,6>(p_addr4_fu_295_p2.read());
}

void matrixmul::thread_p_addr4_fu_295_p2() {
    p_addr4_fu_295_p2 = (!p_addr_cast1_reg_392.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_bigint<6>(p_addr_cast1_reg_392.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void matrixmul::thread_p_addr9_fu_265_p2() {
    p_addr9_fu_265_p2 = (!tmp_2_trn_cast1_fu_210_p1.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_2_trn_cast1_fu_210_p1.read()) + sc_biguint<4>(ap_const_lv4_6));
}

void matrixmul::thread_p_addr_cast1_fu_232_p1() {
    p_addr_cast1_fu_232_p1 = esl_sext<6,5>(p_addr_fu_226_p2.read());
}

void matrixmul::thread_p_addr_cast_fu_236_p1() {
    p_addr_cast_fu_236_p1 = esl_sext<32,5>(p_addr_fu_226_p2.read());
}

void matrixmul::thread_p_addr_fu_226_p2() {
    p_addr_fu_226_p2 = (!p_shl_cast_fu_222_p1.read().is_01() || !tmp_trn_cast_fu_206_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_222_p1.read()) - sc_biguint<5>(tmp_trn_cast_fu_206_p1.read()));
}

void matrixmul::thread_p_shl_cast_fu_222_p1() {
    p_shl_cast_fu_222_p1 = esl_zext<5,4>(tmp_fu_214_p3.read());
}

void matrixmul::thread_res_address0() {
    res_address0 =  (sc_lv<4>) (tmp_1_fu_342_p1.read());
}

void matrixmul::thread_res_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        res_ce0 = ap_const_logic_1;
    } else {
        res_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_res_d0() {
    res_d0 = grp_fu_355_p3.read();
}

void matrixmul::thread_res_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_371.read(), ap_const_lv1_0)))) {
        res_we0 = ap_const_logic_1;
    } else {
        res_we0 = ap_const_logic_0;
    }
}

void matrixmul::thread_tmp_10_fu_271_p1() {
    tmp_10_fu_271_p1 = esl_zext<64,4>(p_addr9_fu_265_p2.read());
}

void matrixmul::thread_tmp_1_fu_342_p1() {
    tmp_1_fu_342_p1 = esl_zext<64,32>(p_addr2_cast_fu_339_p1.read());
}

void matrixmul::thread_tmp_2_fu_240_p1() {
    tmp_2_fu_240_p1 = esl_zext<64,32>(p_addr_cast_fu_236_p1.read());
}

void matrixmul::thread_tmp_2_trn_cast1_fu_210_p1() {
    tmp_2_trn_cast1_fu_210_p1 = esl_zext<4,2>(j_mid2_fu_184_p3.read());
}

void matrixmul::thread_tmp_2_trn_cast2_fu_276_p1() {
    tmp_2_trn_cast2_fu_276_p1 = esl_zext<3,2>(j_mid2_reg_380.read());
}

void matrixmul::thread_tmp_2_trn_cast_fu_279_p1() {
    tmp_2_trn_cast_fu_279_p1 = esl_zext<6,2>(j_mid2_reg_380.read());
}

void matrixmul::thread_tmp_4_fu_245_p1() {
    tmp_4_fu_245_p1 = esl_zext<64,2>(j_mid2_fu_184_p3.read());
}

void matrixmul::thread_tmp_7_2_fu_328_p0() {
    tmp_7_2_fu_328_p0 = b_q1.read();
}

void matrixmul::thread_tmp_7_2_fu_328_p1() {
    tmp_7_2_fu_328_p1 = a_q1.read();
}

void matrixmul::thread_tmp_8_fu_304_p1() {
    tmp_8_fu_304_p1 = esl_zext<64,32>(p_addr4_cast_fu_300_p1.read());
}

void matrixmul::thread_tmp_9_fu_315_p1() {
    tmp_9_fu_315_p1 = esl_zext<64,3>(p_addr3_fu_309_p2.read());
}

void matrixmul::thread_tmp_fu_214_p3() {
    tmp_fu_214_p3 = esl_concat<2,2>(i_mid2_fu_198_p3.read(), ap_const_lv2_0);
}

void matrixmul::thread_tmp_s_fu_260_p1() {
    tmp_s_fu_260_p1 = esl_zext<64,32>(p_addr1_cast_fu_256_p1.read());
}

void matrixmul::thread_tmp_trn_cast_fu_206_p1() {
    tmp_trn_cast_fu_206_p1 = esl_zext<5,2>(i_mid2_fu_198_p3.read());
}

void matrixmul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void matrixmul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address0\" :  \"" << a_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce0\" :  \"" << a_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q0\" :  \"" << a_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address1\" :  \"" << a_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce1\" :  \"" << a_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q1\" :  \"" << a_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address0\" :  \"" << b_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce0\" :  \"" << b_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q0\" :  \"" << b_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address1\" :  \"" << b_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce1\" :  \"" << b_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q1\" :  \"" << b_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_address0\" :  \"" << res_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_ce0\" :  \"" << res_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_we0\" :  \"" << res_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_d0\" :  \"" << res_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

