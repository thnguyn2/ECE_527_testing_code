// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "matrixmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> matrixmul::ap_ST_st1_fsm_0 = "1";
const sc_lv<5> matrixmul::ap_ST_st2_fsm_1 = "10";
const sc_lv<5> matrixmul::ap_ST_st3_fsm_2 = "100";
const sc_lv<5> matrixmul::ap_ST_st4_fsm_3 = "1000";
const sc_lv<5> matrixmul::ap_ST_st5_fsm_4 = "10000";
const sc_lv<32> matrixmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matrixmul::ap_const_lv1_1 = "1";
const sc_lv<32> matrixmul::ap_const_lv32_1 = "1";
const sc_lv<1> matrixmul::ap_const_lv1_0 = "0";
const sc_lv<32> matrixmul::ap_const_lv32_2 = "10";
const sc_lv<32> matrixmul::ap_const_lv32_4 = "100";
const sc_lv<4> matrixmul::ap_const_lv4_0 = "0000";
const sc_lv<2> matrixmul::ap_const_lv2_0 = "00";
const sc_lv<32> matrixmul::ap_const_lv32_3 = "11";
const sc_lv<16> matrixmul::ap_const_lv16_0 = "0000000000000000";
const sc_lv<4> matrixmul::ap_const_lv4_9 = "1001";
const sc_lv<4> matrixmul::ap_const_lv4_1 = "1";
const sc_lv<2> matrixmul::ap_const_lv2_3 = "11";
const sc_lv<2> matrixmul::ap_const_lv2_1 = "1";

matrixmul::matrixmul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matrixmul_mac_muladd_8s_8s_16ns_16_1_U1 = new matrixmul_mac_muladd_8s_8s_16ns_16_1<1,1,8,8,16,16>("matrixmul_mac_muladd_8s_8s_16ns_16_1_U1");
    matrixmul_mac_muladd_8s_8s_16ns_16_1_U1->din0(grp_fu_306_p0);
    matrixmul_mac_muladd_8s_8s_16ns_16_1_U1->din1(grp_fu_306_p1);
    matrixmul_mac_muladd_8s_8s_16ns_16_1_U1->din2(grp_fu_306_p2);
    matrixmul_mac_muladd_8s_8s_16ns_16_1_U1->dout(grp_fu_306_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_2_fu_252_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( exitcond_flatten_fu_138_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond_flatten_fu_138_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_sig_bdd_115);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_95);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_21 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_55 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_79 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_115 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_95 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_s_fu_288_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_exitcond1_fu_150_p2);
    sensitive << ( exitcond_flatten_fu_138_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( j_reg_115 );

    SC_METHOD(thread_exitcond_flatten_fu_138_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( indvar_flatten_reg_93 );

    SC_METHOD(thread_exitcond_fu_223_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( k_reg_126 );

    SC_METHOD(thread_grp_fu_306_p0);
    sensitive << ( b_q0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_fu_306_p1);
    sensitive << ( a_q0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_fu_306_p2);
    sensitive << ( res_q0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_i_mid2_fu_170_p3);
    sensitive << ( i_reg_104 );
    sensitive << ( exitcond1_fu_150_p2 );
    sensitive << ( i_s_fu_164_p2 );

    SC_METHOD(thread_i_s_fu_164_p2);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_indvar_flatten_next_fu_144_p2);
    sensitive << ( indvar_flatten_reg_93 );

    SC_METHOD(thread_j_1_fu_301_p2);
    sensitive << ( j_mid2_reg_324 );

    SC_METHOD(thread_j_mid2_fu_156_p3);
    sensitive << ( j_reg_115 );
    sensitive << ( exitcond1_fu_150_p2 );

    SC_METHOD(thread_k_1_fu_229_p2);
    sensitive << ( k_reg_126 );

    SC_METHOD(thread_p_addr1_cast_fu_248_p1);
    sensitive << ( p_addr1_fu_243_p2 );

    SC_METHOD(thread_p_addr1_fu_243_p2);
    sensitive << ( p_addr7_cast_reg_339 );
    sensitive << ( tmp_4_trn_cast1_fu_235_p1 );

    SC_METHOD(thread_p_addr3_cast_fu_275_p1);
    sensitive << ( p_addr3_fu_269_p2 );

    SC_METHOD(thread_p_addr3_fu_269_p2);
    sensitive << ( p_shl9_cast_fu_265_p1 );
    sensitive << ( tmp_4_trn_cast_fu_239_p1 );

    SC_METHOD(thread_p_addr4_cast_fu_284_p1);
    sensitive << ( p_addr4_fu_279_p2 );

    SC_METHOD(thread_p_addr4_fu_279_p2);
    sensitive << ( tmp_2_trn6_cast_reg_334 );
    sensitive << ( p_addr3_cast_fu_275_p1 );

    SC_METHOD(thread_p_addr7_cast_fu_204_p1);
    sensitive << ( p_addr7_fu_198_p2 );

    SC_METHOD(thread_p_addr7_fu_198_p2);
    sensitive << ( p_shl_cast_fu_194_p1 );
    sensitive << ( tmp_trn5_cast_fu_178_p1 );

    SC_METHOD(thread_p_addr8_cast_fu_214_p1);
    sensitive << ( p_addr8_fu_208_p2 );

    SC_METHOD(thread_p_addr8_fu_208_p2);
    sensitive << ( tmp_2_trn6_cast_fu_182_p1 );
    sensitive << ( p_addr7_cast_fu_204_p1 );

    SC_METHOD(thread_p_shl9_cast_fu_265_p1);
    sensitive << ( tmp_4_fu_257_p3 );

    SC_METHOD(thread_p_shl_cast_fu_194_p1);
    sensitive << ( tmp_fu_186_p3 );

    SC_METHOD(thread_res_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( res_addr_reg_344 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_1_fu_218_p1 );

    SC_METHOD(thread_res_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_res_d0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( grp_fu_306_p3 );

    SC_METHOD(thread_res_we0);
    sensitive << ( exitcond_flatten_fu_138_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_tmp_1_fu_218_p1);
    sensitive << ( p_addr8_cast_fu_214_p1 );

    SC_METHOD(thread_tmp_2_fu_252_p1);
    sensitive << ( p_addr1_cast_fu_248_p1 );

    SC_METHOD(thread_tmp_2_trn6_cast_fu_182_p1);
    sensitive << ( j_mid2_fu_156_p3 );

    SC_METHOD(thread_tmp_4_fu_257_p3);
    sensitive << ( k_reg_126 );

    SC_METHOD(thread_tmp_4_trn_cast1_fu_235_p1);
    sensitive << ( k_reg_126 );

    SC_METHOD(thread_tmp_4_trn_cast_fu_239_p1);
    sensitive << ( k_reg_126 );

    SC_METHOD(thread_tmp_fu_186_p3);
    sensitive << ( i_mid2_fu_170_p3 );

    SC_METHOD(thread_tmp_s_fu_288_p1);
    sensitive << ( p_addr4_cast_fu_284_p1 );

    SC_METHOD(thread_tmp_trn5_cast_fu_178_p1);
    sensitive << ( i_mid2_fu_170_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_flatten_fu_138_p2 );
    sensitive << ( exitcond_fu_223_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, res_address0, "(port)res_address0");
    sc_trace(mVcdFile, res_ce0, "(port)res_ce0");
    sc_trace(mVcdFile, res_we0, "(port)res_we0");
    sc_trace(mVcdFile, res_d0, "(port)res_d0");
    sc_trace(mVcdFile, res_q0, "(port)res_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_21, "ap_sig_bdd_21");
    sc_trace(mVcdFile, exitcond_flatten_fu_138_p2, "exitcond_flatten_fu_138_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_55, "ap_sig_bdd_55");
    sc_trace(mVcdFile, indvar_flatten_next_fu_144_p2, "indvar_flatten_next_fu_144_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_319, "indvar_flatten_next_reg_319");
    sc_trace(mVcdFile, j_mid2_fu_156_p3, "j_mid2_fu_156_p3");
    sc_trace(mVcdFile, j_mid2_reg_324, "j_mid2_reg_324");
    sc_trace(mVcdFile, i_mid2_fu_170_p3, "i_mid2_fu_170_p3");
    sc_trace(mVcdFile, i_mid2_reg_329, "i_mid2_reg_329");
    sc_trace(mVcdFile, tmp_2_trn6_cast_fu_182_p1, "tmp_2_trn6_cast_fu_182_p1");
    sc_trace(mVcdFile, tmp_2_trn6_cast_reg_334, "tmp_2_trn6_cast_reg_334");
    sc_trace(mVcdFile, p_addr7_cast_fu_204_p1, "p_addr7_cast_fu_204_p1");
    sc_trace(mVcdFile, p_addr7_cast_reg_339, "p_addr7_cast_reg_339");
    sc_trace(mVcdFile, res_addr_reg_344, "res_addr_reg_344");
    sc_trace(mVcdFile, k_1_fu_229_p2, "k_1_fu_229_p2");
    sc_trace(mVcdFile, k_1_reg_352, "k_1_reg_352");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_79, "ap_sig_bdd_79");
    sc_trace(mVcdFile, exitcond_fu_223_p2, "exitcond_fu_223_p2");
    sc_trace(mVcdFile, j_1_fu_301_p2, "j_1_fu_301_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_95, "ap_sig_bdd_95");
    sc_trace(mVcdFile, indvar_flatten_reg_93, "indvar_flatten_reg_93");
    sc_trace(mVcdFile, i_reg_104, "i_reg_104");
    sc_trace(mVcdFile, j_reg_115, "j_reg_115");
    sc_trace(mVcdFile, k_reg_126, "k_reg_126");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_115, "ap_sig_bdd_115");
    sc_trace(mVcdFile, tmp_1_fu_218_p1, "tmp_1_fu_218_p1");
    sc_trace(mVcdFile, tmp_2_fu_252_p1, "tmp_2_fu_252_p1");
    sc_trace(mVcdFile, tmp_s_fu_288_p1, "tmp_s_fu_288_p1");
    sc_trace(mVcdFile, grp_fu_306_p3, "grp_fu_306_p3");
    sc_trace(mVcdFile, exitcond1_fu_150_p2, "exitcond1_fu_150_p2");
    sc_trace(mVcdFile, i_s_fu_164_p2, "i_s_fu_164_p2");
    sc_trace(mVcdFile, tmp_fu_186_p3, "tmp_fu_186_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_194_p1, "p_shl_cast_fu_194_p1");
    sc_trace(mVcdFile, tmp_trn5_cast_fu_178_p1, "tmp_trn5_cast_fu_178_p1");
    sc_trace(mVcdFile, p_addr7_fu_198_p2, "p_addr7_fu_198_p2");
    sc_trace(mVcdFile, p_addr8_fu_208_p2, "p_addr8_fu_208_p2");
    sc_trace(mVcdFile, p_addr8_cast_fu_214_p1, "p_addr8_cast_fu_214_p1");
    sc_trace(mVcdFile, tmp_4_trn_cast1_fu_235_p1, "tmp_4_trn_cast1_fu_235_p1");
    sc_trace(mVcdFile, p_addr1_fu_243_p2, "p_addr1_fu_243_p2");
    sc_trace(mVcdFile, p_addr1_cast_fu_248_p1, "p_addr1_cast_fu_248_p1");
    sc_trace(mVcdFile, tmp_4_fu_257_p3, "tmp_4_fu_257_p3");
    sc_trace(mVcdFile, p_shl9_cast_fu_265_p1, "p_shl9_cast_fu_265_p1");
    sc_trace(mVcdFile, tmp_4_trn_cast_fu_239_p1, "tmp_4_trn_cast_fu_239_p1");
    sc_trace(mVcdFile, p_addr3_fu_269_p2, "p_addr3_fu_269_p2");
    sc_trace(mVcdFile, p_addr3_cast_fu_275_p1, "p_addr3_cast_fu_275_p1");
    sc_trace(mVcdFile, p_addr4_fu_279_p2, "p_addr4_fu_279_p2");
    sc_trace(mVcdFile, p_addr4_cast_fu_284_p1, "p_addr4_cast_fu_284_p1");
    sc_trace(mVcdFile, grp_fu_306_p0, "grp_fu_306_p0");
    sc_trace(mVcdFile, grp_fu_306_p1, "grp_fu_306_p1");
    sc_trace(mVcdFile, grp_fu_306_p2, "grp_fu_306_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matrixmul.hdltvin.dat");
    mHdltvoutHandle.open("matrixmul.hdltvout.dat");
}

matrixmul::~matrixmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matrixmul_mac_muladd_8s_8s_16ns_16_1_U1;
}

void matrixmul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        i_reg_104 = i_mid2_reg_329.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_104 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        indvar_flatten_reg_93 = indvar_flatten_next_reg_319.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_93 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        j_reg_115 = j_1_fu_301_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_115 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        k_reg_126 = k_1_reg_352.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond_flatten_fu_138_p2.read(), ap_const_lv1_0))) {
        k_reg_126 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_138_p2.read(), ap_const_lv1_0))) {
        i_mid2_reg_329 = i_mid2_fu_170_p3.read();
        j_mid2_reg_324 = j_mid2_fu_156_p3.read();
        p_addr7_cast_reg_339 = p_addr7_cast_fu_204_p1.read();
        res_addr_reg_344 =  (sc_lv<4>) (tmp_1_fu_218_p1.read());
        tmp_2_trn6_cast_reg_334 = tmp_2_trn6_cast_fu_182_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        indvar_flatten_next_reg_319 = indvar_flatten_next_fu_144_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        k_1_reg_352 = k_1_fu_229_p2.read();
    }
}

void matrixmul::thread_a_address0() {
    a_address0 =  (sc_lv<4>) (tmp_2_fu_252_p1.read());
}

void matrixmul::thread_a_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond_flatten_fu_138_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond_flatten_fu_138_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_bdd_115() {
    ap_sig_bdd_115 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void matrixmul::thread_ap_sig_bdd_21() {
    ap_sig_bdd_21 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void matrixmul::thread_ap_sig_bdd_55() {
    ap_sig_bdd_55 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void matrixmul::thread_ap_sig_bdd_79() {
    ap_sig_bdd_79 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void matrixmul::thread_ap_sig_bdd_95() {
    ap_sig_bdd_95 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void matrixmul::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_21.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_55.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_79.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_115.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_95.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void matrixmul::thread_b_address0() {
    b_address0 =  (sc_lv<4>) (tmp_s_fu_288_p1.read());
}

void matrixmul::thread_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_exitcond1_fu_150_p2() {
    exitcond1_fu_150_p2 = (!j_reg_115.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_115.read() == ap_const_lv2_3);
}

void matrixmul::thread_exitcond_flatten_fu_138_p2() {
    exitcond_flatten_fu_138_p2 = (!indvar_flatten_reg_93.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_93.read() == ap_const_lv4_9);
}

void matrixmul::thread_exitcond_fu_223_p2() {
    exitcond_fu_223_p2 = (!k_reg_126.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_126.read() == ap_const_lv2_3);
}

void matrixmul::thread_grp_fu_306_p0() {
    grp_fu_306_p0 = b_q0.read();
}

void matrixmul::thread_grp_fu_306_p1() {
    grp_fu_306_p1 = a_q0.read();
}

void matrixmul::thread_grp_fu_306_p2() {
    grp_fu_306_p2 = res_q0.read();
}

void matrixmul::thread_i_mid2_fu_170_p3() {
    i_mid2_fu_170_p3 = (!exitcond1_fu_150_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond1_fu_150_p2.read()[0].to_bool())? i_s_fu_164_p2.read(): i_reg_104.read());
}

void matrixmul::thread_i_s_fu_164_p2() {
    i_s_fu_164_p2 = (!i_reg_104.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_104.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul::thread_indvar_flatten_next_fu_144_p2() {
    indvar_flatten_next_fu_144_p2 = (!indvar_flatten_reg_93.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten_reg_93.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrixmul::thread_j_1_fu_301_p2() {
    j_1_fu_301_p2 = (!j_mid2_reg_324.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_mid2_reg_324.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul::thread_j_mid2_fu_156_p3() {
    j_mid2_fu_156_p3 = (!exitcond1_fu_150_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond1_fu_150_p2.read()[0].to_bool())? ap_const_lv2_0: j_reg_115.read());
}

void matrixmul::thread_k_1_fu_229_p2() {
    k_1_fu_229_p2 = (!k_reg_126.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_reg_126.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul::thread_p_addr1_cast_fu_248_p1() {
    p_addr1_cast_fu_248_p1 = esl_sext<32,6>(p_addr1_fu_243_p2.read());
}

void matrixmul::thread_p_addr1_fu_243_p2() {
    p_addr1_fu_243_p2 = (!p_addr7_cast_reg_339.read().is_01() || !tmp_4_trn_cast1_fu_235_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(p_addr7_cast_reg_339.read()) + sc_biguint<6>(tmp_4_trn_cast1_fu_235_p1.read()));
}

void matrixmul::thread_p_addr3_cast_fu_275_p1() {
    p_addr3_cast_fu_275_p1 = esl_sext<6,5>(p_addr3_fu_269_p2.read());
}

void matrixmul::thread_p_addr3_fu_269_p2() {
    p_addr3_fu_269_p2 = (!p_shl9_cast_fu_265_p1.read().is_01() || !tmp_4_trn_cast_fu_239_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl9_cast_fu_265_p1.read()) - sc_biguint<5>(tmp_4_trn_cast_fu_239_p1.read()));
}

void matrixmul::thread_p_addr4_cast_fu_284_p1() {
    p_addr4_cast_fu_284_p1 = esl_sext<32,6>(p_addr4_fu_279_p2.read());
}

void matrixmul::thread_p_addr4_fu_279_p2() {
    p_addr4_fu_279_p2 = (!p_addr3_cast_fu_275_p1.read().is_01() || !tmp_2_trn6_cast_reg_334.read().is_01())? sc_lv<6>(): (sc_bigint<6>(p_addr3_cast_fu_275_p1.read()) + sc_biguint<6>(tmp_2_trn6_cast_reg_334.read()));
}

void matrixmul::thread_p_addr7_cast_fu_204_p1() {
    p_addr7_cast_fu_204_p1 = esl_sext<6,5>(p_addr7_fu_198_p2.read());
}

void matrixmul::thread_p_addr7_fu_198_p2() {
    p_addr7_fu_198_p2 = (!p_shl_cast_fu_194_p1.read().is_01() || !tmp_trn5_cast_fu_178_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_194_p1.read()) - sc_biguint<5>(tmp_trn5_cast_fu_178_p1.read()));
}

void matrixmul::thread_p_addr8_cast_fu_214_p1() {
    p_addr8_cast_fu_214_p1 = esl_sext<32,6>(p_addr8_fu_208_p2.read());
}

void matrixmul::thread_p_addr8_fu_208_p2() {
    p_addr8_fu_208_p2 = (!p_addr7_cast_fu_204_p1.read().is_01() || !tmp_2_trn6_cast_fu_182_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(p_addr7_cast_fu_204_p1.read()) + sc_biguint<6>(tmp_2_trn6_cast_fu_182_p1.read()));
}

void matrixmul::thread_p_shl9_cast_fu_265_p1() {
    p_shl9_cast_fu_265_p1 = esl_zext<5,4>(tmp_4_fu_257_p3.read());
}

void matrixmul::thread_p_shl_cast_fu_194_p1() {
    p_shl_cast_fu_194_p1 = esl_zext<5,4>(tmp_fu_186_p3.read());
}

void matrixmul::thread_res_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        res_address0 =  (sc_lv<4>) (tmp_1_fu_218_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        res_address0 = res_addr_reg_344.read();
    } else {
        res_address0 = "XXXX";
    }
}

void matrixmul::thread_res_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        res_ce0 = ap_const_logic_1;
    } else {
        res_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_res_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        res_d0 = grp_fu_306_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        res_d0 = ap_const_lv16_0;
    } else {
        res_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void matrixmul::thread_res_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_fu_138_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        res_we0 = ap_const_logic_1;
    } else {
        res_we0 = ap_const_logic_0;
    }
}

void matrixmul::thread_tmp_1_fu_218_p1() {
    tmp_1_fu_218_p1 = esl_zext<64,32>(p_addr8_cast_fu_214_p1.read());
}

void matrixmul::thread_tmp_2_fu_252_p1() {
    tmp_2_fu_252_p1 = esl_zext<64,32>(p_addr1_cast_fu_248_p1.read());
}

void matrixmul::thread_tmp_2_trn6_cast_fu_182_p1() {
    tmp_2_trn6_cast_fu_182_p1 = esl_zext<6,2>(j_mid2_fu_156_p3.read());
}

void matrixmul::thread_tmp_4_fu_257_p3() {
    tmp_4_fu_257_p3 = esl_concat<2,2>(k_reg_126.read(), ap_const_lv2_0);
}

void matrixmul::thread_tmp_4_trn_cast1_fu_235_p1() {
    tmp_4_trn_cast1_fu_235_p1 = esl_zext<6,2>(k_reg_126.read());
}

void matrixmul::thread_tmp_4_trn_cast_fu_239_p1() {
    tmp_4_trn_cast_fu_239_p1 = esl_zext<5,2>(k_reg_126.read());
}

void matrixmul::thread_tmp_fu_186_p3() {
    tmp_fu_186_p3 = esl_concat<2,2>(i_mid2_fu_170_p3.read(), ap_const_lv2_0);
}

void matrixmul::thread_tmp_s_fu_288_p1() {
    tmp_s_fu_288_p1 = esl_zext<64,32>(p_addr4_cast_fu_284_p1.read());
}

void matrixmul::thread_tmp_trn5_cast_fu_178_p1() {
    tmp_trn5_cast_fu_178_p1 = esl_zext<5,2>(i_mid2_fu_170_p3.read());
}

void matrixmul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond_flatten_fu_138_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_223_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void matrixmul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address0\" :  \"" << a_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce0\" :  \"" << a_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q0\" :  \"" << a_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address0\" :  \"" << b_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce0\" :  \"" << b_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q0\" :  \"" << b_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_address0\" :  \"" << res_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_ce0\" :  \"" << res_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_we0\" :  \"" << res_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_d0\" :  \"" << res_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"res_q0\" :  \"" << res_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

